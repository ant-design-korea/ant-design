{"version":3,"sources":["components/tree-select/demo/checkable.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/tree-select/demo/checkable.tsx?watch=parent';import React, { useState } from 'react';\nimport { TreeSelect } from 'antd';\n\nconst { SHOW_PARENT } = TreeSelect;\n\nconst treeData = [\n  {\n    title: 'Node1',\n    value: '0-0',\n    key: '0-0',\n    children: [\n      {\n        title: 'Child Node1',\n        value: '0-0-0',\n        key: '0-0-0',\n      },\n    ],\n  },\n  {\n    title: 'Node2',\n    value: '0-1',\n    key: '0-1',\n    children: [\n      {\n        title: 'Child Node3',\n        value: '0-1-0',\n        key: '0-1-0',\n      },\n      {\n        title: 'Child Node4',\n        value: '0-1-1',\n        key: '0-1-1',\n      },\n      {\n        title: 'Child Node5',\n        value: '0-1-2',\n        key: '0-1-2',\n      },\n    ],\n  },\n];\n\nconst App: React.FC = () => {\n  const [value, setValue] = useState(['0-0-0']);\n\n  const onChange = (newValue: string[]) => {\n    console.log('onChange ', newValue);\n    setValue(newValue);\n  };\n\n  const tProps = {\n    treeData,\n    value,\n    onChange,\n    treeCheckable: true,\n    showCheckedStrategy: SHOW_PARENT,\n    placeholder: 'Please select',\n    style: {\n      width: '100%',\n    },\n  };\n\n  return <TreeSelect {...tProps} />;\n};\n\nexport default App;\n"],"names":[],"mappings":"qOAiEA,+CAAA,4BAjEO,oBAAiI,gBAC7G,YAE3B,GAAM,CAAE,YAAA,CAAW,CAAE,CAAG,YAAU,CAE5B,EAAW,CACf,CACE,MAAO,QACP,MAAO,MACP,IAAK,MACL,SAAU,CACR,CACE,MAAO,cACP,MAAO,QACP,IAAK,OACP,EACD,AACH,EACA,CACE,MAAO,QACP,MAAO,MACP,IAAK,MACL,SAAU,CACR,CACE,MAAO,cACP,MAAO,QACP,IAAK,OACP,EACA,CACE,MAAO,cACP,MAAO,QACP,IAAK,OACP,EACA,CACE,MAAO,cACP,MAAO,QACP,IAAK,OACP,EACD,AACH,EACD,KAyBD,EAvBsB,KACpB,GAAM,CAAC,EAAO,EAAS,CAAG,GAAA,UAAQ,EAAC,CAAC,QAAQ,EAmB5C,MAAO,UAAC,YAAU,EAXhB,SAAA,EACA,MAAA,EACA,SARe,AAAC,IAChB,QAAQ,GAAG,CAAC,YAAa,GACzB,EAAS,GACX,EAME,cAAe,CAAA,EACf,oBAAqB,EACrB,YAAa,gBACb,MAAO,CACL,MAAO,MACT,IAIJ"}