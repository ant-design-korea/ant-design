{"version":3,"sources":["docs/spec/proximity.zh-CN.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/ant-design/ant-design/docs/spec/proximity.zh-CN.md?watch=parent';\n  export const texts = [{\"value\":\"如果信息之间关联性越高，它们之间的距离就应该越接近，也越像一个视觉单元；反之，则它们的距离就应该越远，也越像多个视觉单元。亲密性的根本目的是实现组织性，让用户对页面结构和信息层次一目了然。\",\"paraId\":0},{\"value\":\"\\n  \",\"paraId\":1},{\"value\":\"通过「小号间距」、「中号间距」、「大号间距」这三种规格来划分信息层次结构。\",\"paraId\":2},{\"value\":\"\\n  \",\"paraId\":3},{\"value\":\"在这三种规格不适用的情况下，可以通过加减「基础间距」的倍数，或者增加元素来拉开信息层次。\",\"paraId\":4},{\"value\":\"注：在 Ant Design 中，\",\"paraId\":5},{\"value\":\"y = 8 + 8 * n\",\"paraId\":5},{\"value\":\"。其中，\",\"paraId\":5},{\"value\":\"n >= 0\",\"paraId\":5},{\"value\":\"，y 是纵向间距，8 是「基础间距」。\",\"paraId\":5},{\"value\":\"\\n  \",\"paraId\":6},{\"value\":\"为了适用不同尺寸的屏幕，在横向采用栅格布局来排布组件，从而保证布局的灵活性。\",\"paraId\":7},{\"value\":\"\\n  \",\"paraId\":8},{\"value\":\"在一个组件内部，元素的横向间距也应该有所不同。\",\"paraId\":9}];\n  "],"names":[],"mappings":"qOAEe,6CAAA,QADN,YACA,IAAM,EAAQ,CAAC,CAAC,MAAQ,ujBAAiG,OAAS,CAAC,EAAE,CAAC,MAAQ,OAAO,OAAS,CAAC,EAAE,CAAC,MAAQ,iOAAwC,OAAS,CAAC,EAAE,CAAC,MAAQ,OAAO,OAAS,CAAC,EAAE,CAAC,MAAQ,2QAA+C,OAAS,CAAC,EAAE,CAAC,MAAQ,6CAAoB,OAAS,CAAC,EAAE,CAAC,MAAQ,gBAAgB,OAAS,CAAC,EAAE,CAAC,MAAQ,2BAAO,OAAS,CAAC,EAAE,CAAC,MAAQ,SAAS,OAAS,CAAC,EAAE,CAAC,MAAQ,iGAAsB,OAAS,CAAC,EAAE,CAAC,MAAQ,OAAO,OAAS,CAAC,EAAE,CAAC,MAAQ,uOAAyC,OAAS,CAAC,EAAE,CAAC,MAAQ,OAAO,OAAS,CAAC,EAAE,CAAC,MAAQ,6IAA0B,OAAS,CAAC,EAAE"}