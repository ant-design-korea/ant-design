{"version":3,"sources":["docs/blog/line-ellipsis.zh-CN.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/ant-design/ant-design/docs/blog/line-ellipsis.zh-CN.md?watch=parent';\n  export const texts = [{\"value\":\"Ant Design 的 Typography 组件提供了一个 \",\"paraId\":0},{\"value\":\"ellipsis\",\"paraId\":0},{\"value\":\" 属性，用于在文本溢出时显示省略号。它支持通过配置 \",\"paraId\":0},{\"value\":\"ellipsis.rows\",\"paraId\":0},{\"value\":\" 来限定显示的行数。如果是纯粹的文本内容，它会通过 CSS \",\"paraId\":0},{\"value\":\"-webkit-line-clamp\",\"paraId\":0},{\"value\":\" 属性来实现。虽然有 \",\"paraId\":0},{\"value\":\"-webkit-\",\"paraId\":0},{\"value\":\" 前缀，但是在现代浏览器中都已经得到了很好的支持。\",\"paraId\":0},{\"value\":\"<div\\n  style={{\\n    display: '-webkit-box',\\n    overflow: 'hidden',\\n    WebkitBoxOrient: 'vertical',\\n    webkitLineClamp: 3,\\n  }}\\n>\\n  {text}\\n</div>\\n\",\"paraId\":1},{\"value\":\"然而 CSS 实现也有限制，那就是不支持对省略符号的修改以及对附加操作按钮的支持（比如置于最后的 复制、编辑、展开 等按钮）。\",\"paraId\":2,\"tocIndex\":0},{\"value\":\"操作按钮会被一同截断，无法显示。\",\"paraId\":3,\"tocIndex\":0},{\"value\":\"虽然有一些黑魔法手段可以通过诸如 \",\"paraId\":4,\"tocIndex\":0},{\"value\":\"float\",\"paraId\":4,\"tocIndex\":0},{\"value\":\" 样式来实现，但是这样的方式在不同的浏览器中需要做针对性处理。此外仍然无法解决自定义省略符号的问题。因而目前最好的实现方式仍然是通过 JS 来实现。\",\"paraId\":4,\"tocIndex\":0},{\"value\":\"JS 中，我们通过二分法可以快速的找到文本的截断位置。只要根据 \",\"paraId\":5,\"tocIndex\":1},{\"value\":\"rows\",\"paraId\":5,\"tocIndex\":1},{\"value\":\" 推断出文本的高度，然后进行遍历，找到最大可以展示的文字数量即可：\",\"paraId\":5,\"tocIndex\":1},{\"value\":\"而行高则可以通过模拟埋入一个 \",\"paraId\":6,\"tocIndex\":1},{\"value\":\"span\",\"paraId\":6,\"tocIndex\":1},{\"value\":\" 来获取：\",\"paraId\":6,\"tocIndex\":1},{\"value\":\"<div>\\n  {text}\\n  {measuring && <span ref={measureRef}>&nbsp;</span>}\\n</div>\\n\",\"paraId\":7,\"tocIndex\":1},{\"value\":\"但是这样的方式也有一些问题，对于混合行高的场景（比如添加了图片、嵌入不同大小的文字等等）。这种计算方式往往会估算出错误的总高度，而使得裁剪位置不准确：\",\"paraId\":8,\"tocIndex\":1},{\"value\":\"由于图片高度超出了行高，导致计算认为这个图片占用了两行的高度。同时又因为图片本身无法裁剪，使得最终省略行数错误（3 行省略变成了 2 行）：\",\"paraId\":9,\"tocIndex\":1},{\"value\":\"如果图片在第一行，那整个文本就会被截断：\",\"paraId\":10,\"tocIndex\":1},{\"value\":\"而如果使用 CSS 则不会有这个问题：\",\"paraId\":11,\"tocIndex\":1},{\"value\":\"为了解决这个问题，我们可以通过混合测量的方式来解决。即通过 CSS 来测量原生多行省略的总高度，然后再通过 JS 进行二分法来确定文本的截断位置最终不要超过 CSS 测量的总高度：\",\"paraId\":12,\"tocIndex\":2},{\"value\":\"<div ref={measureRef} style={ellipsisStyle}>\\n  {text}\\n</div>;\\n\\nconst cssHeight = measureRef.current.clientHeight;\\n\",\"paraId\":13,\"tocIndex\":2},{\"value\":\"// pseudocode. Not used in real world\\n<div ref={walkingMeasureRef}>{text.slice(0, walkingMeasureIndex)}</div>;\\n\\nif (walkingMeasureRef.current.clientHeight > cssHeight) {\\n  // Not meet the requirement\\n}\\n\",\"paraId\":14,\"tocIndex\":2},{\"value\":\"这样就可以准确的处理混合行高的场景：\",\"paraId\":15,\"tocIndex\":2},{\"value\":\"通过混合测量的方式，我们可以非常容易的利用 CSS 的准确性和 JS 的灵活性，实现即使在包含图片等不同行高元素的复杂内容中，也能实现准确的文本截断。\",\"paraId\":16,\"tocIndex\":3},{\"value\":\"该重构已经在 \",\"paraId\":17,\"tocIndex\":3},{\"value\":\"5.15.0\",\"paraId\":17,\"tocIndex\":3},{\"value\":\" 中发布，欢迎体验。\",\"paraId\":17,\"tocIndex\":3}];\n  "],"names":[],"mappings":"uOAEe,6CAAA,QADN,YACA,IAAM,EAAQ,CAAC,CAAC,MAAQ,2EAAmC,OAAS,CAAC,EAAE,CAAC,MAAQ,WAAW,OAAS,CAAC,EAAE,CAAC,MAAQ,qJAA6B,OAAS,CAAC,EAAE,CAAC,MAAQ,gBAAgB,OAAS,CAAC,EAAE,CAAC,MAAQ,yJAAiC,OAAS,CAAC,EAAE,CAAC,MAAQ,qBAAqB,OAAS,CAAC,EAAE,CAAC,MAAQ,2DAAc,OAAS,CAAC,EAAE,CAAC,MAAQ,WAAW,OAAS,CAAC,EAAE,CAAC,MAAQ,oJAA4B,OAAS,CAAC,EAAE,CAAC,MAAQ,iKAAiK,OAAS,CAAC,EAAE,CAAC,MAAQ,0VAAkE,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,mGAAmB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,oGAAoB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,QAAQ,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,saAA6E,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,+KAAmC,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,OAAO,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,oMAAoC,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,wFAAkB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,OAAO,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,4BAAQ,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,mFAAmF,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,qcAA8E,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,8YAAyE,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,2HAAuB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,4FAAsB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,ydAA6F,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,0HAA0H,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,mNAAmN,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,+GAAqB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,wZAA8E,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,wCAAU,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,SAAS,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,0DAAa,OAAS,GAAG,SAAW,CAAC,EAAE"}