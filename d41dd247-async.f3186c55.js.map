{"version":3,"sources":["docs/react/use-with-umi.zh-CN.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/ant-design/ant-design/docs/react/use-with-umi.zh-CN.md?watch=parent';\n  export const texts = [{\"value\":\"在真实项目开发中，除了 Ant Design 这样的 UI 库，你可能会还会需要构建工具、路由方案、CSS 方案、数据流方案、请求库和请求方案、国际化方案、权限方案、Icons 方案等等，才能完成一个完整的项目。我们基于业务场景，推出了基于 React 的企业级应用框架 \",\"paraId\":0},{\"value\":\"Umi\",\"paraId\":0},{\"value\":\"，推荐你在项目中使用。\",\"paraId\":0},{\"value\":\"Umi，中文发音为「乌米」，是可扩展的企业级前端应用框架，也是蚂蚁集团的底层前端框架，已直接或间接地服务了 10000+ 应用。Umi 以路由为基础，同时支持配置式路由和约定式路由，保证路由的功能完备，并以此进行功能扩展。然后配以生命周期完善的插件体系，覆盖从源码到构建产物的每个生命周期，支持各种功能扩展和业务需求。\",\"paraId\":1},{\"value\":\"本文会引导你使用 Umi、Ant Design 和 \",\"paraId\":2},{\"value\":\"Ant Design Pro\",\"paraId\":2},{\"value\":\" 从 0 开始创建一个简单应用。\",\"paraId\":2},{\"value\":\"推荐使用 \",\"paraId\":3,\"tocIndex\":0},{\"value\":\"pnpm\",\"paraId\":3,\"tocIndex\":0},{\"value\":\" 创建 Umi 脚手架，执行以下命令。\",\"paraId\":3,\"tocIndex\":0},{\"value\":\"$ mkdir myapp && cd myapp\\n$ pnpm create umi\\n\",\"paraId\":4,\"tocIndex\":0},{\"value\":\"如果你使用 npm，可执行  \",\"paraId\":5,\"tocIndex\":0},{\"value\":\"npm create umi\",\"paraId\":5,\"tocIndex\":0},{\"value\":\"，效果一致；如果你使用 yarn，可执行  \",\"paraId\":5,\"tocIndex\":0},{\"value\":\"yarn create umi\",\"paraId\":5,\"tocIndex\":0},{\"value\":\"，效果也一致；如果你使用 bun，那说明你是个非常潮的人，可执行 \",\"paraId\":5,\"tocIndex\":0},{\"value\":\"bunx create-umi\",\"paraId\":5,\"tocIndex\":0},{\"value\":\"（注意，\",\"paraId\":5,\"tocIndex\":0},{\"value\":\"create\",\"paraId\":5,\"tocIndex\":0},{\"value\":\" 和 \",\"paraId\":5,\"tocIndex\":0},{\"value\":\"umi\",\"paraId\":5,\"tocIndex\":0},{\"value\":\" 之间有个 \",\"paraId\":5,\"tocIndex\":0},{\"value\":\"-\",\"paraId\":5,\"tocIndex\":0},{\"value\":\"）。\",\"paraId\":5,\"tocIndex\":0},{\"value\":\"这里选「Simple App」，因为我们要从 “0” 开始。\",\"paraId\":6,\"tocIndex\":0},{\"value\":\"? Pick Umi App Template › - Use arrow-keys. Return to submit.\\n❯   Simple App\\n    Ant Design Pro\\n    Vue Simple App\\n\",\"paraId\":7,\"tocIndex\":0},{\"value\":\"这里建议选「pnpm」，pnpm 在速度以及处理幽灵依赖方面都更有优势。\",\"paraId\":8,\"tocIndex\":0},{\"value\":\"? Pick Npm Client › - Use arrow-keys. Return to submit.\\n    npm\\n    cnpm\\n    tnpm\\n    yarn\\n❯   pnpm\\n\",\"paraId\":9,\"tocIndex\":0},{\"value\":\"这里国内的朋友建议选「taobao」，否则选「npm」。选择 npm taobao 源在安装依赖时通常会更快一些。\",\"paraId\":10,\"tocIndex\":0},{\"value\":\"? Pick Npm Registry › - Use arrow-keys. Return to submit.\\n    npm\\n❯   taobao\\n\",\"paraId\":11,\"tocIndex\":0},{\"value\":\"然后工具会自动安装依赖，并执行 Umi 的初始化脚本。\",\"paraId\":12,\"tocIndex\":0},{\"value\":\"在启动项目之前，我们再安装一些本教程会用到的依赖。\",\"paraId\":13,\"tocIndex\":0},{\"value\":\"$ pnpm i @umijs/plugins -D\\n$ pnpm i antd axios @ant-design/pro-components -S\\n\",\"paraId\":14,\"tocIndex\":0},{\"value\":\"其中 \",\"paraId\":15,\"tocIndex\":0},{\"value\":\"@umijs/plugins\",\"paraId\":15,\"tocIndex\":0},{\"value\":\" 是 Umi 的官方插件集，包含了 valtio、react-query、styled-components、locale、access、qiankun 等大量插件，可让用户通过配置的方式一键开启和使用；\",\"paraId\":15,\"tocIndex\":0},{\"value\":\"antd\",\"paraId\":15,\"tocIndex\":0},{\"value\":\" 就不用介绍了；\",\"paraId\":15,\"tocIndex\":0},{\"value\":\"axios\",\"paraId\":15,\"tocIndex\":0},{\"value\":\" 是请求库；\",\"paraId\":15,\"tocIndex\":0},{\"value\":\"@ant-design/pro-components\",\"paraId\":15,\"tocIndex\":0},{\"value\":\" 是用于生成中后台布局的组件。（这里将运行时依赖和编译时依赖分别保存到 dependencies 和 devDependencies，是目前社区推荐的方式）\",\"paraId\":15,\"tocIndex\":0},{\"value\":\"完成后，执行以下命令启动项目。\",\"paraId\":16,\"tocIndex\":0},{\"value\":\"$ npm run dev\\numi dev\\ninfo  - Umi v4.0.46\\n        ╔════════════════════════════════════════════════════╗\\n        ║ App listening at:                                  ║\\n        ║  >   Local: http://localhost:8000                  ║\\nready - ║  > Network: http://*********:8000                  ║\\n        ║                                                    ║\\n        ║ Now you can open browser with the above addresses↑ ║\\n        ╚════════════════════════════════════════════════════╝\\n\",\"paraId\":17,\"tocIndex\":0},{\"value\":\"跟着提示点击命令行里的 url，会自动打开浏览器。如果顺利，你会看到如下界面。\",\"paraId\":18,\"tocIndex\":0},{\"value\":\"我们要写个应用来先显示产品列表。首先第一步是创建路由，路由可以想象成是组成应用的不同页面。Umi 用户通常不需要关心 Umi 背后的实现，但如果你想知道，Umi 的路由是基于 react-router@6.3 实现（注：不是最新的 6.4，6.4 包含的 loader 和 action 功能并不是 Umi 所需要的）。\",\"paraId\":19,\"tocIndex\":1},{\"value\":\"我们通过命令即可创建路由。\",\"paraId\":20,\"tocIndex\":1},{\"value\":\"$ npx umi g page products\\nWrite: src/pages/products.tsx\\nWrite: src/pages/products.less\\n\",\"paraId\":21,\"tocIndex\":1},{\"value\":\"然后修改配置文件 \",\"paraId\":22,\"tocIndex\":1},{\"value\":\".umirc.ts\",\"paraId\":22,\"tocIndex\":1},{\"value\":\" 加上新增的路由声明。\",\"paraId\":22,\"tocIndex\":1},{\"value\":\"import { defineConfig } from \\\"umi\\\";\\n\\nexport default defineConfig({\\n  routes: [\\n    { path: \\\"/\\\", component: \\\"index\\\" },\\n    { path: \\\"/docs\\\", component: \\\"docs\\\" },\\n+   { path: \\\"/products\\\", component: \\\"products\\\" },\\n  ],\\n  npmClient: \\\"pnpm\\\",\\n});\\n\",\"paraId\":23,\"tocIndex\":1},{\"value\":\"由于脚手架默认使用的是配置式路由，顾名思义，就是路由是自己一行行配出来的，虽然繁琐，但灵活性更高，这种方式需要在配置里加上 routes 字段，详见 \",\"paraId\":24,\"tocIndex\":1},{\"value\":\"Umi 文档之路由\",\"paraId\":24,\"tocIndex\":1},{\"value\":\"。此外，Umi 还支持约定式路由，意思是文件系统即路由，所以无需配置路由即可生效。\",\"paraId\":24,\"tocIndex\":1},{\"value\":\"然后我们编辑下 \",\"paraId\":25,\"tocIndex\":1},{\"value\":\"src/layouts/index.tsx\",\"paraId\":25,\"tocIndex\":1},{\"value\":\" 文件，在全局布局路由里加上到 \",\"paraId\":25,\"tocIndex\":1},{\"value\":\"/products\",\"paraId\":25,\"tocIndex\":1},{\"value\":\" 路径的导航。\",\"paraId\":25,\"tocIndex\":1},{\"value\":\"<li>\\n  <Link to=\\\"/docs\\\">Docs</Link>\\n</li>\\n+ <li>\\n+   <Link to=\\\"/products\\\">Products</Link>\\n+ </li>\\n\",\"paraId\":26,\"tocIndex\":1},{\"value\":\"打开 \",\"paraId\":27,\"tocIndex\":1},{\"value\":\"http://localhost:8000/products\",\"paraId\":27,\"tocIndex\":1},{\"value\":\" ，如果顺利，你会看到如下页面。\",\"paraId\":27,\"tocIndex\":1},{\"value\":\"随着应用的发展，你会需要在多个页面分享 UI 元素（或在一个页面使用多次），在 Umi 里你可以把这部分抽成 component 。我们来编写一个 ProductList 组件，这样就能在不同的地方显示产品列表了。\",\"paraId\":28,\"tocIndex\":2},{\"value\":\"新建 \",\"paraId\":29,\"tocIndex\":2},{\"value\":\"src/components/ProductList.tsx\",\"paraId\":29,\"tocIndex\":2},{\"value\":\" 文件，内容如下。\",\"paraId\":29,\"tocIndex\":2},{\"value\":\"import React from 'react';\\nimport { Button, Popconfirm, Table } from 'antd';\\nimport type { TableProps } from 'antd';\\n\\ninterface DataType {\\n  id: string;\\n  name: string;\\n}\\n\\nconst ProductList: React.FC<{ products: DataType[]; onDelete: (id: string) => void }> = ({\\n  onDelete,\\n  products,\\n}) => {\\n  const columns: TableProps<DataType>['columns'] = [\\n    {\\n      title: 'Name',\\n      dataIndex: 'name',\\n    },\\n    {\\n      title: 'Actions',\\n      render(text, record) {\\n        return (\\n          <Popconfirm title=\\\"Delete?\\\" onConfirm={() => onDelete(record.id)}>\\n            <Button>Delete</Button>\\n          </Popconfirm>\\n        );\\n      },\\n    },\\n  ];\\n  return <Table rowKey=\\\"id\\\" dataSource={products} columns={columns} />;\\n};\\n\\nexport default ProductList;\\n\",\"paraId\":30,\"tocIndex\":2},{\"value\":\"假设我们已经和后端约定好了 API 接口，那现在就可以使用 Mock 数据来在本地模拟出 API 应该返回的数据，这样一来前后端开发就可以同时进行，不会因为后端 API 还在开发而导致前端的工作被阻塞。Umi 提供了开箱即用的 \",\"paraId\":31,\"tocIndex\":3},{\"value\":\"Mock 功能\",\"paraId\":31,\"tocIndex\":3},{\"value\":\"，能够用方便简单的方式来完成 Mock 数据的设置。\",\"paraId\":31,\"tocIndex\":3},{\"value\":\"在根目录下新建 \",\"paraId\":32,\"tocIndex\":3},{\"value\":\"mock/products.ts\",\"paraId\":32,\"tocIndex\":3},{\"value\":\" 文件，内容如下。\",\"paraId\":32,\"tocIndex\":3},{\"value\":\"import { defineMock } from 'umi';\\n\\ntype Product = {\\n  id: string;\\n  name: string;\\n};\\n\\nlet products: Product[] = [\\n  { id: '1', name: 'Umi' },\\n  { id: '2', name: 'Ant Design' },\\n  { id: '3', name: 'Ant Design Pro' },\\n  { id: '4', name: 'Dva' },\\n];\\n\\nexport default defineMock({\\n  'GET /api/products': (_, res) => {\\n    res.send({\\n      status: 'ok',\\n      data: products,\\n    });\\n  },\\n  'DELETE /api/products/:id': (req, res) => {\\n    products = products.filter((item) => item.id !== req.params.id);\\n    res.send({ status: 'ok' });\\n  },\\n});\\n\",\"paraId\":33,\"tocIndex\":3},{\"value\":\"然后访问 \",\"paraId\":34,\"tocIndex\":3},{\"value\":\"http://localhost:8000/api/products\",\"paraId\":34,\"tocIndex\":3},{\"value\":\" ，就能看到接口响应结果了。\",\"paraId\":34,\"tocIndex\":3},{\"value\":\"完成了 UI 组件和 Mock 数据，是时候把他们结合到一起了。这里需要用到请求方案，我们在这里的选择是 react-query（如果你想说 @tanstack/react-query，没错，他们是同一个库，@tanstack/react-query 是 react-query 改名后的包）。所以在开始之前，需要修改配置启用一键启用 \",\"paraId\":35,\"tocIndex\":4},{\"value\":\"Umi 的 react-query 插件\",\"paraId\":35,\"tocIndex\":4},{\"value\":\"。\",\"paraId\":35,\"tocIndex\":4},{\"value\":\"先编辑 \",\"paraId\":36,\"tocIndex\":4},{\"value\":\".umirc.ts\",\"paraId\":36,\"tocIndex\":4},{\"value\":\"，由于有探测到不能热更的配置项变更，配置文件保存后 umi dev 的 server 会自动重启。\",\"paraId\":36,\"tocIndex\":4},{\"value\":\"import { defineConfig } from \\\"umi\\\";\\n\\nexport default defineConfig({\\n+  plugins: ['@umijs/plugins/dist/react-query'],\\n+  reactQuery: {},\\n  routes: [\\n    { path: \\\"/\\\", component: \\\"index\\\" },\\n    { path: \\\"/docs\\\", component: \\\"docs\\\" },\\n    { path: \\\"/products\\\", component: \\\"products\\\" },\\n  ],\\n  npmClient: 'pnpm',\\n});\\n\",\"paraId\":37,\"tocIndex\":4},{\"value\":\"再编辑 \",\"paraId\":38,\"tocIndex\":4},{\"value\":\"src/pages/products.tsx\",\"paraId\":38,\"tocIndex\":4},{\"value\":\"，内容如下。\",\"paraId\":38,\"tocIndex\":4},{\"value\":\"import React from 'react';\\nimport axios from 'axios';\\nimport { useMutation, useQuery, useQueryClient } from 'umi';\\n\\nimport styles from './products.less';\\nimport ProductList from '@/components/ProductList';\\n\\nexport default function Page() {\\n  const queryClient = useQueryClient();\\n  const productsQuery = useQuery(['products'], {\\n    queryFn() {\\n      return axios.get('/api/products').then((res) => res.data);\\n    },\\n  });\\n  const productsDeleteMutation = useMutation({\\n    mutationFn(id: string) {\\n      return axios.delete(`/api/products/${id}`);\\n    },\\n    onSettled: () => {\\n      queryClient.invalidateQueries({ queryKey: ['products'] });\\n    },\\n  });\\n  if (productsQuery.isLoading) return null;\\n  return (\\n    <div>\\n      <h1 className={styles.title}>Page products</h1>\\n      <ProductList\\n        products={productsQuery.data.data}\\n        onDelete={(id) => {\\n          productsDeleteMutation.mutate(id);\\n        }}\\n      />\\n    </div>\\n  );\\n}\\n\",\"paraId\":39,\"tocIndex\":4},{\"value\":\"这里，我们通过 \",\"paraId\":40,\"tocIndex\":4},{\"value\":\"useQuery()\",\"paraId\":40,\"tocIndex\":4},{\"value\":\" 拉取来自 \",\"paraId\":40,\"tocIndex\":4},{\"value\":\"/api/products\",\"paraId\":40,\"tocIndex\":4},{\"value\":\" 的数据，然后在 \",\"paraId\":40,\"tocIndex\":4},{\"value\":\"onDelete\",\"paraId\":40,\"tocIndex\":4},{\"value\":\" 事件里通过 \",\"paraId\":40,\"tocIndex\":4},{\"value\":\"useMutation()\",\"paraId\":40,\"tocIndex\":4},{\"value\":\" 提交 DELETE 请求到 \",\"paraId\":40,\"tocIndex\":4},{\"value\":\"/api/products/${id}\",\"paraId\":40,\"tocIndex\":4},{\"value\":\" 进行删除操作。关于 react-query 的详细使用，可参考 \",\"paraId\":40,\"tocIndex\":4},{\"value\":\"Umi 插件之 React Query\",\"paraId\":40,\"tocIndex\":4},{\"value\":\" 和 \",\"paraId\":40,\"tocIndex\":4},{\"value\":\"React Query 官网\",\"paraId\":40,\"tocIndex\":4},{\"value\":\"。\",\"paraId\":40,\"tocIndex\":4},{\"value\":\"保存后，你应该会看到如下界面。\",\"paraId\":41,\"tocIndex\":4},{\"value\":\"一个标准的中后台页面，一般都需要一个布局，这个布局很多时候都是高度雷同的，\",\"paraId\":42,\"tocIndex\":5},{\"value\":\"ProLayout\",\"paraId\":42,\"tocIndex\":5},{\"value\":\" 封装了常用的菜单、面包屑、页头等功能，提供了一个不依赖的框架且开箱即用的高级布局组件。并且支持  \",\"paraId\":42,\"tocIndex\":5},{\"value\":\"side\",\"paraId\":42,\"tocIndex\":5},{\"value\":\", \",\"paraId\":42,\"tocIndex\":5},{\"value\":\"mix\",\"paraId\":42,\"tocIndex\":5},{\"value\":\", \",\"paraId\":42,\"tocIndex\":5},{\"value\":\"top\",\"paraId\":42,\"tocIndex\":5},{\"value\":\"  三种模式，更是内置了菜单选中、菜单生成面包屑、自动设置页面标题的逻辑。\",\"paraId\":42,\"tocIndex\":5},{\"value\":\"先修改配置，为每个路由新增 name 字段，用于给 ProLayout 做菜单渲染使用。\",\"paraId\":43,\"tocIndex\":5},{\"value\":\"import { defineConfig } from \\\"umi\\\";\\n\\nexport default defineConfig({\\n  routes: [\\n-    { path: \\\"/\\\", component: \\\"index\\\" },\\n+    { path: \\\"/\\\", component: \\\"index\\\", name: \\\"home\\\" },\\n-    { path: \\\"/docs\\\", component: \\\"docs\\\" },\\n+    { path: \\\"/docs\\\", component: \\\"docs\\\", name: \\\"docs\\\" },\\n-    { path: \\\"/products\\\", component: \\\"products\\\" },\\n+    { path: \\\"/products\\\", component: \\\"products\\\", name: \\\"products\\\" },\\n  ],\\n  plugins: [\\\"@umijs/plugins/dist/react-query\\\"],\\n  reactQuery: {},\\n  npmClient: \\\"pnpm\\\",\\n});\\n\",\"paraId\":44,\"tocIndex\":5},{\"value\":\"编辑 \",\"paraId\":45,\"tocIndex\":5},{\"value\":\"src/layouts/index.tsx\",\"paraId\":45,\"tocIndex\":5},{\"value\":\"，内容如下。\",\"paraId\":45,\"tocIndex\":5},{\"value\":\"import { ProLayout } from '@ant-design/pro-components';\\nimport { Link, Outlet, useAppData, useLocation } from 'umi';\\n\\nexport default function Layout() {\\n  const { clientRoutes } = useAppData();\\n  const location = useLocation();\\n  return (\\n    <ProLayout\\n      route={clientRoutes[0]}\\n      location={location}\\n      title=\\\"Umi x Ant Design\\\"\\n      menuItemRender={(menuItemProps, defaultDom) => {\\n        if (menuItemProps.isUrl || menuItemProps.children) {\\n          return defaultDom;\\n        }\\n        if (menuItemProps.path && location.pathname !== menuItemProps.path) {\\n          return (\\n            <Link to={menuItemProps.path} target={menuItemProps.target}>\\n              {defaultDom}\\n            </Link>\\n          );\\n        }\\n        return defaultDom;\\n      }}\\n    >\\n      <Outlet />\\n    </ProLayout>\\n  );\\n}\\n\",\"paraId\":46,\"tocIndex\":5},{\"value\":\"这里先用 Umi 的 \",\"paraId\":47,\"tocIndex\":5},{\"value\":\"useAppData\",\"paraId\":47,\"tocIndex\":5},{\"value\":\" 拿到全局客户端路由 \",\"paraId\":47,\"tocIndex\":5},{\"value\":\"clientRoutes\",\"paraId\":47,\"tocIndex\":5},{\"value\":\"，这是一份嵌套结构的路由表，我们把 \",\"paraId\":47,\"tocIndex\":5},{\"value\":\"clientRoutes[0]\",\"paraId\":47,\"tocIndex\":5},{\"value\":\" 传给 ProLayout；再通过 \",\"paraId\":47,\"tocIndex\":5},{\"value\":\"useLocation()\",\"paraId\":47,\"tocIndex\":5},{\"value\":\" 拿到 location 信息，也传给 ProLayout 来决定哪个菜单应该高亮；同时我们希望点击菜单时做路由跳转，需要定制 ProLayout 的 \",\"paraId\":47,\"tocIndex\":5},{\"value\":\"menuItemRender\",\"paraId\":47,\"tocIndex\":5},{\"value\":\" 方法。\",\"paraId\":47,\"tocIndex\":5},{\"value\":\"聪明的你可能已经发现 \",\"paraId\":48,\"tocIndex\":5},{\"value\":\"src/layouts/index.less\",\"paraId\":48,\"tocIndex\":5},{\"value\":\" 已经不再被引用了。为了保持项目文件的整洁，可以选择将其删除。\",\"paraId\":48,\"tocIndex\":5},{\"value\":\"此时浏览器会自动刷新，如果顺利，你会看到如下界面。\",\"paraId\":49,\"tocIndex\":5},{\"value\":\"完成开发并且在开发环境验证之后，就需要部署给我们的用户了，执行以下命令。\",\"paraId\":50,\"tocIndex\":6},{\"value\":\"$ npm run build\\ninfo  - Umi v4.0.46\\n✔ Webpack\\n  Compiled successfully in 5.31s\\ninfo  - File sizes after gzip:\\n  122.45 kB  dist/umi.js\\n  575 B      dist/src__pages__products.async.js\\n  312 B      dist/src__pages__index.async.js\\n  291 B      dist/layouts__index.async.js\\n  100 B      dist/layouts__index.chunk.css\\n  55 B       dist/src__pages__products.chunk.css\\nevent - Build index.html\\n\",\"paraId\":51,\"tocIndex\":6},{\"value\":\"构建会打包所有的资源，包含 JavaScript, CSS, Web Fonts, 图片, HTML 等。你可以在  \",\"paraId\":52,\"tocIndex\":6},{\"value\":\"dist/\",\"paraId\":52,\"tocIndex\":6},{\"value\":\"  目录下找到这些文件。\",\"paraId\":52,\"tocIndex\":6},{\"value\":\"我们已经完成了一个简单应用，你可能还有很多疑问，比如：\",\"paraId\":53,\"tocIndex\":7},{\"value\":\"如何统一处理出错？\",\"paraId\":54,\"tocIndex\":7},{\"value\":\"如何处理更多路由，比如动态路由、嵌套路由、权限路由等？\",\"paraId\":54,\"tocIndex\":7},{\"value\":\"如何使用数据流方案？\",\"paraId\":54,\"tocIndex\":7},{\"value\":\"如何修改 webpack 配置或切换到 vite 构建模式？\",\"paraId\":54,\"tocIndex\":7},{\"value\":\"等等\",\"paraId\":54,\"tocIndex\":7},{\"value\":\"你可以：\",\"paraId\":55,\"tocIndex\":7},{\"value\":\"访问  \",\"paraId\":56,\"tocIndex\":7},{\"value\":\"Umi 官网\",\"paraId\":56,\"tocIndex\":7},{\"value\":\"了解  \",\"paraId\":56,\"tocIndex\":7},{\"value\":\"Umi 的路由\",\"paraId\":56,\"tocIndex\":7},{\"value\":\"了解比 Umi 集成度更高的  \",\"paraId\":56,\"tocIndex\":7},{\"value\":\"Umi Max\",\"paraId\":56,\"tocIndex\":7},{\"value\":\"了解开箱即用的中后台脚手架  \",\"paraId\":56,\"tocIndex\":7},{\"value\":\"Ant Design Pro\",\"paraId\":56,\"tocIndex\":7},{\"value\":\"了解高级布局  \",\"paraId\":56,\"tocIndex\":7},{\"value\":\"ProLayout\",\"paraId\":56,\"tocIndex\":7},{\"value\":\"了解高级表格  \",\"paraId\":56,\"tocIndex\":7},{\"value\":\"ProTable\",\"paraId\":56,\"tocIndex\":7}];\n  "],"names":[],"mappings":"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"}