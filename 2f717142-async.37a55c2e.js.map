{"version":3,"sources":["components/date-picker/demo/components.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/date-picker/demo/components.tsx?watch=parent';import React from 'react';\nimport type { DatePickerProps } from 'antd';\nimport { Button, DatePicker, Flex, Slider, Space, Typography } from 'antd';\nimport dayjs from 'dayjs';\nimport type { Dayjs } from 'dayjs';\n\nconst onChange: DatePickerProps['onChange'] = (date, dateString) => {\n  console.log(date, dateString);\n};\n\ntype DateComponent = Required<NonNullable<DatePickerProps<Dayjs>['components']>>['date'];\ntype GetProps<T> = T extends React.ComponentType<infer P> ? P : never;\n\nconst MyDatePanel = (props: GetProps<DateComponent>) => {\n  const { value, onSelect, onHover } = props;\n\n  // Value\n  const startDate = React.useMemo(() => dayjs().date(1).month(0), []);\n  const [innerValue, setInnerValue] = React.useState(value || startDate);\n\n  React.useEffect(() => {\n    if (value) {\n      setInnerValue(value);\n    }\n  }, [value]);\n\n  // Range\n  const dateCount = React.useMemo(() => {\n    const endDate = startDate.add(1, 'year').add(-1, 'day');\n    return endDate.diff(startDate, 'day');\n  }, [startDate]);\n\n  const sliderValue = Math.min(Math.max(0, innerValue.diff(startDate, 'day')), dateCount);\n\n  // Render\n  return (\n    <Flex vertical gap=\"small\" style={{ padding: 16 }}>\n      <Typography.Title level={4} style={{ margin: 0 }} title=\"no, it's not\">\n        The BEST Picker Panel\n      </Typography.Title>\n      <Slider\n        min={0}\n        max={dateCount}\n        value={sliderValue}\n        onChange={(nextValue) => {\n          const nextDate = startDate.add(nextValue, 'day');\n          setInnerValue(nextDate);\n          onHover?.(nextDate);\n        }}\n        tooltip={{\n          formatter: (nextValue) => startDate.add(nextValue || 0, 'day').format('YYYY-MM-DD'),\n        }}\n      />\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          onSelect(innerValue);\n        }}\n      >{`That's It!`}</Button>\n    </Flex>\n  );\n};\n\nconst App: React.FC = () => (\n  <Space direction=\"vertical\">\n    <DatePicker\n      showNow={false}\n      onChange={onChange}\n      components={{\n        date: MyDatePanel,\n      }}\n    />\n  </Space>\n);\n\nexport default App;\n"],"names":[],"mappings":"uOA2EA,+CAAA,4CA3EO,wBAAoH,iBAEvD,oBAClD,aAGlB,IAAM,EAAwC,CAAC,EAAM,KACnD,QAAQ,GAAG,CAAC,EAAM,GACpB,EAKM,EAAc,AAAC,IACnB,GAAM,CAAE,MAAA,CAAK,CAAE,SAAA,CAAQ,CAAE,QAAA,CAAO,CAAE,CAAG,EAG/B,EAAY,SAAK,CAAC,OAAO,CAAC,IAAM,GAAA,SAAK,IAAG,IAAI,CAAC,GAAG,KAAK,CAAC,GAAI,EAAE,EAC5D,CAAC,EAAY,EAAc,CAAG,SAAK,CAAC,QAAQ,CAAC,GAAS,GAE5D,SAAK,CAAC,SAAS,CAAC,KACV,GACF,EAAc,GAElB,EAAG,CAAC,EAAM,EAGV,IAAM,EAAY,SAAK,CAAC,OAAO,CAAC,KAC9B,IAAM,EAAU,EAAU,GAAG,CAAC,EAAG,QAAQ,GAAG,CAAC,GAAI,OACjD,OAAO,EAAQ,IAAI,CAAC,EAAW,OACjC,EAAG,CAAC,EAAU,EAER,EAAc,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,EAAG,EAAW,IAAI,CAAC,EAAW,QAAS,GAG7E,MACE,WAAC,MAAI,EAAC,QAAQ,IAAC,IAAI,QAAQ,MAAO,CAAE,QAAS,EAAG,YAC9C,UAAC,YAAU,CAAC,KAAK,EAAC,MAAO,EAAG,MAAO,CAAE,OAAQ,CAAE,EAAG,MAAM,wBAAe,0BAGvE,UAAC,QAAM,EACL,IAAK,EACL,IAAK,EACL,MAAO,EACP,SAAU,AAAC,IACT,IAAM,EAAW,EAAU,GAAG,CAAC,EAAW,OAC1C,EAAc,SACd,GAAA,EAAU,GACZ,EACA,QAAS,CACP,UAAW,AAAC,GAAc,EAAU,GAAG,CAAC,GAAa,EAAG,OAAO,MAAM,CAAC,aACxE,IAEF,UAAC,QAAM,EACL,KAAK,UACL,QAAS,KACP,EAAS,GACX,WACA,kBAGR,MAcA,EAZsB,IACpB,UAAC,OAAK,EAAC,UAAU,oBACf,UAAC,YAAU,EACT,QAAS,CAAA,EACT,SAAU,EACV,WAAY,CACV,KAAM,CACR"}