{"version":3,"sources":["components/dropdown/demo/overlay-open.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/dropdown/demo/overlay-open.tsx?watch=parent';import React, { useState } from 'react';\nimport { DownOutlined } from '@ant-design/icons';\nimport type { DropdownProps, MenuProps } from 'antd';\nimport { Dropdown, Space } from 'antd';\n\nconst App: React.FC = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleMenuClick: MenuProps['onClick'] = (e) => {\n    if (e.key === '3') {\n      setOpen(false);\n    }\n  };\n\n  const handleOpenChange: DropdownProps['onOpenChange'] = (nextOpen, info) => {\n    if (info.source === 'trigger' || nextOpen) {\n      setOpen(nextOpen);\n    }\n  };\n\n  const items: MenuProps['items'] = [\n    {\n      label: 'Clicking me will not close the menu.',\n      key: '1',\n    },\n    {\n      label: 'Clicking me will not close the menu also.',\n      key: '2',\n    },\n    {\n      label: 'Clicking me will close the menu.',\n      key: '3',\n    },\n  ];\n\n  return (\n    <Dropdown\n      menu={{\n        items,\n        onClick: handleMenuClick,\n      }}\n      onOpenChange={handleOpenChange}\n      open={open}\n    >\n      <a onClick={(e) => e.preventDefault()}>\n        <Space>\n          Hover me\n          <DownOutlined />\n        </Space>\n      </a>\n    </Dropdown>\n  );\n};\n\nexport default App;\n"],"names":[],"mappings":"qOAsDA,+CAAA,4BAtDO,oBAAiI,gBAC3G,gBAEG,YAmDhC,EAjDsB,KACpB,GAAM,CAAC,EAAM,EAAQ,CAAG,GAAA,UAAQ,EAAC,CAAA,GA6BjC,MACE,UAAC,UAAQ,EACP,KAAM,CACJ,MAlB4B,CAChC,CACE,MAAO,uCACP,IAAK,GACP,EACA,CACE,MAAO,4CACP,IAAK,GACP,EACA,CACE,MAAO,mCACP,IAAK,GACP,EACD,CAMK,QA/BwC,AAAC,IAC/B,MAAV,EAAE,GAAG,EACP,EAAQ,CAAA,GAEZ,CA4BI,EACA,aA3BoD,CAAC,EAAU,KAC7D,CAAA,AAAgB,YAAhB,EAAK,MAAM,EAAkB,CAAO,GACtC,EAAQ,GAEZ,EAwBI,KAAM,WAEN,UAAC,KAAE,QAAS,AAAC,GAAM,EAAE,cAAc,YACjC,WAAC,OAAK,YAAC,WAEL,UAAC,cAAY,YAKvB"}