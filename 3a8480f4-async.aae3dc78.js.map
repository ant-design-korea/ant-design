{"version":3,"sources":["components/tree/demo/drag-debug.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/tree/demo/drag-debug.tsx?watch=parent';/* eslint-disable @typescript-eslint/no-shadow */\nimport React from 'react';\nimport { CarryOutOutlined } from '@ant-design/icons';\nimport type { TreeDataNode, TreeProps } from 'antd';\nimport { Switch, Tree } from 'antd';\n\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst data: TreeDataNode[] = [];\n\nconst generateData = (_level: number, preKey = '0', tns = data): TreeDataNode[] | undefined => {\n  const children: string[] = [];\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({ title: key, key, icon: <CarryOutOutlined /> });\n    if (i < y) {\n      children.push(key);\n    }\n  }\n  if (_level < 0) {\n    return tns;\n  }\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\n\ngenerateData(z);\n\nconst App: React.FC = () => {\n  const [gData, setGData] = React.useState<TreeDataNode[]>(data);\n  const [showLine, setShowLine] = React.useState<any>(true);\n  const [showIcon, setShowIcon] = React.useState<boolean>(true);\n  const [showLeafIcon, setShowLeafIcon] = React.useState<boolean>(true);\n  const [expandedKeys, setExpandedKeys] = React.useState<React.Key[]>(['0-0', '0-0-0', '0-0-0-0']);\n\n  const onDragEnter: TreeProps['onDragEnter'] = (info) => {\n    console.log(info);\n    // expandedKeys, set it when controlled is needed\n    setExpandedKeys(info.expandedKeys);\n  };\n\n  const onDrop: TreeProps['onDrop'] = (info) => {\n    console.log(info);\n    const dropKey = info.node.key as number;\n    const dragKey = info.dragNode.key as number;\n    const dropPos = info.node.pos.split('-');\n    const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n\n    const loop = (\n      data: TreeDataNode[],\n      key: number,\n      callback: (item: TreeDataNode, index: number, err: TreeDataNode[]) => void,\n    ): void => {\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].key === key) {\n          return callback(data[i], i, data);\n        }\n        if (data[i].children) {\n          loop(data[i].children!, key, callback);\n        }\n      }\n    };\n\n    const data = [...gData];\n\n    // Find dragObject\n    let dragObj: TreeDataNode;\n    loop(data, dragKey, (item, index, arr) => {\n      arr.splice(index, 1);\n      dragObj = item;\n    });\n\n    if (!info.dropToGap) {\n      // Drop on the content\n      loop(data, dropKey, (item) => {\n        item.children = item.children || [];\n        // where to insert. New item was inserted to the end of the array in this example, but can be anywhere\n        item.children.push(dragObj);\n      });\n    } else if (\n      ((info.node as any).props.children || []).length > 0 && // Has children\n      (info.node as any).props.expanded && // Is expanded\n      dropPosition === 1 // On the bottom gap\n    ) {\n      loop(data, dropKey, (item) => {\n        item.children = item.children || [];\n        // where to insert. New item was inserted to the start of the array in this example, but can be anywhere\n        item.children.unshift(dragObj);\n      });\n    } else {\n      let ar: TreeDataNode[];\n      let i: number;\n      loop(data, dropKey, (_, index, arr) => {\n        ar = arr;\n        i = index;\n      });\n      if (dropPosition === -1) {\n        ar!.splice(i!, 0, dragObj!);\n      } else {\n        ar!.splice(i! + 1, 0, dragObj!);\n      }\n    }\n    setGData(data);\n  };\n\n  const innerSetShowLine = (showLine: boolean) => {\n    if (showLine) {\n      if (showLeafIcon) {\n        setShowLine({ showLeafIcon: true });\n      } else {\n        setShowLine(true);\n      }\n    } else {\n      setShowLine(false);\n    }\n  };\n\n  const innerSetShowLeafIcon = (showLeafIcon: boolean) => {\n    setShowLeafIcon(showLeafIcon);\n    setShowLine({ showLeafIcon });\n  };\n\n  return (\n    <>\n      <div style={{ marginBottom: 16 }}>\n        showLine: <Switch checked={showLine} onChange={innerSetShowLine} />\n        <br />\n        <br />\n        showIcon: <Switch checked={showIcon} onChange={() => setShowIcon(showIcon)} />\n        <br />\n        <br />\n        showLeafIcon: <Switch checked={showLeafIcon} onChange={innerSetShowLeafIcon} />\n      </div>\n      <Tree\n        showLine={showLine}\n        showIcon={showIcon}\n        className=\"draggable-tree\"\n        defaultExpandedKeys={expandedKeys}\n        draggable\n        blockNode\n        onDragEnter={onDragEnter}\n        onDrop={onDrop}\n        treeData={gData}\n      />\n    </>\n  );\n};\n\nexport default App;\n"],"names":[],"mappings":"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"}