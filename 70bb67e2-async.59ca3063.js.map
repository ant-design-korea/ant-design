{"version":3,"sources":["components/table/demo/drag-sorting-handler.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/table/demo/drag-sorting-handler.tsx?watch=parent';import React, { useContext, useMemo } from 'react';\nimport { HolderOutlined } from '@ant-design/icons';\nimport type { DragEndEvent } from '@dnd-kit/core';\nimport { DndContext } from '@dnd-kit/core';\nimport type { SyntheticListenerMap } from '@dnd-kit/core/dist/hooks/utilities';\nimport { restrictToVerticalAxis } from '@dnd-kit/modifiers';\nimport {\n  arrayMove,\n  SortableContext,\n  useSortable,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Button, Table } from 'antd';\nimport type { TableColumnsType } from 'antd';\n\ninterface DataType {\n  key: string;\n  name: string;\n  age: number;\n  address: string;\n}\n\ninterface RowContextProps {\n  setActivatorNodeRef?: (element: HTMLElement | null) => void;\n  listeners?: SyntheticListenerMap;\n}\n\nconst RowContext = React.createContext<RowContextProps>({});\n\nconst DragHandle: React.FC = () => {\n  const { setActivatorNodeRef, listeners } = useContext(RowContext);\n  return (\n    <Button\n      type=\"text\"\n      size=\"small\"\n      icon={<HolderOutlined />}\n      style={{ cursor: 'move' }}\n      ref={setActivatorNodeRef}\n      {...listeners}\n    />\n  );\n};\n\nconst columns: TableColumnsType<DataType> = [\n  { key: 'sort', align: 'center', width: 80, render: () => <DragHandle /> },\n  { title: 'Name', dataIndex: 'name' },\n  { title: 'Age', dataIndex: 'age' },\n  { title: 'Address', dataIndex: 'address' },\n];\n\nconst initialData: DataType[] = [\n  { key: '1', name: 'John Brown', age: 32, address: 'Long text Long' },\n  { key: '2', name: 'Jim Green', age: 42, address: 'London No. 1 Lake Park' },\n  { key: '3', name: 'Joe Black', age: 32, address: 'Sidney No. 1 Lake Park' },\n];\n\ninterface RowProps extends React.HTMLAttributes<HTMLTableRowElement> {\n  'data-row-key': string;\n}\n\nconst Row: React.FC<RowProps> = (props) => {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    setActivatorNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: props['data-row-key'] });\n\n  const style: React.CSSProperties = {\n    ...props.style,\n    transform: CSS.Translate.toString(transform),\n    transition,\n    ...(isDragging ? { position: 'relative', zIndex: 9999 } : {}),\n  };\n\n  const contextValue = useMemo<RowContextProps>(\n    () => ({ setActivatorNodeRef, listeners }),\n    [setActivatorNodeRef, listeners],\n  );\n\n  return (\n    <RowContext.Provider value={contextValue}>\n      <tr {...props} ref={setNodeRef} style={style} {...attributes} />\n    </RowContext.Provider>\n  );\n};\n\nconst App: React.FC = () => {\n  const [dataSource, setDataSource] = React.useState<DataType[]>(initialData);\n\n  const onDragEnd = ({ active, over }: DragEndEvent) => {\n    if (active.id !== over?.id) {\n      setDataSource((prevState) => {\n        const activeIndex = prevState.findIndex((record) => record.key === active?.id);\n        const overIndex = prevState.findIndex((record) => record.key === over?.id);\n        return arrayMove(prevState, activeIndex, overIndex);\n      });\n    }\n  };\n\n  return (\n    <DndContext modifiers={[restrictToVerticalAxis]} onDragEnd={onDragEnd}>\n      <SortableContext items={dataSource.map((i) => i.key)} strategy={verticalListSortingStrategy}>\n        <Table\n          rowKey=\"key\"\n          components={{ body: { row: Row } }}\n          columns={columns}\n          dataSource={dataSource}\n        />\n      </SortableContext>\n    </DndContext>\n  );\n};\n\nexport default App;\n"],"names":[],"mappings":"uOAsHA,+CAAA,4CAtHO,wBAAiJ,iBACzH,gBAEJ,gBAEY,gBAMhC,gBACa,gBACU,YAe9B,IAAM,EAAa,SAAK,CAAC,aAAa,CAAkB,CAAC,GAEnD,EAAuB,KAC3B,GAAM,CAAE,oBAAA,CAAmB,CAAE,UAAA,CAAS,CAAE,CAAG,GAAA,YAAU,EAAC,GACtD,MACE,UAAC,QAAM,EACL,KAAK,OACL,KAAK,QACL,KAAM,UAAC,gBAAc,KACrB,MAAO,CAAE,OAAQ,MAAO,EACxB,IAAK,EACJ,GAAG,CAAS,GAGnB,EAEM,EAAsC,CAC1C,CAAE,IAAK,OAAQ,MAAO,SAAU,MAAO,GAAI,OAAQ,IAAM,UAAC,KAAc,EACxE,CAAE,MAAO,OAAQ,UAAW,MAAO,EACnC,CAAE,MAAO,MAAO,UAAW,KAAM,EACjC,CAAE,MAAO,UAAW,UAAW,SAAU,EAC1C,CAEK,EAA0B,CAC9B,CAAE,IAAK,IAAK,KAAM,aAAc,IAAK,GAAI,QAAS,gBAAiB,EACnE,CAAE,IAAK,IAAK,KAAM,YAAa,IAAK,GAAI,QAAS,wBAAyB,EAC1E,CAAE,IAAK,IAAK,KAAM,YAAa,IAAK,GAAI,QAAS,wBAAyB,EAC3E,CAMK,EAA0B,AAAC,IAC/B,GAAM,CACJ,WAAA,CAAU,CACV,UAAA,CAAS,CACT,WAAA,CAAU,CACV,oBAAA,CAAmB,CACnB,UAAA,CAAS,CACT,WAAA,CAAU,CACV,WAAA,CAAU,CACX,CAAG,GAAA,aAAW,EAAC,CAAE,GAAI,CAAK,CAAC,eAAe,AAAC,GAEtC,EAA6B,CACjC,GAAG,EAAM,KAAK,CACd,UAAW,KAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,GAClC,WAAA,EACA,GAAI,EAAa,CAAE,SAAU,WAAY,OAAQ,IAAK,EAAI,CAAC,CAAC,AAC9D,EAEM,EAAe,GAAA,SAAO,EAC1B,IAAO,CAAA,CAAE,oBAAA,EAAqB,UAAA,CAAU,CAAA,EACxC,CAAC,EAAqB,EAAU,EAGlC,MACE,UAAC,EAAW,QAAQ,EAAC,MAAO,WAC1B,UAAC,MAAI,GAAG,CAAK,CAAE,IAAK,EAAY,MAAO,EAAQ,GAAG,CAAU,KAGlE,MA6BA,EA3BsB,KACpB,GAAM,CAAC,EAAY,EAAc,CAAG,SAAK,CAAC,QAAQ,CAAa,GAY/D,MACE,UAAC,YAAU,EAAC,UAAW,CAAC,wBAAsB,CAAC,CAAE,UAXjC,CAAC,CAAE,OAAA,CAAM,CAAE,KAAA,CAAI,CAAgB,IAC3C,EAAO,EAAE,UAAK,SAAA,EAAM,EAAE,GACxB,EAAc,AAAC,IACb,IAAM,EAAc,EAAU,SAAS,CAAC,AAAC,GAAW,EAAO,GAAG,UAAK,SAAA,EAAQ,EAAE,GACvE,EAAY,EAAU,SAAS,CAAC,AAAC,GAAW,EAAO,GAAG,UAAK,SAAA,EAAM,EAAE,GACzE,MAAO,GAAA,WAAS,EAAC,EAAW,EAAa,GAC3C,GAEJ,WAII,UAAC,iBAAe,EAAC,MAAO,EAAW,GAAG,CAAC,AAAC,GAAM,EAAE,GAAG,EAAG,SAAU,6BAA2B,UACzF,UAAC,OAAK,EACJ,OAAO,MACP,WAAY,CAAE,KAAM,CAAE,IAAK,CAAI,CAAE,EACjC,QAAS,EACT,WAAY,QAKtB"}