{"version":3,"sources":["components/tree/demo/search.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/tree/demo/search.tsx?watch=parent';import React, { useMemo, useState } from 'react';\nimport { Input, Tree } from 'antd';\nimport type { TreeDataNode } from 'antd';\n\nconst { Search } = Input;\n\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst defaultData: TreeDataNode[] = [];\n\nconst generateData = (_level: number, _preKey?: React.Key, _tns?: TreeDataNode[]) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || defaultData;\n\n  const children: React.Key[] = [];\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({ title: key, key });\n    if (i < y) {\n      children.push(key);\n    }\n  }\n  if (_level < 0) {\n    return tns;\n  }\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\ngenerateData(z);\n\nconst dataList: { key: React.Key; title: string }[] = [];\nconst generateList = (data: TreeDataNode[]) => {\n  for (let i = 0; i < data.length; i++) {\n    const node = data[i];\n    const { key } = node;\n    dataList.push({ key, title: key as string });\n    if (node.children) {\n      generateList(node.children);\n    }\n  }\n};\ngenerateList(defaultData);\n\nconst getParentKey = (key: React.Key, tree: TreeDataNode[]): React.Key => {\n  let parentKey: React.Key;\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n    if (node.children) {\n      if (node.children.some((item) => item.key === key)) {\n        parentKey = node.key;\n      } else if (getParentKey(key, node.children)) {\n        parentKey = getParentKey(key, node.children);\n      }\n    }\n  }\n  return parentKey!;\n};\n\nconst App: React.FC = () => {\n  const [expandedKeys, setExpandedKeys] = useState<React.Key[]>([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [autoExpandParent, setAutoExpandParent] = useState(true);\n\n  const onExpand = (newExpandedKeys: React.Key[]) => {\n    setExpandedKeys(newExpandedKeys);\n    setAutoExpandParent(false);\n  };\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    const newExpandedKeys = dataList\n      .map((item) => {\n        if (item.title.indexOf(value) > -1) {\n          return getParentKey(item.key, defaultData);\n        }\n        return null;\n      })\n      .filter((item, i, self): item is React.Key => !!(item && self.indexOf(item) === i));\n    setExpandedKeys(newExpandedKeys);\n    setSearchValue(value);\n    setAutoExpandParent(true);\n  };\n\n  const treeData = useMemo(() => {\n    const loop = (data: TreeDataNode[]): TreeDataNode[] =>\n      data.map((item) => {\n        const strTitle = item.title as string;\n        const index = strTitle.indexOf(searchValue);\n        const beforeStr = strTitle.substring(0, index);\n        const afterStr = strTitle.slice(index + searchValue.length);\n        const title =\n          index > -1 ? (\n            <span key={item.key}>\n              {beforeStr}\n              <span className=\"site-tree-search-value\">{searchValue}</span>\n              {afterStr}\n            </span>\n          ) : (\n            <span key={item.key}>{strTitle}</span>\n          );\n        if (item.children) {\n          return { title, key: item.key, children: loop(item.children) };\n        }\n\n        return {\n          title,\n          key: item.key,\n        };\n      });\n\n    return loop(defaultData);\n  }, [searchValue]);\n\n  return (\n    <div>\n      <Search style={{ marginBottom: 8 }} placeholder=\"Search\" onChange={onChange} />\n      <Tree\n        onExpand={onExpand}\n        expandedKeys={expandedKeys}\n        autoExpandParent={autoExpandParent}\n        treeData={treeData}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"names":[],"mappings":"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"}