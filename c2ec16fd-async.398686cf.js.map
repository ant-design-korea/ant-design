{"version":3,"sources":["components/skeleton/demo/element.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/skeleton/demo/element.tsx?watch=parent';import React, { useState } from 'react';\nimport { DotChartOutlined } from '@ant-design/icons';\nimport type { RadioChangeEvent } from 'antd';\nimport { Divider, Form, Radio, Skeleton, Space, Switch } from 'antd';\n\ntype SizeType = 'default' | 'small' | 'large';\ntype ButtonShapeType = 'circle' | 'square' | 'round' | 'default';\ntype AvatarShapeType = 'circle' | 'square';\n\nconst App: React.FC = () => {\n  const [active, setActive] = useState(false);\n  const [block, setBlock] = useState(false);\n  const [size, setSize] = useState<SizeType>('default');\n  const [buttonShape, setButtonShape] = useState<ButtonShapeType>('default');\n  const [avatarShape, setAvatarShape] = useState<AvatarShapeType>('circle');\n\n  const handleActiveChange = (checked: boolean) => {\n    setActive(checked);\n  };\n\n  const handleBlockChange = (checked: boolean) => {\n    setBlock(checked);\n  };\n\n  const handleSizeChange = (e: RadioChangeEvent) => {\n    setSize(e.target.value);\n  };\n\n  const handleShapeButton = (e: RadioChangeEvent) => {\n    setButtonShape(e.target.value);\n  };\n\n  const handleAvatarShape = (e: RadioChangeEvent) => {\n    setAvatarShape(e.target.value);\n  };\n\n  return (\n    <>\n      <Space>\n        <Skeleton.Button active={active} size={size} shape={buttonShape} block={block} />\n        <Skeleton.Avatar active={active} size={size} shape={avatarShape} />\n        <Skeleton.Input active={active} size={size} />\n      </Space>\n      <br />\n      <br />\n      <Skeleton.Button active={active} size={size} shape={buttonShape} block={block} />\n      <br />\n      <br />\n      <Skeleton.Input active={active} size={size} block={block} />\n      <br />\n      <br />\n      <Space>\n        <Skeleton.Image active={active} />\n        <Skeleton.Node active={active}>\n          <DotChartOutlined style={{ fontSize: 40, color: '#bfbfbf' }} />\n        </Skeleton.Node>\n      </Space>\n      <Divider />\n      <Form layout=\"inline\" style={{ margin: '16px 0' }}>\n        <Space size={16} wrap>\n          <Form.Item label=\"Active\">\n            <Switch checked={active} onChange={handleActiveChange} />\n          </Form.Item>\n          <Form.Item label=\"Button and Input Block\">\n            <Switch checked={block} onChange={handleBlockChange} />\n          </Form.Item>\n          <Form.Item label=\"Size\">\n            <Radio.Group value={size} onChange={handleSizeChange}>\n              <Radio.Button value=\"default\">Default</Radio.Button>\n              <Radio.Button value=\"large\">Large</Radio.Button>\n              <Radio.Button value=\"small\">Small</Radio.Button>\n            </Radio.Group>\n          </Form.Item>\n          <Form.Item label=\"Button Shape\">\n            <Radio.Group value={buttonShape} onChange={handleShapeButton}>\n              <Radio.Button value=\"default\">Default</Radio.Button>\n              <Radio.Button value=\"square\">Square</Radio.Button>\n              <Radio.Button value=\"round\">Round</Radio.Button>\n              <Radio.Button value=\"circle\">Circle</Radio.Button>\n            </Radio.Group>\n          </Form.Item>\n          <Form.Item label=\"Avatar Shape\">\n            <Radio.Group value={avatarShape} onChange={handleAvatarShape}>\n              <Radio.Button value=\"square\">Square</Radio.Button>\n              <Radio.Button value=\"circle\">Circle</Radio.Button>\n            </Radio.Group>\n          </Form.Item>\n        </Space>\n      </Form>\n    </>\n  );\n};\n\nexport default App;\n"],"names":[],"mappings":"qOA6FA,+CAAA,4BA7FO,oBAA4H,gBAClG,gBAE6B,YA0F9D,EApFsB,KACpB,GAAM,CAAC,EAAQ,EAAU,CAAG,GAAA,UAAQ,EAAC,CAAA,GAC/B,CAAC,EAAO,EAAS,CAAG,GAAA,UAAQ,EAAC,CAAA,GAC7B,CAAC,EAAM,EAAQ,CAAG,GAAA,UAAQ,EAAW,WACrC,CAAC,EAAa,EAAe,CAAG,GAAA,UAAQ,EAAkB,WAC1D,CAAC,EAAa,EAAe,CAAG,GAAA,UAAQ,EAAkB,UAsBhE,MACE,iCACE,WAAC,OAAK,YACJ,UAAC,UAAQ,CAAC,MAAM,EAAC,OAAQ,EAAQ,KAAM,EAAM,MAAO,EAAa,MAAO,IACxE,UAAC,UAAQ,CAAC,MAAM,EAAC,OAAQ,EAAQ,KAAM,EAAM,MAAO,IACpD,UAAC,UAAQ,CAAC,KAAK,EAAC,OAAQ,EAAQ,KAAM,OAExC,UAAC,SACD,UAAC,SACD,UAAC,UAAQ,CAAC,MAAM,EAAC,OAAQ,EAAQ,KAAM,EAAM,MAAO,EAAa,MAAO,IACxE,UAAC,SACD,UAAC,SACD,UAAC,UAAQ,CAAC,KAAK,EAAC,OAAQ,EAAQ,KAAM,EAAM,MAAO,IACnD,UAAC,SACD,UAAC,SACD,WAAC,OAAK,YACJ,UAAC,UAAQ,CAAC,KAAK,EAAC,OAAQ,IACxB,UAAC,UAAQ,CAAC,IAAI,EAAC,OAAQ,WACrB,UAAC,kBAAgB,EAAC,MAAO,CAAE,SAAU,GAAI,MAAO,SAAU,SAG9D,UAAC,SAAO,KACR,UAAC,MAAI,EAAC,OAAO,SAAS,MAAO,CAAE,OAAQ,QAAS,WAC9C,WAAC,OAAK,EAAC,KAAM,GAAI,IAAI,cACnB,UAAC,MAAI,CAAC,IAAI,EAAC,MAAM,kBACf,UAAC,QAAM,EAAC,QAAS,EAAQ,SA7CR,AAAC,IAC1B,EAAU,GACZ,MA6CQ,UAAC,MAAI,CAAC,IAAI,EAAC,MAAM,kCACf,UAAC,QAAM,EAAC,QAAS,EAAO,SA5CR,AAAC,IACzB,EAAS,GACX,MA4CQ,UAAC,MAAI,CAAC,IAAI,EAAC,MAAM,gBACf,WAAC,OAAK,CAAC,KAAK,EAAC,MAAO,EAAM,SA3CX,AAAC,IACxB,EAAQ,EAAE,MAAM,CAAC,KAAK,EACxB,YA0CY,UAAC,OAAK,CAAC,MAAM,EAAC,MAAM,mBAAU,YAC9B,UAAC,OAAK,CAAC,MAAM,EAAC,MAAM,iBAAQ,UAC5B,UAAC,OAAK,CAAC,MAAM,EAAC,MAAM,iBAAQ,eAGhC,UAAC,MAAI,CAAC,IAAI,EAAC,MAAM,wBACf,WAAC,OAAK,CAAC,KAAK,EAAC,MAAO,EAAa,SA9CjB,AAAC,IACzB,EAAe,EAAE,MAAM,CAAC,KAAK,EAC/B,YA6CY,UAAC,OAAK,CAAC,MAAM,EAAC,MAAM,mBAAU,YAC9B,UAAC,OAAK,CAAC,MAAM,EAAC,MAAM,kBAAS,WAC7B,UAAC,OAAK,CAAC,MAAM,EAAC,MAAM,iBAAQ,UAC5B,UAAC,OAAK,CAAC,MAAM,EAAC,MAAM,kBAAS,gBAGjC,UAAC,MAAI,CAAC,IAAI,EAAC,MAAM,wBACf,WAAC,OAAK,CAAC,KAAK,EAAC,MAAO,EAAa,SAlDjB,AAAC,IACzB,EAAe,EAAE,MAAM,CAAC,KAAK,EAC/B,YAiDY,UAAC,OAAK,CAAC,MAAM,EAAC,MAAM,kBAAS,WAC7B,UAAC,OAAK,CAAC,MAAM,EAAC,MAAM,kBAAS,wBAO3C"}