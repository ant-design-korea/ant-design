{"version":3,"sources":["components/form/demo/form-context.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/form/demo/form-context.tsx?watch=parent';import React, { useEffect, useRef, useState } from 'react';\nimport { SmileOutlined, UserOutlined } from '@ant-design/icons';\nimport { Avatar, Button, Flex, Form, Input, InputNumber, Modal, Space, Typography } from 'antd';\nimport type { GetRef } from 'antd';\n\ntype FormInstance = GetRef<typeof Form>;\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\ninterface UserType {\n  name: string;\n  age: string;\n}\n\ninterface ModalFormProps {\n  open: boolean;\n  onCancel: () => void;\n}\n\n// reset form fields when modal is form, closed\nconst useResetFormOnCloseModal = ({ form, open }: { form: FormInstance; open: boolean }) => {\n  const prevOpenRef = useRef<boolean>();\n  useEffect(() => {\n    prevOpenRef.current = open;\n  }, [open]);\n  const prevOpen = prevOpenRef.current;\n\n  useEffect(() => {\n    if (!open && prevOpen) {\n      form.resetFields();\n    }\n  }, [form, prevOpen, open]);\n};\n\nconst ModalForm: React.FC<ModalFormProps> = ({ open, onCancel }) => {\n  const [form] = Form.useForm();\n\n  useResetFormOnCloseModal({\n    form,\n    open,\n  });\n\n  const onOk = () => {\n    form.submit();\n  };\n\n  return (\n    <Modal title=\"Basic Drawer\" open={open} onOk={onOk} onCancel={onCancel}>\n      <Form form={form} layout=\"vertical\" name=\"userForm\">\n        <Form.Item name=\"name\" label=\"User Name\" rules={[{ required: true }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"age\" label=\"User Age\" rules={[{ required: true }]}>\n          <InputNumber />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nconst App: React.FC = () => {\n  const [open, setOpen] = useState(false);\n\n  const showUserModal = () => {\n    setOpen(true);\n  };\n\n  const hideUserModal = () => {\n    setOpen(false);\n  };\n\n  const onFinish = (values: any) => {\n    console.log('Finish:', values);\n  };\n\n  return (\n    <Form.Provider\n      onFormFinish={(name, { values, forms }) => {\n        if (name === 'userForm') {\n          const { basicForm } = forms;\n          const users = basicForm.getFieldValue('users') || [];\n          basicForm.setFieldsValue({ users: [...users, values] });\n          setOpen(false);\n        }\n      }}\n    >\n      <Form {...layout} name=\"basicForm\" onFinish={onFinish} style={{ maxWidth: 600 }}>\n        <Form.Item name=\"group\" label=\"Group Name\" rules={[{ required: true }]}>\n          <Input />\n        </Form.Item>\n\n        {/* Create a hidden field to make Form instance record this */}\n        <Form.Item name=\"users\" noStyle />\n\n        <Form.Item\n          label=\"User List\"\n          shouldUpdate={(prevValues, curValues) => prevValues.users !== curValues.users}\n        >\n          {({ getFieldValue }) => {\n            const users: UserType[] = getFieldValue('users') || [];\n            return users.length ? (\n              <Flex vertical gap={8}>\n                {users.map((user) => (\n                  <Space key={user.name}>\n                    <Avatar icon={<UserOutlined />} />\n                    {`${user.name} - ${user.age}`}\n                  </Space>\n                ))}\n              </Flex>\n            ) : (\n              <Typography.Text className=\"ant-form-text\" type=\"secondary\">\n                ( <SmileOutlined /> No user yet. )\n              </Typography.Text>\n            );\n          }}\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n          <Button htmlType=\"submit\" type=\"primary\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" style={{ margin: '0 8px' }} onClick={showUserModal}>\n            Add User\n          </Button>\n        </Form.Item>\n      </Form>\n\n      <ModalForm open={open} onCancel={hideUserModal} />\n    </Form.Provider>\n  );\n};\n\nexport default App;\n"],"names":[],"mappings":"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"}