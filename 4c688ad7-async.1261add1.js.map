{"version":3,"sources":["components/transfer/demo/component-token.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/transfer/demo/component-token.tsx?watch=parent';import React, { useState } from 'react';\nimport { ConfigProvider, Space, Switch, Table, Tag, Transfer } from 'antd';\nimport type { GetProp, TableColumnsType, TableProps, TransferProps } from 'antd';\nimport difference from 'lodash/difference';\n\ntype TableRowSelection<T> = TableProps<T>['rowSelection'];\n\ntype TransferItem = GetProp<TransferProps, 'dataSource'>[number];\n\ninterface RecordType {\n  key: string;\n  title: string;\n  description: string;\n  disabled: boolean;\n  tag: string;\n}\n\ninterface DataType {\n  key: string;\n  title: string;\n  description: string;\n  disabled: boolean;\n  tag: string;\n}\n\ninterface TableTransferProps extends TransferProps<TransferItem> {\n  dataSource: DataType[];\n  leftColumns: TableColumnsType<DataType>;\n  rightColumns: TableColumnsType<DataType>;\n}\n\n// Customize Table Transfer\nconst TableTransfer = ({ leftColumns, rightColumns, ...restProps }: TableTransferProps) => (\n  <Transfer {...restProps}>\n    {({\n      direction,\n      filteredItems,\n      onItemSelectAll,\n      onItemSelect,\n      selectedKeys: listSelectedKeys,\n      disabled: listDisabled,\n    }) => {\n      const columns = direction === 'left' ? leftColumns : rightColumns;\n\n      const rowSelection: TableRowSelection<TransferItem> = {\n        getCheckboxProps: (item) => ({ disabled: listDisabled || item.disabled }),\n        onSelectAll(selected, selectedRows) {\n          const treeSelectedKeys = selectedRows\n            .filter((item) => !item.disabled)\n            .map(({ key }) => key);\n          const diffKeys = selected\n            ? difference(treeSelectedKeys, listSelectedKeys)\n            : difference(listSelectedKeys, treeSelectedKeys);\n          onItemSelectAll(diffKeys as string[], selected);\n        },\n        onSelect({ key }, selected) {\n          onItemSelect(key as string, selected);\n        },\n        selectedRowKeys: listSelectedKeys,\n      };\n\n      return (\n        <Table\n          rowSelection={rowSelection}\n          columns={columns}\n          dataSource={filteredItems}\n          size=\"small\"\n          style={{ pointerEvents: listDisabled ? 'none' : undefined }}\n          onRow={({ key, disabled: itemDisabled }) => ({\n            onClick: () => {\n              if (itemDisabled || listDisabled) {\n                return;\n              }\n              onItemSelect(key as string, !listSelectedKeys.includes(key as string));\n            },\n          })}\n        />\n      );\n    }}\n  </Transfer>\n);\n\nconst mockTags = ['cat', 'dog', 'bird'];\n\nconst mockData: RecordType[] = Array.from({ length: 20 }).map((_, i) => ({\n  key: i.toString(),\n  title: `content${i + 1}`,\n  description: `description of content${i + 1}`,\n  disabled: i % 4 === 0,\n  tag: mockTags[i % 3],\n}));\n\nconst leftTableColumns: TableColumnsType<DataType> = [\n  {\n    dataIndex: 'title',\n    title: 'Name',\n  },\n  {\n    dataIndex: 'tag',\n    title: 'Tag',\n    render: (tag) => <Tag>{tag}</Tag>,\n  },\n  {\n    dataIndex: 'description',\n    title: 'Description',\n  },\n];\n\nconst rightTableColumns: TableColumnsType<DataType> = [\n  {\n    dataIndex: 'title',\n    title: 'Name',\n  },\n];\n\nconst initialTargetKeys = mockData.filter((item) => Number(item.key) > 10).map((item) => item.key);\n\nconst App: React.FC = () => {\n  const [targetKeys, setTargetKeys] = useState<React.Key[]>(initialTargetKeys);\n  const [selectedKeys, setSelectedKeys] = useState<React.Key[]>([]);\n\n  const onChange: TransferProps['onChange'] = (nextTargetKeys, direction, moveKeys) => {\n    console.log('targetKeys:', nextTargetKeys);\n    console.log('direction:', direction);\n    console.log('moveKeys:', moveKeys);\n    setTargetKeys(nextTargetKeys);\n  };\n\n  const onSelectChange: TransferProps['onSelectChange'] = (\n    sourceSelectedKeys,\n    targetSelectedKeys,\n  ) => {\n    console.log('sourceSelectedKeys:', sourceSelectedKeys);\n    console.log('targetSelectedKeys:', targetSelectedKeys);\n    setSelectedKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\n  };\n\n  const onScroll: TransferProps['onScroll'] = (direction, e) => {\n    console.log('direction:', direction);\n    console.log('target:', e.target);\n  };\n\n  const [disabled, setDisabled] = useState(false);\n  const [showSearch, setShowSearch] = useState(false);\n\n  const secondOnChange: TransferProps['onChange'] = (nextTargetKeys) => {\n    setTargetKeys(nextTargetKeys);\n  };\n\n  const triggerDisable = (checked: boolean) => {\n    setDisabled(checked);\n  };\n\n  const triggerShowSearch = (checked: boolean) => {\n    setShowSearch(checked);\n  };\n\n  return (\n    <ConfigProvider\n      theme={{\n        components: {\n          Transfer: {\n            listWidth: 40,\n            listWidthLG: 50,\n            listHeight: 30,\n            itemHeight: 20,\n            itemPaddingBlock: 10,\n            headerHeight: 18,\n          },\n        },\n      }}\n    >\n      <Transfer\n        dataSource={mockData}\n        titles={['Source', 'Target']}\n        targetKeys={targetKeys}\n        selectedKeys={selectedKeys}\n        onChange={onChange}\n        onSelectChange={onSelectChange}\n        onScroll={onScroll}\n        render={(item) => item.title}\n      />\n      <Transfer status=\"error\" />\n      <Transfer status=\"warning\" showSearch />\n      <TableTransfer\n        dataSource={mockData}\n        targetKeys={targetKeys}\n        disabled={disabled}\n        showSearch={showSearch}\n        onChange={secondOnChange}\n        filterOption={(inputValue, item) =>\n          item.title!.indexOf(inputValue) !== -1 || item.tag.indexOf(inputValue) !== -1\n        }\n        leftColumns={leftTableColumns}\n        rightColumns={rightTableColumns}\n      />\n      <Space style={{ marginTop: 16 }}>\n        <Switch\n          unCheckedChildren=\"disabled\"\n          checkedChildren=\"disabled\"\n          checked={disabled}\n          onChange={triggerDisable}\n        />\n        <Switch\n          unCheckedChildren=\"showSearch\"\n          checkedChildren=\"showSearch\"\n          checked={showSearch}\n          onChange={triggerShowSearch}\n        />\n      </Space>\n    </ConfigProvider>\n  );\n};\n\nexport default App;\n"],"names":[],"mappings":"uOAsNA,+CAAA,4CAtNO,oBAAoI,gBACvE,oBAE7C,aA6BvB,IAAM,EAAgB,CAAC,CAAE,YAAA,CAAW,CAAE,aAAA,CAAY,CAAE,GAAG,EAA+B,GACpF,UAAC,UAAQ,EAAE,GAAG,CAAS,UACpB,CAAC,CACA,UAAA,CAAS,CACT,cAAA,CAAa,CACb,gBAAA,CAAe,CACf,aAAA,CAAY,CACZ,aAAc,CAAgB,CAC9B,SAAU,CAAY,CACvB,GAqBG,UAAC,OAAK,EACJ,aAnBkD,CACpD,iBAAkB,AAAC,GAAU,CAAA,CAAE,SAAU,GAAgB,EAAK,QAAQ,AAAC,CAAA,EACvE,YAAY,CAAQ,CAAE,CAAY,EAChC,IAAM,EAAmB,EACtB,MAAM,CAAC,AAAC,GAAS,CAAC,EAAK,QAAQ,EAC/B,GAAG,CAAC,CAAC,CAAE,IAAA,CAAG,CAAE,GAAK,GACd,EAAW,EACb,GAAA,SAAU,EAAC,EAAkB,GAC7B,GAAA,SAAU,EAAC,EAAkB,GACjC,EAAgB,EAAsB,GACxC,EACA,SAAS,CAAE,IAAA,CAAG,CAAE,CAAE,CAAQ,EACxB,EAAa,EAAe,GAC9B,EACA,gBAAiB,CACnB,EAKI,QAtBY,AAAc,SAAd,EAAuB,EAAc,EAuBjD,WAAY,EACZ,KAAK,QACL,MAAO,CAAE,cAAe,EAAe,OAAS,KAAA,CAAU,EAC1D,MAAO,CAAC,CAAE,IAAA,CAAG,CAAE,SAAU,CAAY,CAAE,GAAM,CAAA,CAC3C,QAAS,KACH,GAAgB,GAGpB,EAAa,EAAe,CAAC,EAAiB,QAAQ,CAAC,IACzD,CACF,CAAA,MAOJ,EAAW,CAAC,MAAO,MAAO,OAAO,CAEjC,EAAyB,MAAM,IAAI,CAAC,CAAE,OAAQ,EAAG,GAAG,GAAG,CAAC,CAAC,EAAG,IAAO,CAAA,CACvE,IAAK,EAAE,QAAQ,GACf,MAAO,CAAC,OAAO,EAAE,EAAI,EAAE,CAAC,CACxB,YAAa,CAAC,sBAAsB,EAAE,EAAI,EAAE,CAAC,CAC7C,SAAU,EAAI,GAAM,EACpB,IAAK,CAAQ,CAAC,EAAI,EAAE,AACtB,CAAA,GAEM,EAA+C,CACnD,CACE,UAAW,QACX,MAAO,MACT,EACA,CACE,UAAW,MACX,MAAO,MACP,OAAQ,AAAC,GAAQ,UAAC,KAAG,WAAE,GACzB,EACA,CACE,UAAW,cACX,MAAO,aACT,EACD,CAEK,EAAgD,CACpD,CACE,UAAW,QACX,MAAO,MACT,EACD,CAEK,EAAoB,EAAS,MAAM,CAAC,AAAC,GAAS,OAAO,EAAK,GAAG,EAAI,IAAI,GAAG,CAAC,AAAC,GAAS,EAAK,GAAG,MAmGjG,EAjGsB,KACpB,GAAM,CAAC,EAAY,EAAc,CAAG,GAAA,UAAQ,EAAc,GACpD,CAAC,EAAc,EAAgB,CAAG,GAAA,UAAQ,EAAc,EAAE,EAuB1D,CAAC,EAAU,EAAY,CAAG,GAAA,UAAQ,EAAC,CAAA,GACnC,CAAC,EAAY,EAAc,CAAG,GAAA,UAAQ,EAAC,CAAA,GAc7C,MACE,WAAC,gBAAc,EACb,MAAO,CACL,WAAY,CACV,SAAU,CACR,UAAW,GACX,YAAa,GACb,WAAY,GACZ,WAAY,GACZ,iBAAkB,GAClB,aAAc,EAChB,CACF,CACF,YAEA,UAAC,UAAQ,EACP,WAAY,EACZ,OAAQ,CAAC,SAAU,SAAS,CAC5B,WAAY,EACZ,aAAc,EACd,SAxDsC,CAAC,EAAgB,EAAW,KACtE,QAAQ,GAAG,CAAC,cAAe,GAC3B,QAAQ,GAAG,CAAC,aAAc,GAC1B,QAAQ,GAAG,CAAC,YAAa,GACzB,EAAc,GAChB,EAoDM,eAlDkD,CACtD,EACA,KAEA,QAAQ,GAAG,CAAC,sBAAuB,GACnC,QAAQ,GAAG,CAAC,sBAAuB,GACnC,EAAgB,IAAI,KAAuB,EAAmB,EAChE,EA4CM,SA1CsC,CAAC,EAAW,KACtD,QAAQ,GAAG,CAAC,aAAc,GAC1B,QAAQ,GAAG,CAAC,UAAW,EAAE,MAAM,EACjC,EAwCM,OAAQ,AAAC,GAAS,EAAK,KAAK,GAE9B,UAAC,UAAQ,EAAC,OAAO,UACjB,UAAC,UAAQ,EAAC,OAAO,UAAU,UAAU,MACrC,UAAC,GACC,WAAY,EACZ,WAAY,EACZ,SAAU,EACV,WAAY,EACZ,SA5C4C,AAAC,IACjD,EAAc,GAChB,EA2CM,aAAc,CAAC,EAAY,IACzB,AAAoC,KAApC,EAAK,KAAK,CAAE,OAAO,CAAC,IAAsB,AAAiC,KAAjC,EAAK,GAAG,CAAC,OAAO,CAAC,GAE7D,YAAa,EACb,aAAc,IAEhB,WAAC,OAAK,EAAC,MAAO,CAAE,UAAW,EAAG,YAC5B,UAAC,QAAM,EACL,kBAAkB,WAClB,gBAAgB,WAChB,QAAS,EACT,SApDe,AAAC,IACtB,EAAY,GACd,IAoDM,UAAC,QAAM,EACL,kBAAkB,aAClB,gBAAgB,aAChB,QAAS,EACT,SAtDkB,AAAC,IACzB,EAAc,GAChB,UAyDF"}