{"version":3,"sources":["components/table/demo/grouping-columns.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/table/demo/grouping-columns.tsx?watch=parent';import React from 'react';\nimport { Table } from 'antd';\nimport type { TableColumnsType } from 'antd';\n\ninterface DataType {\n  key: React.Key;\n  name: string;\n  age: number;\n  street: string;\n  building: string;\n  number: number;\n  companyAddress: string;\n  companyName: string;\n  gender: string;\n}\n\nconst columns: TableColumnsType<DataType> = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    width: 100,\n    fixed: 'left',\n    filters: [\n      {\n        text: 'Joe',\n        value: 'Joe',\n      },\n      {\n        text: 'John',\n        value: 'John',\n      },\n    ],\n    onFilter: (value, record) => record.name.indexOf(value as string) === 0,\n  },\n  {\n    title: 'Other',\n    children: [\n      {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        width: 150,\n        sorter: (a, b) => a.age - b.age,\n      },\n      {\n        title: 'Address',\n        children: [\n          {\n            title: 'Street',\n            dataIndex: 'street',\n            key: 'street',\n            width: 150,\n          },\n          {\n            title: 'Block',\n            children: [\n              {\n                title: 'Building',\n                dataIndex: 'building',\n                key: 'building',\n                width: 100,\n              },\n              {\n                title: 'Door No.',\n                dataIndex: 'number',\n                key: 'number',\n                width: 100,\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    title: 'Company',\n    children: [\n      {\n        title: 'Company Address',\n        dataIndex: 'companyAddress',\n        key: 'companyAddress',\n        width: 200,\n      },\n      {\n        title: 'Company Name',\n        dataIndex: 'companyName',\n        key: 'companyName',\n      },\n    ],\n  },\n  {\n    title: 'Gender',\n    dataIndex: 'gender',\n    key: 'gender',\n    width: 80,\n    fixed: 'right',\n  },\n];\n\nconst data: DataType[] = [];\nfor (let i = 0; i < 100; i++) {\n  data.push({\n    key: i,\n    name: 'John Brown',\n    age: i + 1,\n    street: 'Lake Park',\n    building: 'C',\n    number: 2035,\n    companyAddress: 'Lake Street 42',\n    companyName: 'SoftLake Co',\n    gender: 'M',\n  });\n}\n\nconst App: React.FC = () => (\n  <Table\n    columns={columns}\n    dataSource={data}\n    bordered\n    size=\"middle\"\n    scroll={{ x: 'calc(700px + 50%)', y: 240 }}\n  />\n);\n\nexport default App;\n"],"names":[],"mappings":"qOA6HA,+CAAA,4BA7HO,oBACe,YAetB,IAAM,EAAsC,CAC1C,CACE,MAAO,OACP,UAAW,OACX,IAAK,OACL,MAAO,IACP,MAAO,OACP,QAAS,CACP,CACE,KAAM,MACN,MAAO,KACT,EACA,CACE,KAAM,OACN,MAAO,MACT,EACD,CACD,SAAU,CAAC,EAAO,IAAW,AAAyC,IAAzC,EAAO,IAAI,CAAC,OAAO,CAAC,EACnD,EACA,CACE,MAAO,QACP,SAAU,CACR,CACE,MAAO,MACP,UAAW,MACX,IAAK,MACL,MAAO,IACP,OAAQ,CAAC,EAAG,IAAM,EAAE,GAAG,CAAG,EAAE,GAAG,AACjC,EACA,CACE,MAAO,UACP,SAAU,CACR,CACE,MAAO,SACP,UAAW,SACX,IAAK,SACL,MAAO,GACT,EACA,CACE,MAAO,QACP,SAAU,CACR,CACE,MAAO,WACP,UAAW,WACX,IAAK,WACL,MAAO,GACT,EACA,CACE,MAAO,WACP,UAAW,SACX,IAAK,SACL,MAAO,GACT,EACD,AACH,EACD,AACH,EACD,AACH,EACA,CACE,MAAO,UACP,SAAU,CACR,CACE,MAAO,kBACP,UAAW,iBACX,IAAK,iBACL,MAAO,GACT,EACA,CACE,MAAO,eACP,UAAW,cACX,IAAK,aACP,EACD,AACH,EACA,CACE,MAAO,SACP,UAAW,SACX,IAAK,SACL,MAAO,GACP,MAAO,OACT,EACD,CAEK,EAAmB,EAAE,CAC3B,IAAK,IAAI,EAAI,EAAG,EAAI,IAAK,IACvB,EAAK,IAAI,CAAC,CACR,IAAK,EACL,KAAM,aACN,IAAK,EAAI,EACT,OAAQ,YACR,SAAU,IACV,OAAQ,KACR,eAAgB,iBAChB,YAAa,cACb,OAAQ,GACV,OAaF,EAVsB,IACpB,UAAC,OAAK,EACJ,QAAS,EACT,WAAY,EACZ,QAAQ,IACR,KAAK,SACL,OAAQ,CAAE,EAAG,oBAAqB,EAAG,GAAI"}