{"version":3,"sources":["components/table/demo/row-selection-debug.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/table/demo/row-selection-debug.tsx?watch=parent';import React, { useState } from 'react';\nimport { InputNumber, Table } from 'antd';\nimport type { TableColumnsType, TableProps } from 'antd';\n\ntype TableRowSelection<T extends object = object> = TableProps<T>['rowSelection'];\n\nconst RenderTimes = () => {\n  const timesRef = React.useRef(0);\n  timesRef.current += 1;\n\n  return <span>{timesRef.current}</span>;\n};\n\ninterface DataType {\n  key: React.Key;\n  name: string;\n  age: number;\n  address: string;\n}\n\nconst shouldCellUpdate = (record: any, prevRecord: any) => record !== prevRecord;\n\nconst columns: TableColumnsType<DataType> = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    shouldCellUpdate,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    shouldCellUpdate,\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    shouldCellUpdate,\n    render: (addr) => (\n      <>\n        {addr}\n        <RenderTimes />\n      </>\n    ),\n  },\n];\n\nfunction genData(count: number) {\n  const data: DataType[] = [];\n\n  for (let i = 0; i < count; i++) {\n    data.push({\n      key: i,\n      name: `Edward King ${i}`,\n      age: 32,\n      address: `London, Park Lane no. ${i}`,\n    });\n  }\n\n  return data;\n}\n\nconst App: React.FC = () => {\n  const [data, setData] = useState(genData(50));\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n\n  const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n    console.log('selectedRowKeys changed: ', newSelectedRowKeys);\n    setSelectedRowKeys(newSelectedRowKeys);\n  };\n\n  const rowSelection: TableRowSelection<DataType> = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n  };\n\n  return (\n    <>\n      <InputNumber\n        value={data.length}\n        onChange={(cnt) => {\n          setData(genData(cnt || 0));\n        }}\n      />\n      <Table rowSelection={rowSelection} columns={columns} dataSource={data} pagination={false} />\n    </>\n  );\n};\n\nexport default App;\n"],"names":[],"mappings":"uOAwFA,+CAAA,4CAxFO,wBAAqI,iBACzG,YAKnC,IAAM,EAAc,KAClB,IAAM,EAAW,SAAK,CAAC,MAAM,CAAC,GAG9B,OAFA,EAAS,OAAO,EAAI,EAEb,UAAC,iBAAM,EAAS,OAAO,GAChC,EASM,EAAmB,CAAC,EAAa,IAAoB,IAAW,EAEhE,EAAsC,CAC1C,CACE,MAAO,OACP,UAAW,OACX,iBAAA,CACF,EACA,CACE,MAAO,MACP,UAAW,MACX,iBAAA,CACF,EACA,CACE,MAAO,UACP,UAAW,UACX,iBAAA,EACA,OAAQ,AAAC,GACP,iCACG,EACD,UAAC,QAGP,EACD,CAED,SAAS,EAAQ,CAAa,EAC5B,IAAM,EAAmB,EAAE,CAE3B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,IACzB,EAAK,IAAI,CAAC,CACR,IAAK,EACL,KAAM,CAAC,YAAY,EAAE,EAAE,CAAC,CACxB,IAAK,GACL,QAAS,CAAC,sBAAsB,EAAE,EAAE,CAAC,AACvC,GAGF,OAAO,EACT,KA6BA,EA3BsB,KACpB,GAAM,CAAC,EAAM,EAAQ,CAAG,GAAA,UAAQ,EAAC,EAAQ,KACnC,CAAC,EAAiB,EAAmB,CAAG,GAAA,UAAQ,EAAc,EAAE,EAYtE,MACE,iCACE,UAAC,aAAW,EACV,MAAO,EAAK,MAAM,CAClB,SAAU,AAAC,IACT,EAAQ,EAAQ,GAAO,IACzB,IAEF,UAAC,OAAK,EAAC,aAbuC,CAChD,gBAAA,EACA,SAPqB,AAAC,IACtB,QAAQ,GAAG,CAAC,4BAA6B,GACzC,EAAmB,GACrB,CAKA,EAUuC,QAAS,EAAS,WAAY,EAAM,WAAY,CAAA,OAGzF"}