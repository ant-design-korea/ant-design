{"version":3,"sources":["components/table/demo/reset-filter.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/table/demo/reset-filter.tsx?watch=parent';import React, { useState } from 'react';\nimport type { TableColumnsType, TableProps } from 'antd';\nimport { Button, Space, Table } from 'antd';\n\ntype OnChange = NonNullable<TableProps<DataType>['onChange']>;\ntype Filters = Parameters<OnChange>[1];\n\ntype GetSingle<T> = T extends (infer U)[] ? U : never;\ntype Sorts = GetSingle<Parameters<OnChange>[2]>;\n\ninterface DataType {\n  key: string;\n  name: string;\n  age: number;\n  address: string;\n}\n\nconst data: DataType[] = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sydney No. 1 Lake Park',\n  },\n  {\n    key: '4',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park',\n  },\n];\n\nconst App: React.FC = () => {\n  const [filteredInfo, setFilteredInfo] = useState<Filters>({});\n  const [sortedInfo, setSortedInfo] = useState<Sorts>({});\n\n  const handleChange: OnChange = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    setFilteredInfo(filters);\n    setSortedInfo(sorter as Sorts);\n  };\n\n  const clearFilters = () => {\n    setFilteredInfo({});\n  };\n\n  const clearAll = () => {\n    setFilteredInfo({});\n    setSortedInfo({});\n  };\n\n  const setAgeSort = () => {\n    setSortedInfo({\n      order: 'descend',\n      columnKey: 'age',\n    });\n  };\n\n  const columns: TableColumnsType<DataType> = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      filters: [\n        { text: 'Joe', value: 'Joe' },\n        { text: 'Jim', value: 'Jim' },\n      ],\n      filteredValue: filteredInfo.name || null,\n      onFilter: (value, record) => record.name.includes(value as string),\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortOrder: sortedInfo.columnKey === 'name' ? sortedInfo.order : null,\n      ellipsis: true,\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      sorter: (a, b) => a.age - b.age,\n      sortOrder: sortedInfo.columnKey === 'age' ? sortedInfo.order : null,\n      ellipsis: true,\n    },\n    {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      filters: [\n        { text: 'London', value: 'London' },\n        { text: 'New York', value: 'New York' },\n      ],\n      filteredValue: filteredInfo.address || null,\n      onFilter: (value, record) => record.address.includes(value as string),\n      sorter: (a, b) => a.address.length - b.address.length,\n      sortOrder: sortedInfo.columnKey === 'address' ? sortedInfo.order : null,\n      ellipsis: true,\n    },\n  ];\n\n  return (\n    <>\n      <Space style={{ marginBottom: 16 }}>\n        <Button onClick={setAgeSort}>Sort age</Button>\n        <Button onClick={clearFilters}>Clear filters</Button>\n        <Button onClick={clearAll}>Clear filters and sorters</Button>\n      </Space>\n      <Table columns={columns} dataSource={data} onChange={handleChange} />\n    </>\n  );\n};\n\nexport default App;\n"],"names":[],"mappings":"uOAyHA,+CAAA,4BAzHO,oBAA8H,gBAEhG,YAerC,IAAM,EAAmB,CACvB,CACE,IAAK,IACL,KAAM,aACN,IAAK,GACL,QAAS,0BACX,EACA,CACE,IAAK,IACL,KAAM,YACN,IAAK,GACL,QAAS,wBACX,EACA,CACE,IAAK,IACL,KAAM,YACN,IAAK,GACL,QAAS,wBACX,EACA,CACE,IAAK,IACL,KAAM,UACN,IAAK,GACL,QAAS,wBACX,EACD,KA+ED,EA7EsB,KACpB,GAAM,CAAC,EAAc,EAAgB,CAAG,GAAA,UAAQ,EAAU,CAAC,GACrD,CAAC,EAAY,EAAc,CAAG,GAAA,UAAQ,EAAQ,CAAC,GAwB/C,EAAsC,CAC1C,CACE,MAAO,OACP,UAAW,OACX,IAAK,OACL,QAAS,CACP,CAAE,KAAM,MAAO,MAAO,KAAM,EAC5B,CAAE,KAAM,MAAO,MAAO,KAAM,EAC7B,CACD,cAAe,EAAa,IAAI,EAAI,KACpC,SAAU,CAAC,EAAO,IAAW,EAAO,IAAI,CAAC,QAAQ,CAAC,GAClD,OAAQ,CAAC,EAAG,IAAM,EAAE,IAAI,CAAC,MAAM,CAAG,EAAE,IAAI,CAAC,MAAM,CAC/C,UAAW,AAAyB,SAAzB,EAAW,SAAS,CAAc,EAAW,KAAK,CAAG,KAChE,SAAU,CAAA,CACZ,EACA,CACE,MAAO,MACP,UAAW,MACX,IAAK,MACL,OAAQ,CAAC,EAAG,IAAM,EAAE,GAAG,CAAG,EAAE,GAAG,CAC/B,UAAW,AAAyB,QAAzB,EAAW,SAAS,CAAa,EAAW,KAAK,CAAG,KAC/D,SAAU,CAAA,CACZ,EACA,CACE,MAAO,UACP,UAAW,UACX,IAAK,UACL,QAAS,CACP,CAAE,KAAM,SAAU,MAAO,QAAS,EAClC,CAAE,KAAM,WAAY,MAAO,UAAW,EACvC,CACD,cAAe,EAAa,OAAO,EAAI,KACvC,SAAU,CAAC,EAAO,IAAW,EAAO,OAAO,CAAC,QAAQ,CAAC,GACrD,OAAQ,CAAC,EAAG,IAAM,EAAE,OAAO,CAAC,MAAM,CAAG,EAAE,OAAO,CAAC,MAAM,CACrD,UAAW,AAAyB,YAAzB,EAAW,SAAS,CAAiB,EAAW,KAAK,CAAG,KACnE,SAAU,CAAA,CACZ,EACD,CAED,MACE,iCACE,WAAC,OAAK,EAAC,MAAO,CAAE,aAAc,EAAG,YAC/B,UAAC,QAAM,EAAC,QAjDK,KACjB,EAAc,CACZ,MAAO,UACP,UAAW,KACb,GACF,WA4CmC,aAC7B,UAAC,QAAM,EAAC,QA3DO,KACnB,EAAgB,CAAC,GACnB,WAyDqC,kBAC/B,UAAC,QAAM,EAAC,QAxDG,KACf,EAAgB,CAAC,GACjB,EAAc,CAAC,GACjB,WAqDiC,iCAE7B,UAAC,OAAK,EAAC,QAAS,EAAS,WAAY,EAAM,SApEhB,CAAC,EAAY,EAAS,KACnD,QAAQ,GAAG,CAAC,qBAAsB,EAAY,EAAS,GACvD,EAAgB,GAChB,EAAc,GAChB,OAmEF"}