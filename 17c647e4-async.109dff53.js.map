{"version":3,"sources":["components/table/demo/virtual-list.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/table/demo/virtual-list.tsx?watch=parent';import React from 'react';\nimport { Button, Segmented, Space, Switch, Table, Typography } from 'antd';\nimport type { TableProps } from 'antd';\n\ninterface RecordType {\n  id: number;\n  firstName: string;\n  lastName: string;\n  age: number;\n  address1: string;\n  address2: string;\n  address3: string;\n}\n\nconst fixedColumns: TableProps<RecordType>['columns'] = [\n  {\n    title: 'ID',\n    dataIndex: 'id',\n    width: 100,\n    fixed: 'left',\n  },\n  {\n    title: 'FistName',\n    dataIndex: 'firstName',\n    width: 120,\n    fixed: 'left',\n  },\n  {\n    title: 'LastName',\n    dataIndex: 'lastName',\n    width: 120,\n    fixed: 'left',\n  },\n  {\n    title: 'Group',\n    width: 120,\n    render: (_, record) => `Group ${Math.floor(record.id / 4)}`,\n    onCell: (record) => ({\n      rowSpan: record.id % 4 === 0 ? 4 : 0,\n    }),\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    width: 100,\n    onCell: (record) => ({\n      colSpan: record.id % 4 === 0 ? 2 : 1,\n    }),\n  },\n  {\n    title: 'Address 1',\n    dataIndex: 'address1',\n    onCell: (record) => ({\n      colSpan: record.id % 4 === 0 ? 0 : 1,\n    }),\n  },\n  {\n    title: 'Address 2',\n    dataIndex: 'address2',\n  },\n  {\n    title: 'Address 3',\n    dataIndex: 'address3',\n  },\n  {\n    title: 'Action',\n    width: 150,\n    fixed: 'right',\n    render: () => (\n      <Space>\n        <Typography.Link>Action1</Typography.Link>\n        <Typography.Link>Action2</Typography.Link>\n      </Space>\n    ),\n  },\n];\n\nconst columns: TableProps<RecordType>['columns'] = [\n  {\n    title: 'ID',\n    dataIndex: 'id',\n    width: 100,\n  },\n  {\n    title: 'FistName',\n    dataIndex: 'firstName',\n    width: 120,\n  },\n  {\n    title: 'LastName',\n    dataIndex: 'lastName',\n    width: 120,\n  },\n];\n\nconst getData = (count: number) => {\n  const data: RecordType[] = new Array(count).fill(null).map((_, index) => ({\n    id: index,\n    firstName: `First_${index.toString(16)}`,\n    lastName: `Last_${index.toString(16)}`,\n    age: 25 + (index % 10),\n    address1: `New York No. ${index} Lake Park`,\n    address2: `London No. ${index} Lake Park`,\n    address3: `Sydney No. ${index} Lake Park`,\n  }));\n\n  return data;\n};\n\nconst App = () => {\n  const [fixed, setFixed] = React.useState(true);\n  const [bordered, setBordered] = React.useState(true);\n  const [expanded, setExpanded] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [count, setCount] = React.useState(10000);\n\n  const tblRef: Parameters<typeof Table>[0]['ref'] = React.useRef(null);\n  const data = React.useMemo(() => getData(count), [count]);\n\n  const mergedColumns = React.useMemo<typeof fixedColumns>(() => {\n    if (!fixed) {\n      return columns;\n    }\n\n    if (!expanded) {\n      return fixedColumns;\n    }\n\n    return fixedColumns.map((col) => ({ ...col, onCell: undefined }));\n  }, [expanded, fixed]);\n\n  const expandableProps = React.useMemo<TableProps<RecordType>['expandable']>(() => {\n    if (!expanded) {\n      return undefined;\n    }\n\n    return {\n      columnWidth: 48,\n      expandedRowRender: (record) => <p style={{ margin: 0 }}>ðŸŽ‰ Expanded {record.address1}</p>,\n      rowExpandable: (record) => record.id % 2 === 0,\n    };\n  }, [expanded]);\n\n  return (\n    <div style={{ padding: 64 }}>\n      <Space direction=\"vertical\" style={{ width: '100%' }}>\n        <Space>\n          <Switch\n            checked={bordered}\n            onChange={() => setBordered(!bordered)}\n            checkedChildren=\"Bordered\"\n            unCheckedChildren=\"Bordered\"\n          />\n          <Switch\n            checked={fixed}\n            onChange={() => setFixed(!fixed)}\n            checkedChildren=\"Fixed\"\n            unCheckedChildren=\"Fixed\"\n          />\n          <Switch\n            checked={expanded}\n            onChange={() => setExpanded(!expanded)}\n            checkedChildren=\"Expandable\"\n            unCheckedChildren=\"Expandable\"\n          />\n          <Switch\n            checked={empty}\n            onChange={() => setEmpty(!empty)}\n            checkedChildren=\"Empty\"\n            unCheckedChildren=\"Empty\"\n          />\n          <Segmented\n            value={count}\n            onChange={(value: number) => setCount(value)}\n            options={[\n              {\n                label: 'None',\n                value: 0,\n              },\n              {\n                label: 'Less',\n                value: 4,\n              },\n              {\n                label: 'Lot',\n                value: 10000,\n              },\n            ]}\n          />\n\n          {data.length >= 999 && (\n            <Button\n              onClick={() => {\n                tblRef.current?.scrollTo({ index: 999 });\n              }}\n            >\n              Scroll To index 999\n            </Button>\n          )}\n        </Space>\n\n        <Table\n          bordered={bordered}\n          virtual\n          columns={mergedColumns}\n          scroll={{ x: 2000, y: 400 }}\n          rowKey=\"id\"\n          dataSource={empty ? [] : data}\n          pagination={false}\n          ref={tblRef}\n          rowSelection={\n            expanded\n              ? undefined\n              : {\n                  type: 'radio',\n                  columnWidth: 48,\n                }\n          }\n          expandable={expandableProps}\n        />\n      </Space>\n    </div>\n  );\n};\n\nexport default App;\n"],"names":[],"mappings":"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"}