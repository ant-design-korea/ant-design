{"version":3,"sources":["components/modal/demo/modal-render.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/modal/demo/modal-render.tsx?watch=parent';import React, { useRef, useState } from 'react';\nimport { Button, Modal } from 'antd';\nimport type { DraggableData, DraggableEvent } from 'react-draggable';\nimport Draggable from 'react-draggable';\n\nconst App: React.FC = () => {\n  const [open, setOpen] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [bounds, setBounds] = useState({ left: 0, top: 0, bottom: 0, right: 0 });\n  const draggleRef = useRef<HTMLDivElement>(null);\n\n  const showModal = () => {\n    setOpen(true);\n  };\n\n  const handleOk = (e: React.MouseEvent<HTMLElement>) => {\n    console.log(e);\n    setOpen(false);\n  };\n\n  const handleCancel = (e: React.MouseEvent<HTMLElement>) => {\n    console.log(e);\n    setOpen(false);\n  };\n\n  const onStart = (_event: DraggableEvent, uiData: DraggableData) => {\n    const { clientWidth, clientHeight } = window.document.documentElement;\n    const targetRect = draggleRef.current?.getBoundingClientRect();\n    if (!targetRect) {\n      return;\n    }\n    setBounds({\n      left: -targetRect.left + uiData.x,\n      right: clientWidth - (targetRect.right - uiData.x),\n      top: -targetRect.top + uiData.y,\n      bottom: clientHeight - (targetRect.bottom - uiData.y),\n    });\n  };\n\n  return (\n    <>\n      <Button onClick={showModal}>Open Draggable Modal</Button>\n      <Modal\n        title={\n          <div\n            style={{ width: '100%', cursor: 'move' }}\n            onMouseOver={() => {\n              if (disabled) {\n                setDisabled(false);\n              }\n            }}\n            onMouseOut={() => {\n              setDisabled(true);\n            }}\n            // fix eslintjsx-a11y/mouse-events-have-key-events\n            // https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/master/docs/rules/mouse-events-have-key-events.md\n            onFocus={() => {}}\n            onBlur={() => {}}\n            // end\n          >\n            Draggable Modal\n          </div>\n        }\n        open={open}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        modalRender={(modal) => (\n          <Draggable\n            disabled={disabled}\n            bounds={bounds}\n            nodeRef={draggleRef}\n            onStart={(event, uiData) => onStart(event, uiData)}\n          >\n            <div ref={draggleRef}>{modal}</div>\n          </Draggable>\n        )}\n      >\n        <p>\n          Just don&apos;t learn physics at school and your life will be full of magic and miracles.\n        </p>\n        <br />\n        <p>Day before yesterday I saw a rabbit, and yesterday a deer, and today, you.</p>\n      </Modal>\n    </>\n  );\n};\n\nexport default App;\n"],"names":[],"mappings":"qOAuFA,+CAAA,4CAvFO,oBAAsI,gBAC/G,oBAER,aAoFtB,EAlFsB,KACpB,GAAM,CAAC,EAAM,EAAQ,CAAG,GAAA,UAAQ,EAAC,CAAA,GAC3B,CAAC,EAAU,EAAY,CAAG,GAAA,UAAQ,EAAC,CAAA,GACnC,CAAC,EAAQ,EAAU,CAAG,GAAA,UAAQ,EAAC,CAAE,KAAM,EAAG,IAAK,EAAG,OAAQ,EAAG,MAAO,CAAE,GACtE,EAAa,GAAA,QAAM,EAAiB,MAgBpC,EAAU,CAAC,EAAwB,SAEpB,EADnB,GAAM,CAAE,YAAA,CAAW,CAAE,aAAA,CAAY,CAAE,CAAG,OAAO,QAAQ,CAAC,eAAe,CAC/D,UAAa,EAAA,EAAW,OAAO,YAAlB,SAAA,EAAoB,qBAAqB,GACvD,GAGL,EAAU,CACR,KAAM,CAAC,EAAW,IAAI,CAAG,EAAO,CAAC,CACjC,MAAO,EAAe,CAAA,EAAW,KAAK,CAAG,EAAO,CAAC,AAAD,EAChD,IAAK,CAAC,EAAW,GAAG,CAAG,EAAO,CAAC,CAC/B,OAAQ,EAAgB,CAAA,EAAW,MAAM,CAAG,EAAO,CAAC,AAAD,CACrD,GACF,EAEA,MACE,iCACE,UAAC,QAAM,EAAC,QA9BM,KAChB,EAAQ,CAAA,GACV,WA4BgC,yBAC5B,WAAC,OAAK,EACJ,MACE,UAAC,OACC,MAAO,CAAE,MAAO,OAAQ,OAAQ,MAAO,EACvC,YAAa,KACP,GACF,EAAY,CAAA,GAEhB,EACA,WAAY,KACV,EAAY,CAAA,GACd,EAGA,QAAS,KAAO,EAChB,OAAQ,KAAO,WAEhB,oBAIH,KAAM,EACN,KAjDW,AAAC,IAChB,QAAQ,GAAG,CAAC,GACZ,EAAQ,CAAA,GACV,EA+CM,SA7Ce,AAAC,IACpB,QAAQ,GAAG,CAAC,GACZ,EAAQ,CAAA,GACV,EA2CM,YAAa,AAAC,GACZ,UAAC,SAAS,EACR,SAAU,EACV,OAAQ,EACR,QAAS,EACT,QAAS,CAAC,EAAO,IAAW,EAAQ,EAAO,YAE3C,UAAC,OAAI,IAAK,WAAa,gBAI3B,UAAC,cAAE,yFAGH,UAAC,SACD,UAAC,cAAE,qFAIX"}