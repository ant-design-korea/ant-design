{"version":3,"sources":["docs/react/getting-started.zh-CN.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/ant-design/ant-design/docs/react/getting-started.zh-CN.md?watch=parent';\n  export const texts = [{\"value\":\"Ant Design React 致力于提供给程序员\",\"paraId\":0},{\"value\":\"愉悦\",\"paraId\":0},{\"value\":\"的开发体验。\",\"paraId\":0},{\"value\":\"在开始之前，推荐先学习 \",\"paraId\":1},{\"value\":\"React\",\"paraId\":1},{\"value\":\"，并正确安装和配置了 \",\"paraId\":1},{\"value\":\"Node.js\",\"paraId\":1},{\"value\":\" v16 或以上。官方指南假设你已了解关于 HTML、CSS 和 JavaScript 的中级知识，并且已经完全掌握了 React 全家桶的正确开发方式。如果你刚开始学习前端或者 React，将 UI 框架作为你的第一步可能不是最好的主意。\",\"paraId\":1},{\"value\":\"这是一个最简单的 Ant Design 组件的在线 codesandbox 演示。\",\"paraId\":2,\"tocIndex\":0},{\"value\":\"const sandpackConfig = {\\n  autorun: true,\\n};\\n\\nimport React from 'react';\\nimport { Button, Space, DatePicker, version } from 'antd';\\n\\nconst App = () => (\\n  <div style={{ padding: '0 24px' }}>\\n    <h1>antd version: {version}</h1>\\n    <Space>\\n      <DatePicker />\\n      <Button type=\\\"primary\\\">Primary Button</Button>\\n    </Space>\\n  </div>\\n);\\n\\nexport default App;\\n\",\"paraId\":3,\"tocIndex\":0},{\"value\":\"访问 \",\"paraId\":4,\"tocIndex\":1},{\"value\":\"https://u.ant.design/codesandbox-repro\",\"paraId\":4,\"tocIndex\":1},{\"value\":\" 创建一个 codesandbox 的在线示例，别忘了保存以创建一个新的实例。\",\"paraId\":4,\"tocIndex\":1},{\"value\":\"直接用下面的代码替换 \",\"paraId\":5,\"tocIndex\":2},{\"value\":\"index.js\",\"paraId\":5,\"tocIndex\":2},{\"value\":\" 的内容，用 React 的方式直接使用 antd 组件。\",\"paraId\":5,\"tocIndex\":2},{\"value\":\"import React, { useState } from 'react';\\nimport { ConfigProvider, DatePicker, message } from 'antd';\\n// 由于 antd 组件的默认文案是英文，所以需要修改为中文\\nimport dayjs from 'dayjs';\\nimport { createRoot } from 'react-dom/client';\\n\\nimport 'dayjs/locale/zh-cn';\\n\\nimport zhCN from 'antd/locale/zh_CN';\\n\\nimport './index.css';\\n\\ndayjs.locale('zh-cn');\\n\\nconst App = () => {\\n  const [date, setDate] = useState(null);\\n  const [messageApi, contextHolder] = message.useMessage();\\n  const handleChange = (value) => {\\n    messageApi.info(`您选择的日期是: ${value ? value.format('YYYY年MM月DD日') : '未选择'}`);\\n    setDate(value);\\n  };\\n  return (\\n    <ConfigProvider locale={zhCN}>\\n      <div style={{ width: 400, margin: '100px auto' }}>\\n        <DatePicker onChange={handleChange} />\\n        <div style={{ marginTop: 16 }}>\\n          当前日期：{date ? date.format('YYYY年MM月DD日') : '未选择'}\\n        </div>\\n      </div>\\n      {contextHolder}\\n    </ConfigProvider>\\n  );\\n};\\n\\ncreateRoot(document.getElementById('root')).render(<App />);\\n\",\"paraId\":6,\"tocIndex\":2},{\"value\":\"你可以在组件页面的左侧菜单查看组件列表，比如 \",\"paraId\":7,\"tocIndex\":3},{\"value\":\"Alert\",\"paraId\":8,\"tocIndex\":3},{\"value\":\" 组件，组件文档中提供了各类演示，最下方有组件 API 文档可以查阅。在代码演示部分找到第一个例子，点击右下角的图标展开代码。\",\"paraId\":7,\"tocIndex\":3},{\"value\":\"然后依照演示代码的写法，在之前的 codesandbox 里修改 \",\"paraId\":9,\"tocIndex\":3},{\"value\":\"index.js\",\"paraId\":9,\"tocIndex\":3},{\"value\":\"，首先在 \",\"paraId\":9,\"tocIndex\":3},{\"value\":\"import\",\"paraId\":9,\"tocIndex\":3},{\"value\":\" 内引入 Alert 组件：\",\"paraId\":9,\"tocIndex\":3},{\"value\":\"- import { ConfigProvider, DatePicker, message } from 'antd';\\n+ import { ConfigProvider, DatePicker, message, Alert } from 'antd';\\n\",\"paraId\":10,\"tocIndex\":3},{\"value\":\"然后在 \",\"paraId\":11,\"tocIndex\":3},{\"value\":\"render\",\"paraId\":11,\"tocIndex\":3},{\"value\":\" 内添加相应的 jsx 代码：\",\"paraId\":11,\"tocIndex\":3},{\"value\":\"  <DatePicker onChange={value => this.handleChange(value)} />\\n  <div style={{ marginTop: 16 }}>\\n-   当前日期：{date ? date.format('YYYY-MM-DD') : '未选择'}\\n+   <Alert message=\\\"当前日期\\\" description={date ? date.format('YYYY年MM月DD日') : '未选择'} />\\n  </div>\\n\",\"paraId\":12,\"tocIndex\":3},{\"value\":\"选择一个日期，在右侧预览区就可以看到如图的效果。\",\"paraId\":13,\"tocIndex\":3},{\"value\":\"好的，现在你已经会使用基本的 antd 组件了，你可以在这个例子中继续探索其他组件的用法。如果你遇到组件的 bug，也推荐建一个可重现的 codesandbox 来报告 bug。\",\"paraId\":14,\"tocIndex\":3},{\"value\":\"在实际项目开发中，你会遇到构建、调试、代理、打包部署等一系列工程化的需求。你可以阅读后面的文档或者使用以下脚手架和范例：\",\"paraId\":15,\"tocIndex\":4},{\"value\":\"Ant Design Pro\",\"paraId\":16,\"tocIndex\":4},{\"value\":\"create-next-app\",\"paraId\":16,\"tocIndex\":4},{\"value\":\"更多脚手架可以查看 \",\"paraId\":16,\"tocIndex\":4},{\"value\":\"脚手架市场\",\"paraId\":16,\"tocIndex\":4},{\"value\":\"antd\",\"paraId\":17,\"tocIndex\":5},{\"value\":\" 默认支持基于 ES modules 的 tree shaking，直接引入 \",\"paraId\":17,\"tocIndex\":5},{\"value\":\"import { Button } from 'antd';\",\"paraId\":17,\"tocIndex\":5},{\"value\":\" 就会有按需加载的效果。\",\"paraId\":17,\"tocIndex\":5},{\"value\":\"如果想自己维护工作流，我们推荐使用 \",\"paraId\":18,\"tocIndex\":6},{\"value\":\"webpack\",\"paraId\":18,\"tocIndex\":6},{\"value\":\" 或者 \",\"paraId\":18,\"tocIndex\":6},{\"value\":\"vite\",\"paraId\":18,\"tocIndex\":6},{\"value\":\" 进行构建和调试，可以使用 React 生态圈中的 \",\"paraId\":18,\"tocIndex\":6},{\"value\":\"各种脚手架\",\"paraId\":18,\"tocIndex\":6},{\"value\":\" 进行开发。\",\"paraId\":18,\"tocIndex\":6},{\"value\":\"目前社区也有很多基于 antd 定制的 \",\"paraId\":19,\"tocIndex\":6},{\"value\":\"React 脚手架\",\"paraId\":19,\"tocIndex\":6},{\"value\":\"，欢迎进行试用和贡献。\",\"paraId\":19,\"tocIndex\":6}];\n  "],"names":[],"mappings":"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"}