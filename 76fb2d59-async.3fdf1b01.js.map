{"version":3,"sources":["components/config-provider/demo/theme.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/config-provider/demo/theme.tsx?watch=parent';import React from 'react';\nimport {\n  Button,\n  ColorPicker,\n  ConfigProvider,\n  Divider,\n  Form,\n  Input,\n  InputNumber,\n  Space,\n  Switch,\n} from 'antd';\nimport type { ColorPickerProps, GetProp } from 'antd';\n\ntype Color = Extract<GetProp<ColorPickerProps, 'value'>, { cleared: any }>;\n\ntype ThemeData = {\n  borderRadius: number;\n  colorPrimary: string;\n  Button?: {\n    colorPrimary: string;\n    algorithm?: boolean;\n  };\n};\n\nconst defaultData: ThemeData = {\n  borderRadius: 6,\n  colorPrimary: '#1677ff',\n  Button: {\n    colorPrimary: '#00B96B',\n  },\n};\n\nexport default () => {\n  const [form] = Form.useForm();\n\n  const [data, setData] = React.useState<ThemeData>(defaultData);\n\n  return (\n    <div>\n      <ConfigProvider\n        theme={{\n          token: {\n            colorPrimary: data.colorPrimary,\n            borderRadius: data.borderRadius,\n          },\n          components: {\n            Button: {\n              colorPrimary: data.Button?.colorPrimary,\n              algorithm: data.Button?.algorithm,\n            },\n          },\n        }}\n      >\n        <Space>\n          <Input />\n          <Button type=\"primary\">Button</Button>\n        </Space>\n      </ConfigProvider>\n      <Divider />\n      <Form\n        form={form}\n        onValuesChange={(_, allValues) => {\n          setData({\n            ...allValues,\n          });\n        }}\n        name=\"theme\"\n        initialValues={defaultData}\n        labelCol={{ span: 4 }}\n        wrapperCol={{ span: 20 }}\n      >\n        <Form.Item\n          name=\"colorPrimary\"\n          label=\"Primary Color\"\n          trigger=\"onChangeComplete\"\n          getValueFromEvent={(color: Color) => color.toHexString()}\n        >\n          <ColorPicker />\n        </Form.Item>\n        <Form.Item name=\"borderRadius\" label=\"Border Radius\">\n          <InputNumber />\n        </Form.Item>\n        <Form.Item label=\"Button\">\n          <Form.Item name={['Button', 'algorithm']} valuePropName=\"checked\" label=\"algorithm\">\n            <Switch />\n          </Form.Item>\n          <Form.Item\n            name={['Button', 'colorPrimary']}\n            label=\"Primary Color\"\n            trigger=\"onChangeComplete\"\n            getValueFromEvent={(color: Color) => color.toHexString()}\n          >\n            <ColorPicker />\n          </Form.Item>\n        </Form.Item>\n        <Form.Item name=\"submit\" wrapperCol={{ offset: 4, span: 20 }}>\n          <Button type=\"primary\">Submit</Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n"],"names":[],"mappings":"uOAiCA,+CAAA,4CAjCO,wBAAmH,iBAWnH,YAcP,IAAM,EAAyB,CAC7B,aAAc,EACd,aAAc,UACd,OAAQ,CACN,aAAc,SAChB,CACF,MAEA,EAAe,SAea,EACH,EAfvB,GAAM,CAAC,EAAK,CAAG,MAAI,CAAC,OAAO,GAErB,CAAC,EAAM,EAAQ,CAAG,SAAK,CAAC,QAAQ,CAAY,GAElD,MACE,WAAC,iBACC,UAAC,gBAAc,EACb,MAAO,CACL,MAAO,CACL,aAAc,EAAK,YAAY,CAC/B,aAAc,EAAK,YAAY,AACjC,EACA,WAAY,CACV,OAAQ,CACN,YAAY,SAAE,EAAA,EAAK,MAAM,YAAX,SAAA,EAAa,YAAY,CACvC,SAAS,SAAE,EAAA,EAAK,MAAM,YAAX,SAAA,EAAa,SAAS,AACnC,CACF,CACF,WAEA,WAAC,OAAK,YACJ,UAAC,OAAK,KACN,UAAC,QAAM,EAAC,KAAK,mBAAU,gBAG3B,UAAC,SAAO,KACR,WAAC,MAAI,EACH,KAAM,EACN,eAAgB,CAAC,EAAG,KAClB,EAAQ,CACN,GAAG,CAAS,AACd,GACF,EACA,KAAK,QACL,cAAe,EACf,SAAU,CAAE,KAAM,CAAE,EACpB,WAAY,CAAE,KAAM,EAAG,YAEvB,UAAC,MAAI,CAAC,IAAI,EACR,KAAK,eACL,MAAM,gBACN,QAAQ,mBACR,kBAAmB,AAAC,GAAiB,EAAM,WAAW,YAEtD,UAAC,aAAW,OAEd,UAAC,MAAI,CAAC,IAAI,EAAC,KAAK,eAAe,MAAM,yBACnC,UAAC,aAAW,OAEd,WAAC,MAAI,CAAC,IAAI,EAAC,MAAM,mBACf,UAAC,MAAI,CAAC,IAAI,EAAC,KAAM,CAAC,SAAU,YAAY,CAAE,cAAc,UAAU,MAAM,qBACtE,UAAC,QAAM,OAET,UAAC,MAAI,CAAC,IAAI,EACR,KAAM,CAAC,SAAU,eAAe,CAChC,MAAM,gBACN,QAAQ,mBACR,kBAAmB,AAAC,GAAiB,EAAM,WAAW,YAEtD,UAAC,aAAW,UAGhB,UAAC,MAAI,CAAC,IAAI,EAAC,KAAK,SAAS,WAAY,CAAE,OAAQ,EAAG,KAAM,EAAG,WACzD,UAAC,QAAM,EAAC,KAAK,mBAAU,mBAKjC"}