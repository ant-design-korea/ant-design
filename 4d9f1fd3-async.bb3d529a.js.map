{"version":3,"sources":["components/transfer/demo/tree-transfer.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/transfer/demo/tree-transfer.tsx?watch=parent';import React, { useState } from 'react';\nimport { theme, Transfer, Tree } from 'antd';\nimport type { GetProp, TransferProps, TreeDataNode } from 'antd';\n\ntype TransferItem = GetProp<TransferProps, 'dataSource'>[number];\n\ninterface TreeTransferProps {\n  dataSource: TreeDataNode[];\n  targetKeys: TransferProps['targetKeys'];\n  onChange: TransferProps['onChange'];\n}\n\n// Customize Table Transfer\nconst isChecked = (selectedKeys: React.Key[], eventKey: React.Key) =>\n  selectedKeys.includes(eventKey);\n\nconst generateTree = (\n  treeNodes: TreeDataNode[] = [],\n  checkedKeys: TreeTransferProps['targetKeys'] = [],\n): TreeDataNode[] =>\n  treeNodes.map(({ children, ...props }) => ({\n    ...props,\n    disabled: checkedKeys.includes(props.key as string),\n    children: generateTree(children, checkedKeys),\n  }));\n\nconst TreeTransfer: React.FC<TreeTransferProps> = ({\n  dataSource,\n  targetKeys = [],\n  ...restProps\n}) => {\n  const { token } = theme.useToken();\n\n  const transferDataSource: TransferItem[] = [];\n  function flatten(list: TreeDataNode[] = []) {\n    list.forEach((item) => {\n      transferDataSource.push(item as TransferItem);\n      flatten(item.children);\n    });\n  }\n  flatten(dataSource);\n\n  return (\n    <Transfer\n      {...restProps}\n      targetKeys={targetKeys}\n      dataSource={transferDataSource}\n      className=\"tree-transfer\"\n      render={(item) => item.title!}\n      showSelectAll={false}\n    >\n      {({ direction, onItemSelect, selectedKeys }) => {\n        if (direction === 'left') {\n          const checkedKeys = [...selectedKeys, ...targetKeys];\n          return (\n            <div style={{ padding: token.paddingXS }}>\n              <Tree\n                blockNode\n                checkable\n                checkStrictly\n                defaultExpandAll\n                checkedKeys={checkedKeys}\n                treeData={generateTree(dataSource, targetKeys)}\n                onCheck={(_, { node: { key } }) => {\n                  onItemSelect(key as string, !isChecked(checkedKeys, key));\n                }}\n                onSelect={(_, { node: { key } }) => {\n                  onItemSelect(key as string, !isChecked(checkedKeys, key));\n                }}\n              />\n            </div>\n          );\n        }\n      }}\n    </Transfer>\n  );\n};\n\nconst treeData: TreeDataNode[] = [\n  { key: '0-0', title: '0-0' },\n  {\n    key: '0-1',\n    title: '0-1',\n    children: [\n      { key: '0-1-0', title: '0-1-0' },\n      { key: '0-1-1', title: '0-1-1' },\n    ],\n  },\n  { key: '0-2', title: '0-2' },\n  { key: '0-3', title: '0-3' },\n  { key: '0-4', title: '0-4' },\n];\n\nconst App: React.FC = () => {\n  const [targetKeys, setTargetKeys] = useState<TreeTransferProps['targetKeys']>([]);\n  const onChange: TreeTransferProps['onChange'] = (keys) => {\n    setTargetKeys(keys);\n  };\n  return <TreeTransfer dataSource={treeData} targetKeys={targetKeys} onChange={onChange} />;\n};\n\nexport default App;\n"],"names":[],"mappings":"uOAqGA,+CAAA,4BArGO,oBAAkI,gBACnG,YAYtC,IAAM,EAAY,CAAC,EAA2B,IAC5C,EAAa,QAAQ,CAAC,GAElB,EAAe,CACnB,EAA4B,EAAE,CAC9B,EAA+C,EAAE,GAEjD,EAAU,GAAG,CAAC,CAAC,CAAE,SAAA,CAAQ,CAAE,GAAG,EAAO,GAAM,CAAA,CACzC,GAAG,CAAK,CACR,SAAU,EAAY,QAAQ,CAAC,EAAM,GAAG,EACxC,SAAU,EAAa,EAAU,EACnC,CAAA,GAEI,EAA4C,CAAC,CACjD,WAAA,CAAU,CACV,WAAA,EAAa,EAAE,CACf,GAAG,EACJ,IACC,GAAM,CAAE,MAAA,CAAK,CAAE,CAAG,OAAK,CAAC,QAAQ,GAE1B,EAAqC,EAAE,CAS7C,OAFA,AANA,SAAS,EAAQ,EAAuB,EAAE,EACxC,EAAK,OAAO,CAAC,AAAC,IACZ,EAAmB,IAAI,CAAC,GACxB,EAAQ,EAAK,QAAQ,EACvB,GACF,EACQ,GAGN,UAAC,UAAQ,EACN,GAAG,CAAS,CACb,WAAY,EACZ,WAAY,EACZ,UAAU,gBACV,OAAQ,AAAC,GAAS,EAAK,KAAK,CAC5B,cAAe,CAAA,WAEd,CAAC,CAAE,UAAA,CAAS,CAAE,aAAA,CAAY,CAAE,aAAA,CAAY,CAAE,IACzC,GAAI,AAAc,SAAd,EAAsB,CACxB,IAAM,EAAc,IAAI,KAAiB,EAAW,CACpD,MACE,UAAC,OAAI,MAAO,CAAE,QAAS,EAAM,SAAS,AAAC,WACrC,UAAC,MAAI,EACH,SAAS,IACT,SAAS,IACT,aAAa,IACb,gBAAgB,IAChB,YAAa,EACb,SAAU,EAAa,EAAY,GACnC,QAAS,CAAC,EAAG,CAAE,KAAM,CAAE,IAAA,CAAG,CAAE,CAAE,IAC5B,EAAa,EAAe,CAAC,EAAU,EAAa,IACtD,EACA,SAAU,CAAC,EAAG,CAAE,KAAM,CAAE,IAAA,CAAG,CAAE,CAAE,IAC7B,EAAa,EAAe,CAAC,EAAU,EAAa,IACtD,MAIR,CACF,IAGN,EAEM,EAA2B,CAC/B,CAAE,IAAK,MAAO,MAAO,KAAM,EAC3B,CACE,IAAK,MACL,MAAO,MACP,SAAU,CACR,CAAE,IAAK,QAAS,MAAO,OAAQ,EAC/B,CAAE,IAAK,QAAS,MAAO,OAAQ,EAChC,AACH,EACA,CAAE,IAAK,MAAO,MAAO,KAAM,EAC3B,CAAE,IAAK,MAAO,MAAO,KAAM,EAC3B,CAAE,IAAK,MAAO,MAAO,KAAM,EAC5B,KAUD,EARsB,KACpB,GAAM,CAAC,EAAY,EAAc,CAAG,GAAA,UAAQ,EAAkC,EAAE,EAIhF,MAAO,UAAC,GAAa,WAAY,EAAU,WAAY,EAAY,SAHnB,AAAC,IAC/C,EAAc,GAChB,IAEF"}