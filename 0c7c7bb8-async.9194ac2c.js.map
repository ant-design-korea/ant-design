{"version":3,"sources":["docs/blog/github-actions-workflow.zh-CN.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/ant-design/ant-design/docs/blog/github-actions-workflow.zh-CN.md?watch=parent';\n  export const texts = [{\"value\":\"大家好，我是 \",\"paraId\":0},{\"value\":\"Wxh16144\",\"paraId\":0},{\"value\":\"，通过学习 Ant Design 的组件库和参与社区贡献，我发现了一些提高开发效率和代码质量的工具。借此机会，希望与大家分享我的经验，帮助大家更好地了解 Ant Design，并将这些技巧应用到自己的项目中。\",\"paraId\":0},{\"value\":\"Ant Design 以开源的形式托管在 GitHub，方便更好的与全球开发者进行交流和合作，也方便开发者提交 issue 和 PR。同时借助 \",\"paraId\":1,\"tocIndex\":0},{\"value\":\"GitHub Actions\",\"paraId\":1,\"tocIndex\":0},{\"value\":\" 和 CI/CD 能力，使得我们更好的管理代码仓库和自动化测试、部署等工作流程，本文将着重介绍 Actions 提供的能力。\",\"paraId\":1,\"tocIndex\":0},{\"value\":\"GitHub Actions 是一个自动化软件开发工作流程的平台，从想法构建到生成，开发者只需在\",\"paraId\":2,\"tocIndex\":1},{\"value\":\".github/workflows\",\"paraId\":2,\"tocIndex\":1},{\"value\":\" 目录中添加 \",\"paraId\":2,\"tocIndex\":1},{\"value\":\"yml\",\"paraId\":2,\"tocIndex\":1},{\"value\":\" 格式文件，定义 Workflow（工作流程） 去实现 CI（持续集成）通过 \",\"paraId\":2,\"tocIndex\":1},{\"value\":\"了解 GitHub Actions\",\"paraId\":2,\"tocIndex\":1},{\"value\":\"，我们可以掌握 Workflow 中一些概念。\",\"paraId\":2,\"tocIndex\":1},{\"value\":\"Event(触发事件)\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"：触发运行事件，例如，有人创建了 issue、PR 或者推送了代码到某个分支。\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"Job(作业)\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"：一个 Workflow 包含一个或多个 \",\"paraId\":3,\"tocIndex\":1},{\"value\":\"Job\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"，默认情况下并行运行，我们可以设置让其按顺序执行，每个 \",\"paraId\":3,\"tocIndex\":1},{\"value\":\"Job\",\"paraId\":3,\"tocIndex\":1},{\"value\":\" 可以包含多个 \",\"paraId\":3,\"tocIndex\":1},{\"value\":\"Step\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"。\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"Step(步骤)\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"：定义每一个部分的工作内容，每一个 \",\"paraId\":3,\"tocIndex\":1},{\"value\":\"Step\",\"paraId\":3,\"tocIndex\":1},{\"value\":\" 都是一个单独的进程运行。该部分下每个项目都是一个单独操作或者 shell 脚本。\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"引用官方文档的 Workflow 图，我们可以直观的看懂 \",\"paraId\":4,\"tocIndex\":1},{\"value\":\"Event\",\"paraId\":4,\"tocIndex\":1},{\"value\":\"、\",\"paraId\":4,\"tocIndex\":1},{\"value\":\"Job\",\"paraId\":4,\"tocIndex\":1},{\"value\":\" 和 \",\"paraId\":4,\"tocIndex\":1},{\"value\":\"Step\",\"paraId\":4,\"tocIndex\":1},{\"value\":\" 之间的关系：\",\"paraId\":4,\"tocIndex\":1},{\"value\":\"通过上述了解，我们可以知道 Ant Design 的所有 Workflow 都放置在 \",\"paraId\":5,\"tocIndex\":2},{\"value\":\".github/workflows\",\"paraId\":5,\"tocIndex\":2},{\"value\":\" 目录中进行管理。\",\"paraId\":5,\"tocIndex\":2},{\"value\":\"Ant Design 的 CI 覆盖了以下几个方面：\",\"paraId\":6,\"tocIndex\":2},{\"value\":\"社区管理\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"：使用 GitHub Actions 进行 issue/PR 质量检查，通过评论和标签来提高 issue/PR 的质量，提高协作效率。\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"代码质量\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"：使用 ESLint 和 Prettier 进行代码规范检查，以确保代码质量和一致性。\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"测试\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"：使用 Jest 和 testing-library 进行单元测试和快照测试，以确保代码的正确性和稳定性。\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"构建\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"：构建 ES5 和 ES6 两种模块规范的文件，以确保库能在不同的环境下使用。\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"部署\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"：使用 \",\"paraId\":7,\"tocIndex\":2},{\"value\":\"dumi\",\"paraId\":7,\"tocIndex\":2},{\"value\":\" 自动生成文档并发布到 GitHub Pages 上。\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"issue 作为 GitHub 平台上的一个功能，它像一个信息汇总中心一样，收集社区反馈的问题。允许 \",\"paraId\":8,\"tocIndex\":3},{\"value\":\"Collaborator\",\"paraId\":8,\"tocIndex\":3},{\"value\":\" 添加标签、里程碑、指派人员等信息，以便更好地组织任务和项目。\",\"paraId\":8,\"tocIndex\":3},{\"value\":\"为了确保 issue 包含足够的信息，帮助 Ant Design 团队对 issue 进行分析和优先级排序，我们提供了 \",\"paraId\":9,\"tocIndex\":4},{\"value\":\"issue 助手\",\"paraId\":9,\"tocIndex\":4},{\"value\":\" 来规范创建 issue 的流程。同时，利用 GitHub Actions 对创建的 issue 进行检查。未通过助手创建的 issue 将会被关闭，并打上 \",\"paraId\":9,\"tocIndex\":4},{\"value\":\"Invalid\",\"paraId\":9,\"tocIndex\":4},{\"value\":\" 标签，然后以评论的形式提醒创建者需要如何进行提问。就像这样：\",\"paraId\":9,\"tocIndex\":4},{\"value\":\"但即便有时候使用了 issue 助手，团队成员可能也无法从提供的内容中得到有效的信息，这时候会选择手动对 issue 添加 \",\"paraId\":10,\"tocIndex\":4},{\"value\":\"🤔 Need Reproduce\",\"paraId\":10,\"tocIndex\":4},{\"value\":\" 、 \",\"paraId\":10,\"tocIndex\":4},{\"value\":\"needs-more-info\",\"paraId\":10,\"tocIndex\":4},{\"value\":\" 或 \",\"paraId\":10,\"tocIndex\":4},{\"value\":\"help wanted\",\"paraId\":10,\"tocIndex\":4},{\"value\":\" 等标签进一步把控 issue 质量，在 \",\"paraId\":10,\"tocIndex\":4},{\"value\":\"issue-labeled.yml\",\"paraId\":10,\"tocIndex\":4},{\"value\":\" 文件中，记录了不同的标签触发对应的评论回复 Job：\",\"paraId\":10,\"tocIndex\":4},{\"value\":\"对于一些常见的 issue，团队提供了详细的解答，以帮助开发者更快地解决问题。例如 issue 的 title 中包含有 \",\"paraId\":11,\"tocIndex\":5},{\"value\":\"官网\",\"paraId\":11,\"tocIndex\":5},{\"value\":\"、\",\"paraId\":11,\"tocIndex\":5},{\"value\":\"网站\",\"paraId\":11,\"tocIndex\":5},{\"value\":\"、\",\"paraId\":11,\"tocIndex\":5},{\"value\":\"挂了\",\"paraId\":11,\"tocIndex\":5},{\"value\":\"、\",\"paraId\":11,\"tocIndex\":5},{\"value\":\"IE\",\"paraId\":11,\"tocIndex\":5},{\"value\":\" 等类似关键词时，在 \",\"paraId\":11,\"tocIndex\":5},{\"value\":\"issue-open-check.yml#L43-L94\",\"paraId\":11,\"tocIndex\":5},{\"value\":\" Job 中详细记录了标准回复格式，并且将自动关闭 issue。\",\"paraId\":11,\"tocIndex\":5},{\"value\":\"使用 GitHub Actions 定时任务来帮助管理和关闭 issue，这些自动化操作可以有效避免过多的未处理 issue 堆积。\",\"paraId\":12,\"tocIndex\":6},{\"value\":\"issue-close-require.yml\",\"paraId\":13,\"tocIndex\":6},{\"value\":\"：定时检查被标记为 \",\"paraId\":13,\"tocIndex\":6},{\"value\":\"🤔 Need Reproduce\",\"paraId\":13,\"tocIndex\":6},{\"value\":\" 或 \",\"paraId\":13,\"tocIndex\":6},{\"value\":\"needs-more-info\",\"paraId\":13,\"tocIndex\":6},{\"value\":\" 的 issue，如果超过 3 天没有移除这些标签，则会自动评论并关闭 issue。\",\"paraId\":13,\"tocIndex\":6},{\"value\":\"issue-check-inactive.yml\",\"paraId\":13,\"tocIndex\":6},{\"value\":\" ：每隔 15 天定时检查 30 天内没有任何活动的 issue，并将其添加 \",\"paraId\":13,\"tocIndex\":6},{\"value\":\"Inactive\",\"paraId\":13,\"tocIndex\":6},{\"value\":\" 标签，但不会关闭 issue。如果被修改或有新评论，则会自动移除 \",\"paraId\":13,\"tocIndex\":6},{\"value\":\"Inactive\",\"paraId\":13,\"tocIndex\":6},{\"value\":\" 和 \",\"paraId\":13,\"tocIndex\":6},{\"value\":\"needs-more-info\",\"paraId\":13,\"tocIndex\":6},{\"value\":\" 标签。\",\"paraId\":13,\"tocIndex\":6},{\"value\":\"Ant Design 团队非常鼓励社区参与 Pull Request (PR)，可以先阅读 \",\"paraId\":14,\"tocIndex\":7},{\"value\":\"《贡献者开发维护指南》\",\"paraId\":15,\"tocIndex\":7},{\"value\":\" 文档，注意 PR 提交时需要遵守一些规范以确保质量和沟通。同时，也会利用 GitHub Action 对 PR 进行一些要求和审核，以保证代码质量和项目的长期维护。\",\"paraId\":14,\"tocIndex\":7},{\"value\":\"发起一个 PR 时，通过 PR 模板会自动生成描述内容，其中就包括更新日志这栏，需要开发者进行填写。\",\"paraId\":16,\"tocIndex\":8},{\"value\":\"pr-open-check.yml\",\"paraId\":16,\"tocIndex\":8},{\"value\":\" 这个 Job 将会对其进行检查，倘若未填，CI 将会以评论的方式进行提醒。就像这样：\",\"paraId\":16,\"tocIndex\":8},{\"value\":\"同时如果 PR 描述中提及的 issue 带有 \",\"paraId\":17,\"tocIndex\":8},{\"value\":\"🎱 Collaborate PR only\",\"paraId\":17,\"tocIndex\":8},{\"value\":\"（只允许核心成员维护）标签时，也将会关闭 PR 并评论提醒。\",\"paraId\":17,\"tocIndex\":8},{\"value\":\"verify-files-modify.yml\",\"paraId\":18,\"tocIndex\":8},{\"value\":\" 这个 Job 将会检查 PR 修改内容，如果包含特定目录（如：\",\"paraId\":18,\"tocIndex\":8},{\"value\":\"./github/\",\"paraId\":18,\"tocIndex\":8},{\"value\":\" 和 \",\"paraId\":18,\"tocIndex\":8},{\"value\":\"scripts/\",\"paraId\":18,\"tocIndex\":8},{\"value\":\"）或特定文件（如：\",\"paraId\":18,\"tocIndex\":8},{\"value\":\"CHANGELOG.md\",\"paraId\":18,\"tocIndex\":8},{\"value\":\"）则谢绝社区贡献，将自动关闭 PR 且指定给核心成员。\",\"paraId\":18,\"tocIndex\":8},{\"value\":\"在 \",\"paraId\":19,\"tocIndex\":9},{\"value\":\"lint\",\"paraId\":19,\"tocIndex\":9},{\"value\":\" Job 中，总是遵循着对每一位开发者提交的代码进行 lint 检查的流程。\",\"paraId\":19,\"tocIndex\":9},{\"value\":\"每创建一个 PR 时，利用 GitHub Action 自动尝试构建和部署该 PR。这样既可以确保文档正常，又可以预览该 PR 是否会对文档或者组件 Demo 产生影响。PR 部署分为多个 Job，具体流程如下：\",\"paraId\":20,\"tocIndex\":10},{\"value\":\"首先触发 \",\"paraId\":21,\"tocIndex\":10},{\"value\":\"preview-start.yml\",\"paraId\":21,\"tocIndex\":10},{\"value\":\" Job 对 PR 进行一个占位评论，告知开发者正在进行预览构建。也就是大家经常看到的 Preview Preparing...\",\"paraId\":21,\"tocIndex\":10},{\"value\":\"同时 \",\"paraId\":22,\"tocIndex\":10},{\"value\":\"preview-build.yml\",\"paraId\":22,\"tocIndex\":10},{\"value\":\" Job 会对 site 进行构建操作。\",\"paraId\":22,\"tocIndex\":10},{\"value\":\"最后 \",\"paraId\":22,\"tocIndex\":10},{\"value\":\"preview-deploy.yml\",\"paraId\":22,\"tocIndex\":10},{\"value\":\" Job 会等待 \",\"paraId\":22,\"tocIndex\":10},{\"value\":\"preview-build.yml\",\"paraId\":22,\"tocIndex\":10},{\"value\":\" 运行完成后进行对应的操作，如果构建成功则利用 \",\"paraId\":22,\"tocIndex\":10},{\"value\":\"Surge\",\"paraId\":22,\"tocIndex\":10},{\"value\":\" 进行部署，部署地址规则：\",\"paraId\":22,\"tocIndex\":10},{\"value\":\"https://preview-{PR-id}-ant-design.surge.sh\",\"paraId\":22,\"tocIndex\":10},{\"value\":\"， 并将之前评论中占位图片修改为构建成功样式（点击该图片即可跳转具体地址）反之则标记为构建失败的图片。\",\"paraId\":22,\"tocIndex\":10},{\"value\":\"size-limit.yml\",\"paraId\":23,\"tocIndex\":11},{\"value\":\" Job 则是对 PR 的一个产物大小进行一个检查。\",\"paraId\":23,\"tocIndex\":11},{\"value\":\"最近比较火热的 chatGPT，团队也将它添加到 GitHub Action 中，用 AI 先对代码进行审查，具体 Job 可以参考 \",\"paraId\":23,\"tocIndex\":11},{\"value\":\"chatgpt-cr.yml\",\"paraId\":23,\"tocIndex\":11},{\"value\":\" 文件。\",\"paraId\":23,\"tocIndex\":11},{\"value\":\"单元测试作为组件库质量保证最重要的一环，当任何提交推送时都将触发该 CI 进行自动化测试，包括每位开发者发起的 PR，或者主分支更新。\",\"paraId\":24,\"tocIndex\":12},{\"value\":\"团队希望每次代码更新后，都能正常构建打包产物， Ant Design 在 test.yml 文件中添加了 \",\"paraId\":25,\"tocIndex\":13},{\"value\":\"Dist Job\",\"paraId\":25,\"tocIndex\":13},{\"value\":\" 和 \",\"paraId\":25,\"tocIndex\":13},{\"value\":\"Compile Job\",\"paraId\":25,\"tocIndex\":13},{\"value\":\" 以保证仓库可以进行正常打包构建。\",\"paraId\":25,\"tocIndex\":13},{\"value\":\"大家可能有留意到每次仅运行测试相关的 Job 就有多达 30 个。\",\"paraId\":26,\"tocIndex\":14},{\"value\":\"团队对于单元测试的态度非常谨慎，需要考虑组件在 React 的各个主要版本上的运行情况（通常为 16、17 和 18 这三个版本）如果是主分支的更新，还需要考虑项目构建产物（通常为 \",\"paraId\":27,\"tocIndex\":14},{\"value\":\"dist\",\"paraId\":27,\"tocIndex\":14},{\"value\":\"、\",\"paraId\":27,\"tocIndex\":14},{\"value\":\"es\",\"paraId\":27,\"tocIndex\":14},{\"value\":\" 以及 \",\"paraId\":27,\"tocIndex\":14},{\"value\":\"lib\",\"paraId\":27,\"tocIndex\":14},{\"value\":\"）在三个 React 版本上的运行情况。目前已知 Ant Design 所有组件共有 4000 多个测试用例。为了进一步提高测试效率，我们还搭建了分布式测试环境。\",\"paraId\":27,\"tocIndex\":14},{\"value\":\"所有这些功能都得益于 GitHub Action 的 \",\"paraId\":28,\"tocIndex\":14},{\"value\":\"Job 矩阵策略\",\"paraId\":28,\"tocIndex\":14},{\"value\":\" ，使得我们可以一次性配置多个 Job 来执行测试任务，\",\"paraId\":28,\"tocIndex\":14},{\"value\":\"Normal test\",\"paraId\":28,\"tocIndex\":14},{\"value\":\" 和 \",\"paraId\":28,\"tocIndex\":14},{\"value\":\"Module test\",\"paraId\":28,\"tocIndex\":14},{\"value\":\" 是 Ant Design 利用矩阵策略测试相关的 Job。\",\"paraId\":28,\"tocIndex\":14},{\"value\":\"这里的部署构建部分和前面提到的 PR 预览部署构建行为一致，只不过构建后产物部署目标有所差异。\",\"paraId\":29,\"tocIndex\":15},{\"value\":\"https://ant.design\",\"paraId\":30,\"tocIndex\":16},{\"value\":\" 官网使用 GitHub 提供的免费 \",\"paraId\":30,\"tocIndex\":16},{\"value\":\"GitHub Pages\",\"paraId\":30,\"tocIndex\":16},{\"value\":\" 功能，利用 Actions \",\"paraId\":30,\"tocIndex\":16},{\"value\":\"Deploy to GitHub Pages\",\"paraId\":30,\"tocIndex\":16},{\"value\":\" Job 直将构建的文档产物推送到\",\"paraId\":30,\"tocIndex\":16},{\"value\":\"gh-pages\",\"paraId\":30,\"tocIndex\":16},{\"value\":\"分支实现。\",\"paraId\":30,\"tocIndex\":16},{\"value\":\"大家都知道 \",\"paraId\":31,\"tocIndex\":17},{\"value\":\"https://ant.design\",\"paraId\":31,\"tocIndex\":17},{\"value\":\" 官网永远保持最新版本，但有时候仍还是需要查阅具体版本的文档，\",\"paraId\":31,\"tocIndex\":17},{\"value\":\"Deploy to Surge\",\"paraId\":31,\"tocIndex\":17},{\"value\":\" Job 则是每次发布新版本后将站点部署到 Surge， URL 规则为 \",\"paraId\":31,\"tocIndex\":17},{\"value\":\"https://ant-design-{major}-{minor}-{patch}.surge.sh\",\"paraId\":31,\"tocIndex\":17},{\"value\":\" 并将 url 评论在每一个发版 commit 上：\",\"paraId\":31,\"tocIndex\":17},{\"value\":\"上面的篇幅已经讲述了 Ant Design 利用 CI/CD 完成的大部分核心内容，但实际上还有一些 Job 没有具体介绍，这里再补充一些。\",\"paraId\":32,\"tocIndex\":18},{\"value\":\"为保证开发者和社区成员可以第一时间了解到相关信息，利用 Action 提供的 Event 实现 IM 接入：\",\"paraId\":33,\"tocIndex\":19},{\"value\":\"issue-notice\",\"paraId\":34,\"tocIndex\":19},{\"value\":\"、\",\"paraId\":34,\"tocIndex\":19},{\"value\":\"discussion-notice\",\"paraId\":34,\"tocIndex\":19},{\"value\":\" Job 表示每当创建了 Issue 、Discussion 通知到钉钉社区群中。\",\"paraId\":34,\"tocIndex\":19},{\"value\":\"release-helper.yml\",\"paraId\":35,\"tocIndex\":19},{\"value\":\" CI 文件表示每当 antd 发布版本且创建 Release 时，将更新日志发布到钉钉社区群中。\",\"paraId\":35,\"tocIndex\":19},{\"value\":\"其他未提及到的 Job 等待着大家去探索与发现...\",\"paraId\":36,\"tocIndex\":19},{\"value\":\"前面向大家介绍了 Ant Design 使用 GitHub Action 的诸多场景，我们不妨实际动手尝试一下，运用到自己项目中，提高生产效率。下面通过一个简单的 Demo 进行演示。\",\"paraId\":37,\"tocIndex\":20},{\"value\":\"通过命令行 \",\"paraId\":38,\"tocIndex\":21},{\"value\":\"pnpm create vite@latest my-react-app --template react-ts\",\"paraId\":38,\"tocIndex\":21},{\"value\":\" 创建一个 Vite + React 项目。\",\"paraId\":38,\"tocIndex\":21},{\"value\":\"在项目根目录里 \",\"paraId\":39,\"tocIndex\":22},{\"value\":\".github/workflows\",\"paraId\":39,\"tocIndex\":22},{\"value\":\" 文件夹中新建 \",\"paraId\":39,\"tocIndex\":22},{\"value\":\"ci.yml\",\"paraId\":39,\"tocIndex\":22},{\"value\":\" ，代码如下：\",\"paraId\":39,\"tocIndex\":22},{\"value\":\"name: CI\\n\\n# en: Set the event to pull request event and push event of the master branch\\n# zh: Event 设置为 master 分支的 pull request 事件和 push 事件\\non:\\n  push:\\n    branches: [master]\\n  pull_request:\\n    branches: [master]\\n\\npermissions:\\n  contents: write\\n\\njobs:\\n  CI:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Checkout code (检出代码)\\n        uses: actions/checkout@v4\\n\\n      - name: Setup Node.js (设置 node 版本)\\n        uses: oven-sh/setup-bun@v2\\n        with:\\n          node-version: 16\\n\\n      - name: Install pnpm (安装 pnpm)\\n        uses: pnpm/action-setup@v2\\n        with:\\n          version: 7.0.0\\n\\n      - name: Install dependencies (安装依赖)\\n        run: pnpm install\\n\\n      - name: lint (代码检查)\\n        run: pnpm run lint\\n\\n      # en: The template does not contain test cases. If you need to use test cases, you can uncomment it\\n      # zh: 初始化模板中不包含测试用例，如需使用测试用例，可取消注释\\n      # - name: Test (测试)\\n      #   run: pnpm run test\\n\\n      - name: Build (构建)\\n        run: pnpm run build\\n\\n      - name: Upload build artifacts (上传构建产物)\\n        uses: actions/upload-artifact@v3\\n        with:\\n          name: dist\\n          path: ./dist\\n\\n      - name: Deploy to GitHub Pages (部署到 GitHub Pages)\\n        uses: peaceiris/actions-gh-pages@v3\\n        # en: Only deploy when the push event of the master branch is triggered\\n        # zh: 仅在触发 master 分支的 push 事件时部署\\n        if: github.ref == 'refs/heads/master'\\n        with:\\n          github_token: ${{ secrets.GITHUB_TOKEN }}\\n          publish_dir: ./dist\\n\",\"paraId\":40,\"tocIndex\":22},{\"value\":\"上述 Workflow 中包含了一个 CI Job，当我们推送到 master 分支时， CI 触发后将依次运行 lint、build 以及 deploy，如下所示：\",\"paraId\":41,\"tocIndex\":22},{\"value\":\"为了进一步优化安装依赖速度，我们可以添加 pnpm 缓存，然后发起一个 Pull Request 验证上一个步骤：\",\"paraId\":42,\"tocIndex\":23},{\"value\":\"# ...\\n- name: create pnpm-lock.yaml (创建 pnpm-lock.yaml)\\n  run: pnpm install --frozen-lockfile --ignore-scripts\\n\\n- name: Get pnpm store directory (获取 pnpm store 目录)\\n  id: pnpm-cache\\n  shell: bash\\n  run: |\\n    echo \\\"STORE_PATH=$(pnpm store path)\\\" >> $GITHUB_OUTPUT\\n\\n- name: Setup pnpm cache (设置 pnpm 缓存)\\n  uses: actions/cache@v4\\n  with:\\n    path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}\\n    key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}\\n    restore-keys: |\\n      ${{ runner.os }}-pnpm-store-\\n\\n# ...\\n\",\"paraId\":43,\"tocIndex\":23},{\"value\":\"可以发现，发起的 PR 也正确触发了 CI Job，并且我们的 pnpm store 也被缓存了起来，之后每次触发 CI 都会根据 \",\"paraId\":44,\"tocIndex\":23},{\"value\":\"pnpm-lock.yaml\",\"paraId\":44,\"tocIndex\":23},{\"value\":\" 内容判断是否直接读取缓存。\",\"paraId\":44,\"tocIndex\":23},{\"value\":\"关于上面的 \",\"paraId\":45,\"tocIndex\":23},{\"value\":\"Setup pnpm cache\",\"paraId\":45,\"tocIndex\":23},{\"value\":\" 步骤中，7 天内未被访问的任何缓存条目将会被删除。可以存储的缓存数没有限制，但存储库中所有缓存的总大小限制为 10 GB，更多内容请阅读 \",\"paraId\":45,\"tocIndex\":23},{\"value\":\"缓存依赖项以加快工作流程\",\"paraId\":45,\"tocIndex\":23},{\"value\":\"。\",\"paraId\":45,\"tocIndex\":23},{\"value\":\"本次文章到这里就结束了，希望可以帮助大家更进一步了解 Ant Design，也欢迎大家前往 \",\"paraId\":46,\"tocIndex\":24},{\"value\":\"讨论区\",\"paraId\":46,\"tocIndex\":24},{\"value\":\" 参与讨论和建设。\",\"paraId\":46,\"tocIndex\":24}];\n  "],"names":[],"mappings":"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"}