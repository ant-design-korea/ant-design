{"version":3,"sources":["components/color-picker/demo/format.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/color-picker/demo/format.tsx?watch=parent';import React, { useState } from 'react';\nimport { ColorPicker, Space } from 'antd';\nimport type { ColorPickerProps, GetProp } from 'antd';\n\ntype Color = Extract<GetProp<ColorPickerProps, 'value'>, string | { cleared: any }>;\ntype Format = GetProp<ColorPickerProps, 'format'>;\n\nconst HexCase: React.FC = () => {\n  const [colorHex, setColorHex] = useState<Color>('#1677ff');\n  const [formatHex, setFormatHex] = useState<Format | undefined>('hex');\n\n  const hexString = React.useMemo<string>(\n    () => (typeof colorHex === 'string' ? colorHex : colorHex?.toHexString()),\n    [colorHex],\n  );\n\n  return (\n    <Space>\n      <ColorPicker\n        format={formatHex}\n        value={colorHex}\n        onChange={setColorHex}\n        onFormatChange={setFormatHex}\n      />\n      <span>HEX: {hexString}</span>\n    </Space>\n  );\n};\n\nconst HsbCase: React.FC = () => {\n  const [colorHsb, setColorHsb] = useState<Color>('hsb(215, 91%, 100%)');\n  const [formatHsb, setFormatHsb] = useState<ColorPickerProps['format']>('hsb');\n\n  const hsbString = React.useMemo(\n    () => (typeof colorHsb === 'string' ? colorHsb : colorHsb?.toHsbString()),\n    [colorHsb],\n  );\n\n  return (\n    <Space>\n      <ColorPicker\n        format={formatHsb}\n        value={colorHsb}\n        onChange={setColorHsb}\n        onFormatChange={setFormatHsb}\n      />\n      <span>HSB: {hsbString}</span>\n    </Space>\n  );\n};\n\nconst RgbCase: React.FC = () => {\n  const [colorRgb, setColorRgb] = useState<Color>('rgb(22, 119, 255)');\n  const [formatRgb, setFormatRgb] = useState<ColorPickerProps['format']>('rgb');\n\n  const rgbString = React.useMemo(\n    () => (typeof colorRgb === 'string' ? colorRgb : colorRgb?.toRgbString()),\n    [colorRgb],\n  );\n\n  return (\n    <Space>\n      <ColorPicker\n        format={formatRgb}\n        value={colorRgb}\n        onChange={setColorRgb}\n        onFormatChange={setFormatRgb}\n      />\n      <span>RGB: {rgbString}</span>\n    </Space>\n  );\n};\n\nconst Demo: React.FC = () => (\n  <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex' }}>\n    <HexCase />\n    <HsbCase />\n    <RgbCase />\n  </Space>\n);\n\nexport default Demo;\n"],"names":[],"mappings":"qOAiFA,+CAAA,4CAjFO,wBAA+H,iBACnG,YAMnC,IAAM,EAAoB,KACxB,GAAM,CAAC,EAAU,EAAY,CAAG,GAAA,UAAQ,EAAQ,WAC1C,CAAC,EAAW,EAAa,CAAG,GAAA,UAAQ,EAAqB,OAEzD,EAAY,SAAK,CAAC,OAAO,CAC7B,IAAO,AAAoB,UAApB,OAAO,EAAwB,QAAW,SAAA,EAAU,WAAW,GACtE,CAAC,EAAS,EAGZ,MACE,WAAC,OAAK,YACJ,UAAC,aAAW,EACV,OAAQ,EACR,MAAO,EACP,SAAU,EACV,eAAgB,IAElB,WAAC,kBAAK,QAAM,QAGlB,EAEM,EAAoB,KACxB,GAAM,CAAC,EAAU,EAAY,CAAG,GAAA,UAAQ,EAAQ,uBAC1C,CAAC,EAAW,EAAa,CAAG,GAAA,UAAQ,EAA6B,OAEjE,EAAY,SAAK,CAAC,OAAO,CAC7B,IAAO,AAAoB,UAApB,OAAO,EAAwB,QAAW,SAAA,EAAU,WAAW,GACtE,CAAC,EAAS,EAGZ,MACE,WAAC,OAAK,YACJ,UAAC,aAAW,EACV,OAAQ,EACR,MAAO,EACP,SAAU,EACV,eAAgB,IAElB,WAAC,kBAAK,QAAM,QAGlB,EAEM,EAAoB,KACxB,GAAM,CAAC,EAAU,EAAY,CAAG,GAAA,UAAQ,EAAQ,qBAC1C,CAAC,EAAW,EAAa,CAAG,GAAA,UAAQ,EAA6B,OAEjE,EAAY,SAAK,CAAC,OAAO,CAC7B,IAAO,AAAoB,UAApB,OAAO,EAAwB,QAAW,SAAA,EAAU,WAAW,GACtE,CAAC,EAAS,EAGZ,MACE,WAAC,OAAK,YACJ,UAAC,aAAW,EACV,OAAQ,EACR,MAAO,EACP,SAAU,EACV,eAAgB,IAElB,WAAC,kBAAK,QAAM,QAGlB,MAUA,EARuB,IACrB,WAAC,OAAK,EAAC,UAAU,WAAW,KAAK,SAAS,MAAO,CAAE,QAAS,MAAO,YACjE,UAAC,MACD,UAAC,MACD,UAAC"}