{"version":3,"sources":["components/tree/demo/draggable.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/tree/demo/draggable.tsx?watch=parent';import React, { useState } from 'react';\nimport { Tree } from 'antd';\nimport type { TreeDataNode, TreeProps } from 'antd';\n\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst defaultData: TreeDataNode[] = [];\n\nconst generateData = (_level: number, _preKey?: React.Key, _tns?: TreeDataNode[]) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || defaultData;\n\n  const children: React.Key[] = [];\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({ title: key, key });\n    if (i < y) {\n      children.push(key);\n    }\n  }\n  if (_level < 0) {\n    return tns;\n  }\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\ngenerateData(z);\n\nconst App: React.FC = () => {\n  const [gData, setGData] = useState(defaultData);\n  const [expandedKeys] = useState(['0-0', '0-0-0', '0-0-0-0']);\n\n  const onDragEnter: TreeProps['onDragEnter'] = (info) => {\n    console.log(info);\n    // expandedKeys, set it when controlled is needed\n    // setExpandedKeys(info.expandedKeys)\n  };\n\n  const onDrop: TreeProps['onDrop'] = (info) => {\n    console.log(info);\n    const dropKey = info.node.key;\n    const dragKey = info.dragNode.key;\n    const dropPos = info.node.pos.split('-');\n    const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]); // the drop position relative to the drop node, inside 0, top -1, bottom 1\n\n    const loop = (\n      data: TreeDataNode[],\n      key: React.Key,\n      callback: (node: TreeDataNode, i: number, data: TreeDataNode[]) => void,\n    ) => {\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].key === key) {\n          return callback(data[i], i, data);\n        }\n        if (data[i].children) {\n          loop(data[i].children!, key, callback);\n        }\n      }\n    };\n    const data = [...gData];\n\n    // Find dragObject\n    let dragObj: TreeDataNode;\n    loop(data, dragKey, (item, index, arr) => {\n      arr.splice(index, 1);\n      dragObj = item;\n    });\n\n    if (!info.dropToGap) {\n      // Drop on the content\n      loop(data, dropKey, (item) => {\n        item.children = item.children || [];\n        // where to insert. New item was inserted to the start of the array in this example, but can be anywhere\n        item.children.unshift(dragObj);\n      });\n    } else {\n      let ar: TreeDataNode[] = [];\n      let i: number;\n      loop(data, dropKey, (_item, index, arr) => {\n        ar = arr;\n        i = index;\n      });\n      if (dropPosition === -1) {\n        // Drop on the top of the drop node\n        ar.splice(i!, 0, dragObj!);\n      } else {\n        // Drop on the bottom of the drop node\n        ar.splice(i! + 1, 0, dragObj!);\n      }\n    }\n    setGData(data);\n  };\n\n  return (\n    <Tree\n      className=\"draggable-tree\"\n      defaultExpandedKeys={expandedKeys}\n      draggable\n      blockNode\n      onDragEnter={onDragEnter}\n      onDrop={onDrop}\n      treeData={gData}\n    />\n  );\n};\n\nexport default App;\n"],"names":[],"mappings":"uOA8GA,+CAAA,4BA9GO,oBAA0H,gBAC5G,YAMrB,IAAM,EAA8B,EAAE,CAEhC,EAAe,CAAC,EAAgB,EAAqB,KACzD,IAAM,EAAS,GAAW,IACpB,EAAM,GAAQ,EAEd,EAAwB,EAAE,CAChC,IAAK,IAAI,EAAI,EAAG,EAVR,EAUe,IAAK,CAC1B,IAAM,EAAM,CAAC,EAAE,EAAO,CAAC,EAAE,EAAE,CAAC,CAC5B,EAAI,IAAI,CAAC,CAAE,MAAO,EAAK,IAAA,CAAI,GACvB,EAZE,GAaJ,EAAS,IAAI,CAAC,GAElB,CACA,GAAI,EAAS,EACX,OAAO,EAET,IAAM,EAAQ,EAAS,EACvB,EAAS,OAAO,CAAC,CAAC,EAAK,KACrB,CAAG,CAAC,EAAM,CAAC,QAAQ,CAAG,EAAE,CACjB,EAAa,EAAO,EAAK,CAAG,CAAC,EAAM,CAAC,QAAQ,IAEvD,EACA,EAxBU,OAwGV,EA9EsB,KACpB,GAAM,CAAC,EAAO,EAAS,CAAG,GAAA,UAAQ,EAAC,GAC7B,CAAC,EAAa,CAAG,GAAA,UAAQ,EAAC,CAAC,MAAO,QAAS,UAAU,EA+D3D,MACE,UAAC,MAAI,EACH,UAAU,iBACV,oBAAqB,EACrB,SAAS,IACT,SAAS,IACT,YAnE0C,AAAC,IAC7C,QAAQ,GAAG,CAAC,GAGd,EAgEI,OA9DgC,AAAC,QAwB/B,EAvBJ,QAAQ,GAAG,CAAC,GACZ,IAAM,EAAU,EAAK,IAAI,CAAC,GAAG,CACvB,EAAU,EAAK,QAAQ,CAAC,GAAG,CAC3B,EAAU,EAAK,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAC9B,EAAe,EAAK,YAAY,CAAG,OAAO,CAAO,CAAC,EAAQ,MAAM,CAAG,EAAE,EAErE,EAAO,CACX,EACA,EACA,KAEA,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAAK,CACpC,GAAI,CAAI,CAAC,EAAE,CAAC,GAAG,GAAK,EAClB,OAAO,EAAS,CAAI,CAAC,EAAE,CAAE,EAAG,GAE1B,CAAI,CAAC,EAAE,CAAC,QAAQ,EAClB,EAAK,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAG,EAAK,GAEjC,CACF,EACM,EAAO,IAAI,EAAM,CASvB,GALA,EAAK,EAAM,EAAS,CAAC,EAAM,EAAO,KAChC,EAAI,MAAM,CAAC,EAAO,GAClB,EAAU,EACZ,GAEK,EAAK,SAAS,CAOZ,CACL,IACI,EADA,EAAqB,EAAE,CAE3B,EAAK,EAAM,EAAS,CAAC,EAAO,EAAO,KACjC,EAAK,EACL,EAAI,EACN,GACI,AAAiB,KAAjB,EAEF,EAAG,MAAM,CAAC,EAAI,EAAG,GAGjB,EAAG,MAAM,CAAC,EAAK,EAAG,EAAG,GAEzB,MAnBE,EAAK,EAAM,EAAS,AAAC,IACnB,EAAK,QAAQ,CAAG,EAAK,QAAQ,EAAI,EAAE,CAEnC,EAAK,QAAQ,CAAC,OAAO,CAAC,GACxB,GAgBF,EAAS,GACX,EAUI,SAAU,IAGhB"}