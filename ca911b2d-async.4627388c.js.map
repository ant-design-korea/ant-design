{"version":3,"sources":["docs/blog/testing-migrate.zh-CN.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/ant-design/ant-design/docs/blog/testing-migrate.zh-CN.md?watch=parent';\n  export const texts = [{\"value\":\"大家好，我是 \",\"paraId\":0},{\"value\":\"@li-jia-nan\",\"paraId\":0},{\"value\":\"。也是前几个月新加入 antd 的 Collaborator，有幸作为 Collaborators 之一，我开发了 \",\"paraId\":0},{\"value\":\"FloatButton\",\"paraId\":1},{\"value\":\" 组件和 \",\"paraId\":0},{\"value\":\"QRCode\",\"paraId\":2},{\"value\":\" 组件，以及一些其它维护工作，下面分享一下 antd 测试库迁移的那些事儿～\",\"paraId\":0},{\"value\":\"在 \",\"paraId\":3,\"tocIndex\":0},{\"value\":\"antd@4.x\",\"paraId\":3,\"tocIndex\":0},{\"value\":\" 中，使用 \",\"paraId\":3,\"tocIndex\":0},{\"value\":\"enzyme\",\"paraId\":3,\"tocIndex\":0},{\"value\":\" 作为测试框架，然而由于 enzyme 缺乏维护，到了 React 18 时代已经很难⽀持。也因此不得不开始为 antd 开启漫⻓的 \",\"paraId\":3,\"tocIndex\":0},{\"value\":\"@testing-lib\",\"paraId\":3,\"tocIndex\":0},{\"value\":\" 迁移之路。\",\"paraId\":3,\"tocIndex\":0},{\"value\":\"在迁移过程中，我承担了大概 antd 四分之一的工作量，这里主要记录一下迁移过程中遇到的问题。\",\"paraId\":4,\"tocIndex\":0},{\"value\":\"感谢在此期间 \",\"paraId\":5,\"tocIndex\":0},{\"value\":\"@zombieJ\",\"paraId\":5,\"tocIndex\":0},{\"value\":\" \",\"paraId\":5,\"tocIndex\":0},{\"value\":\"@MadCcc\",\"paraId\":5,\"tocIndex\":0},{\"value\":\" \",\"paraId\":5,\"tocIndex\":0},{\"value\":\"@miracles1919\",\"paraId\":5,\"tocIndex\":0},{\"value\":\" 提供的帮助。\",\"paraId\":5,\"tocIndex\":0},{\"value\":\"在迁移之前，我们需要先搞清楚迁移的目的是什么。在 \",\"paraId\":6,\"tocIndex\":1},{\"value\":\"enzyme\",\"paraId\":6,\"tocIndex\":1},{\"value\":\" 中，大多数场景是测试了组件中的状态是否正确，或者 class 上的静态属性是否正常被赋值，这其实是不合理的，因为我们更重要的是需要关心“功能”是否正常，而非“属性”是否正确，因为源代码对使用者来说是黑盒，用户只关心组件是否正确。\",\"paraId\":6,\"tocIndex\":1},{\"value\":\"基上，测试用例应该基于“行为”来编写，而非“实现”来编写（这也是 \",\"paraId\":7,\"tocIndex\":1},{\"value\":\"testing-library\",\"paraId\":7,\"tocIndex\":1},{\"value\":\" 的目标）。在这个原则上，会发现有几个用例是多余的（因为在实际代码中不会单独触发某些函数），将其删除也并没有影响到 test coverage。\",\"paraId\":7,\"tocIndex\":1},{\"value\":\"当然了，这只是放弃 \",\"paraId\":8,\"tocIndex\":1},{\"value\":\"enzyme\",\"paraId\":8,\"tocIndex\":1},{\"value\":\" 的其中一个原因。更重要的是它缺乏维护，并且不支持 React 18 了。\",\"paraId\":8,\"tocIndex\":1},{\"value\":\"enzyme\",\"paraId\":9,\"tocIndex\":3},{\"value\":\" 支持三种方式的渲染：\",\"paraId\":9,\"tocIndex\":3},{\"value\":\"shallow: 浅渲染，是对官方的 Shallow Renderer 的封装。将组件渲染成虚拟 DOM 对象，通过 Shallow Render 得到的组件不会有断言到子组件的部分，并且可以使用 jQuery 的方式访问组件的信息。\",\"paraId\":10,\"tocIndex\":3},{\"value\":\"render: 静态渲染，它将 React 组件渲染成静态的 HTML 字符串，然后解析这段字符串，并返回一个实例对象，可以用来分析组件的 html 结构。\",\"paraId\":11,\"tocIndex\":3},{\"value\":\"mount: 完全渲染，它将组件渲染加载成一个真实的 DOM 节点，用来测试 DOM API 的交互和组件的生命周期，用到了 jsdom 来模拟浏览器环境。\",\"paraId\":12,\"tocIndex\":3},{\"value\":\"为了贴近浏览器现实场景，\",\"paraId\":13,\"tocIndex\":3},{\"value\":\"antd@4.x\",\"paraId\":13,\"tocIndex\":3},{\"value\":\" 选用 \",\"paraId\":13,\"tocIndex\":3},{\"value\":\"mount\",\"paraId\":13,\"tocIndex\":3},{\"value\":\" 来进行渲染，而在 \",\"paraId\":13,\"tocIndex\":3},{\"value\":\"@testing-library\",\"paraId\":13,\"tocIndex\":3},{\"value\":\" 中对应的则是 \",\"paraId\":13,\"tocIndex\":3},{\"value\":\"render\",\"paraId\":13,\"tocIndex\":3},{\"value\":\" 方法：\",\"paraId\":13,\"tocIndex\":3},{\"value\":\"--  import { mount } from 'enzyme';\\n++  import { render } from '@testing-library/react';\\n\\n--  const wrapper = mount(\\n++  const { container } = render(\\n      <ConfigProvider getPopupContainer={getPopupContainer}>\\n        <Slider />\\n      </ConfigProvider>,\\n    );\\n\",\"paraId\":14,\"tocIndex\":3},{\"value\":\"enzyme\",\"paraId\":15,\"tocIndex\":4},{\"value\":\" 提供了 \",\"paraId\":15,\"tocIndex\":4},{\"value\":\"simulate(event)\",\"paraId\":15,\"tocIndex\":4},{\"value\":\" 方法来模拟事件触发和用户交互，\",\"paraId\":15,\"tocIndex\":4},{\"value\":\"event\",\"paraId\":15,\"tocIndex\":4},{\"value\":\" 为事件名称，而在 \",\"paraId\":15,\"tocIndex\":4},{\"value\":\"@testing-library\",\"paraId\":15,\"tocIndex\":4},{\"value\":\" 中对应的则是 \",\"paraId\":15,\"tocIndex\":4},{\"value\":\"fireEvent\",\"paraId\":15,\"tocIndex\":4},{\"value\":\" 方法：\",\"paraId\":15,\"tocIndex\":4},{\"value\":\"++  import { fireEvent } from '@testing-library/react';\\n\\n--  wrapper.find('.ant-handle').simulate('click');\\n++  fireEvent.click(container.querySelector('.ant-handle'));\\n\",\"paraId\":16,\"tocIndex\":4},{\"value\":\"在 \",\"paraId\":17,\"tocIndex\":5},{\"value\":\"enzyme\",\"paraId\":17,\"tocIndex\":5},{\"value\":\" 中，提供了一些内置的 api 来操作 dom，或者查找组件：\",\"paraId\":17,\"tocIndex\":5},{\"value\":\"instance(): 返回测试组件的实例\",\"paraId\":18,\"tocIndex\":5},{\"value\":\"at(index): 返回一个渲染过的对象\",\"paraId\":18,\"tocIndex\":5},{\"value\":\"text(): 返回当前组件的文本内容\",\"paraId\":18,\"tocIndex\":5},{\"value\":\"html(): 返回当前组件的 HTML 代码形式\",\"paraId\":18,\"tocIndex\":5},{\"value\":\"props(): 返回组件的所有属性\",\"paraId\":18,\"tocIndex\":5},{\"value\":\"prop(key): 返回组件的指定属性\",\"paraId\":18,\"tocIndex\":5},{\"value\":\"state(): 返回组件的状态\",\"paraId\":18,\"tocIndex\":5},{\"value\":\"setState(nextState): 设置组件的状态\",\"paraId\":18,\"tocIndex\":5},{\"value\":\"setProps(nextProps): 设置组件的属性\",\"paraId\":18,\"tocIndex\":5},{\"value\":\"find(selector): 根据选择器查找节点，selector 可以是 CSS 中的选择器，也可以是组件的构造函数，以及组件的 displayName 等\",\"paraId\":18,\"tocIndex\":5},{\"value\":\"在 \",\"paraId\":19,\"tocIndex\":5},{\"value\":\"testing-library\",\"paraId\":19,\"tocIndex\":5},{\"value\":\" 中，没有提供这些 api（正如上面提到过的 - \",\"paraId\":19,\"tocIndex\":5},{\"value\":\"testing-library\",\"paraId\":19,\"tocIndex\":5},{\"value\":\" 更加注重行为上的测试），所以需要换成原生的 dom 操作：\",\"paraId\":19,\"tocIndex\":5},{\"value\":\"    expect(ref.current.getPopupDomNode()).toBe(null);\\n--  popover.find('span').simulate('click');\\n--  expect(popover.find('Trigger PopupInner').props().visible).toBeTruthy();\\n\\n++  expect(container.querySelector('.ant-popover-inner-content')).toBeFalsy();\\n++  fireEvent.click(popover.container.querySelector('span'));\\n++  expect(container.querySelector('.ant-popover-inner-content')).toBeTruthy();\\n\",\"paraId\":20,\"tocIndex\":5},{\"value\":\"在大版本升级的同时，废弃了部分组件，但是并没有在 antd 中移除，比如 BackTop 组件，需要在组件中加入 warning 以保证兼容性，所以还需要对 warning 编写专门的单元测试:\",\"paraId\":21,\"tocIndex\":6},{\"value\":\"    describe('BackTop', () => {\\n++    it('should console Error', () => {\\n++        const errSpy = jest.spyOn(console, 'error').mockImplementation(() => {});\\n++        render(<BackTop />);\\n++        expect(errSpy).toHaveBeenCalledWith(\\n++          'Warning: [antd: BackTop] `BackTop` is deprecated. Please use `FloatButton.BackTop` instead.',\\n++        );\\n++      errSpy.mockRestore();\\n++    });\\n    });\\n\",\"paraId\":22,\"tocIndex\":6},{\"value\":\"在转换过程中，发现了⼀个神奇的现象，有些情况下，同样的 case 生成的 DOM 快照会不一样，也因此开始探索 React 18 到底变化了什么：\",\"paraId\":23,\"tocIndex\":7},{\"value\":\"过去 \",\"paraId\":24,\"tocIndex\":7},{\"value\":\"enzyme\",\"paraId\":24,\"tocIndex\":7},{\"value\":\" 的 \",\"paraId\":24,\"tocIndex\":7},{\"value\":\"snapshot\",\"paraId\":24,\"tocIndex\":7},{\"value\":\" 对⽐是通过 \",\"paraId\":24,\"tocIndex\":7},{\"value\":\"enzyme-to-json\",\"paraId\":24,\"tocIndex\":7},{\"value\":\" 插件将 \",\"paraId\":24,\"tocIndex\":7},{\"value\":\"enzyme object\",\"paraId\":24,\"tocIndex\":7},{\"value\":\" 转换成序列化对象：\",\"paraId\":24,\"tocIndex\":7},{\"value\":\"// jest.config.js\\nmodule.exports = {\\n  // ...\\n  snapshotSerializers: ['enzyme-to-json/serializer'],\\n};\\n\",\"paraId\":25,\"tocIndex\":7},{\"value\":\"到了 \",\"paraId\":26,\"tocIndex\":7},{\"value\":\"@testing-library/react\",\"paraId\":26,\"tocIndex\":7},{\"value\":\" 则直接通过调用 \",\"paraId\":26,\"tocIndex\":7},{\"value\":\"render\",\"paraId\":26,\"tocIndex\":7},{\"value\":\" 产⽣ dom 元素，然后对 dom 进⾏对⽐：\",\"paraId\":26,\"tocIndex\":7},{\"value\":\"--  import { mount } from 'enzyme';\\n++  import { render } from '@testing-library/react';\\n\\n    describe('xxx', () => {\\n      it('yyy', () => {\\n--      const wrapper = mount(<Demo />);\\n++      const { container } = render(<Demo />);\\n--      expect(wrapper.render()).toMatchSnapshot();\\n++      expect(container.firstChild).toMatchSnapshot();\\n      });\\n    });\\n\\n\",\"paraId\":27,\"tocIndex\":7},{\"value\":\"有趣的是，在⼀些测试⽤例中。它会挂掉，区别在于 React 18 有时候会少⼀些空⾏：\",\"paraId\":28,\"tocIndex\":7},{\"value\":\"    <div>\\n--\\n      Hello World\\n    </div>\\n\",\"paraId\":29,\"tocIndex\":7},{\"value\":\"通过测试 dom 的 \",\"paraId\":30,\"tocIndex\":7},{\"value\":\"innerHTML\",\"paraId\":30,\"tocIndex\":7},{\"value\":\" 后发现，17 和 18 是⼀样的。所以在遇到问题之初，我们只是将测试用例简单的改成⽐较 \",\"paraId\":30,\"tocIndex\":7},{\"value\":\"innerHTML\",\"paraId\":30,\"tocIndex\":7},{\"value\":\" :\",\"paraId\":30,\"tocIndex\":7},{\"value\":\"expect(container.querySelector('.className').innerHTML).toMatchSnapshot();\\n\",\"paraId\":31,\"tocIndex\":7},{\"value\":\"但是，随着迁移变多，会逐渐发现这种情况不断发⽣。比较 \",\"paraId\":32,\"tocIndex\":7},{\"value\":\"innerHTML\",\"paraId\":32,\"tocIndex\":7},{\"value\":\" 也不是长久之计。于是开始探索为什么会出现这种情况。\",\"paraId\":32,\"tocIndex\":7},{\"value\":\"pretty-format\",\"paraId\":33,\"tocIndex\":8},{\"value\":\" 是⼀个很有意思的库，它可以将任意对象转换成字符串。它的⼀个⽤途就是⽤于 jest 的 snapshot 对⽐。它的⼀个特点是可以⾃定义转换规则。\",\"paraId\":33,\"tocIndex\":8},{\"value\":\"jest\",\"paraId\":34,\"tocIndex\":8},{\"value\":\" 中对⽐ \",\"paraId\":34,\"tocIndex\":8},{\"value\":\"snapshot\",\"paraId\":34,\"tocIndex\":8},{\"value\":\" 会先做⼀步 \",\"paraId\":34,\"tocIndex\":8},{\"value\":\"format\",\"paraId\":34,\"tocIndex\":8},{\"value\":\"，对于原⽣ \",\"paraId\":34,\"tocIndex\":8},{\"value\":\"dom\",\"paraId\":34,\"tocIndex\":8},{\"value\":\"、\",\"paraId\":34,\"tocIndex\":8},{\"value\":\"object\",\"paraId\":34,\"tocIndex\":8},{\"value\":\" 等常⻅对象。它已经内置了⼀套 \",\"paraId\":34,\"tocIndex\":8},{\"value\":\"plugins\",\"paraId\":34,\"tocIndex\":8},{\"value\":\" ⽤以做格式化转换：\",\"paraId\":34,\"tocIndex\":8},{\"value\":\"<div>\\n  <span>Hello</span>\\n  <p>World</p>\\n</div>\\n↓\\n<div>\\n  <span> Hello </span>\\n  <p>World</p>\\n</div>\\n\",\"paraId\":35,\"tocIndex\":8},{\"value\":\"出现多余空格第⼀反应就是是否是因为 17 & 18 引⼊的 \",\"paraId\":36,\"tocIndex\":8},{\"value\":\"@testing-lib/react\",\"paraId\":36,\"tocIndex\":8},{\"value\":\" 版本不同，导致影响了 \",\"paraId\":36,\"tocIndex\":8},{\"value\":\"jest\",\"paraId\":36,\"tocIndex\":8},{\"value\":\" 依赖的 \",\"paraId\":36,\"tocIndex\":8},{\"value\":\"pretty-format\",\"paraId\":36,\"tocIndex\":8},{\"value\":\" 版本，经过检查都是⼀致的：\",\"paraId\":36,\"tocIndex\":8},{\"value\":\"{\\n  \\\"devDependencies\\\": {\\n    \\\"pretty-format\\\": \\\"^29.0.0\\\",\\n    \\\"@testing-library/react\\\": \\\"^13.0.0\\\"\\n  }\\n}\\n\",\"paraId\":37,\"tocIndex\":8},{\"value\":\"这个判断不对后，那就是另⼀种情况。dom 中存在\",\"paraId\":38,\"tocIndex\":8},{\"value\":\"空元素\",\"paraId\":38,\"tocIndex\":8},{\"value\":\"，使得 \",\"paraId\":38,\"tocIndex\":8},{\"value\":\"pretty-format\",\"paraId\":38,\"tocIndex\":8},{\"value\":\" 可以感知，但是本身却不影响 \",\"paraId\":38,\"tocIndex\":8},{\"value\":\"innerHTML\",\"paraId\":38,\"tocIndex\":8},{\"value\":\" ，于是就写了⼀个简单的 test case：\",\"paraId\":38,\"tocIndex\":8},{\"value\":\"const holder = document.createElement('div');\\nholder.append('');\\nholder.append(document.createElement('a'));\\nexpect(holder).toMatchSnapshot();\\nconsole.log(holder.innerHTML);\\n\",\"paraId\":39,\"tocIndex\":8},{\"value\":\"得到以下输出：\",\"paraId\":40,\"tocIndex\":8},{\"value\":\"// snapshot\\nexports[`debug exports modules correctly 1`] = `\\n<div>\\n\\n  <a />\\n</div>\\n`;\\n\\n// console.log\\n<a></a>\\n\",\"paraId\":41,\"tocIndex\":8},{\"value\":\"和设想的⼀致，那么就很简单了。那么⼤概率就是 \",\"paraId\":42,\"tocIndex\":8},{\"value\":\"React 18\",\"paraId\":42,\"tocIndex\":8},{\"value\":\" 的 \",\"paraId\":42,\"tocIndex\":8},{\"value\":\"render\",\"paraId\":42,\"tocIndex\":8},{\"value\":\" 会忽略空元素。我们做⼀个简单的实验：\",\"paraId\":42,\"tocIndex\":8},{\"value\":\"import React, { useEffect, useRef, version } from 'react';\\n\\nconst App: React.FC = () => {\\n  const holderRef = useRef<HTMLDivElement>(null);\\n  useEffect(() => {\\n    console.log(holderRef.current?.childNodes);\\n  }, []);\\n  return (\\n    <div ref={holderRef}>\\n      <p>{version}</p>\\n    </div>\\n  );\\n};\\n\\nexport default App;\\n\",\"paraId\":43,\"tocIndex\":8},{\"value\":\"果不其然：\",\"paraId\":44,\"tocIndex\":8},{\"value\":\"React 17\",\"paraId\":45,\"tocIndex\":8},{\"value\":\"React 18\",\"paraId\":45,\"tocIndex\":8},{\"value\":\"NodeList(2) [text, p]\",\"paraId\":45,\"tocIndex\":8},{\"value\":\"NodeList [p]\",\"paraId\":45,\"tocIndex\":8},{\"value\":\"检查⼀下 \",\"paraId\":46,\"tocIndex\":8},{\"value\":\"Fiber\",\"paraId\":46,\"tocIndex\":8},{\"value\":\" 节点信息，可以发现 \",\"paraId\":46,\"tocIndex\":8},{\"value\":\"React 17\",\"paraId\":46,\"tocIndex\":8},{\"value\":\" 会把空元素也作为 \",\"paraId\":46,\"tocIndex\":8},{\"value\":\"Fiber\",\"paraId\":46,\"tocIndex\":8},{\"value\":\" 节点，而 \",\"paraId\":46,\"tocIndex\":8},{\"value\":\"React 18\",\"paraId\":46,\"tocIndex\":8},{\"value\":\" 则会忽略空元素：\",\"paraId\":46,\"tocIndex\":8},{\"value\":\"React 17:\",\"paraId\":47,\"tocIndex\":8},{\"value\":\"React 18:\",\"paraId\":48,\"tocIndex\":8},{\"value\":\"按图索骥就能找到相关 PR：\",\"paraId\":49,\"tocIndex\":8},{\"value\":\"https://github.com/facebook/react/pull/22807\",\"paraId\":50,\"tocIndex\":8},{\"value\":\"antd 需要对 React16、17、18 都进⾏测试，如果 snapshot 不可⾏会造成太⼤成本。所以我们需要对 jest 进⾏改造。\",\"paraId\":51,\"tocIndex\":9},{\"value\":\"enzyme-to-json\",\"paraId\":51,\"tocIndex\":9},{\"value\":\" 则给了我灵感，我们可以修改 snapshot ⽣成逻辑来抹平 React 不同版本之间的 diff：\",\"paraId\":51,\"tocIndex\":9},{\"value\":\"expect.addSnapshotSerializer({\\n  // 判断⼀下是否是 dom 元素，如果是的就⾛我们⾃⼰的序列化逻辑\\n  // 代码简化过，真实判断需要更多逻辑，可以参考 antd 的 setupAfterEnv.ts\\n  test: (element) => element instanceof HTMLElement,\\n  // ...\\n});\\n\",\"paraId\":52,\"tocIndex\":9},{\"value\":\"然后接⼊ \",\"paraId\":53,\"tocIndex\":9},{\"value\":\"pretty-format\",\"paraId\":53,\"tocIndex\":9},{\"value\":\"，添加⾃⼰的逻辑：\",\"paraId\":53,\"tocIndex\":9},{\"value\":\"const htmlContent = format(element, {\\n  plugins: [plugins.DOMCollection, plugins.DOMElement],\\n});\\n\\nexpect.addSnapshotSerializer({\\n  test: '//...',\\n  print: (element) => {\\n    const filtered = htmlContent\\n      .split(/[\\\\n\\\\r]+/)\\n      .filter((line) => line.trim())\\n      .map((line) => line.replace(/\\\\s+$/, ''))\\n      .join('\\\\n');\\n    return filtered;\\n  },\\n});\\n\",\"paraId\":54,\"tocIndex\":9},{\"value\":\"以上，是 antd 测试框架迁移时遇到的一些问题，希望对于需要迁移或者尚未开始编写测试用例的同学提供帮助。也欢迎大家加入 antd 社区，共同为开源奉献自己的力量。\",\"paraId\":55,\"tocIndex\":10}];\n  "],"names":[],"mappings":"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"}