{"version":3,"sources":["components/upload/demo/file-type.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/upload/demo/file-type.tsx?watch=parent';import React, { useState } from 'react';\nimport {\n  FileExcelTwoTone,\n  FilePdfTwoTone,\n  FileWordTwoTone,\n  LoadingOutlined,\n  PaperClipOutlined,\n  PictureTwoTone,\n  PlusOutlined,\n} from '@ant-design/icons';\nimport { Image, Upload } from 'antd';\nimport type { GetProp, UploadFile, UploadProps } from 'antd';\n\ntype FileType = Parameters<GetProp<UploadProps, 'beforeUpload'>>[0];\n\nconst getBase64 = (file: FileType): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result as string);\n    reader.onerror = (error) => reject(error);\n  });\n\nconst App: React.FC = () => {\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [fileList, setFileList] = useState<UploadFile[]>([\n    {\n      uid: '-2',\n      name: 'pdf.pdf',\n      status: 'done',\n      url: 'http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf',\n    },\n    {\n      uid: '-3',\n      name: 'doc.doc',\n      status: 'done',\n      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc',\n    },\n    {\n      uid: '-4',\n      name: 'image.png',\n      status: 'error',\n    },\n    {\n      uid: '-5',\n      name: 'pdf.pdf',\n      status: 'error',\n    },\n    {\n      uid: '-6',\n      name: 'doc.doc',\n      status: 'error',\n    },\n  ]);\n\n  const handlePreview = async (file: UploadFile) => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj as FileType);\n    }\n\n    setPreviewOpen(true);\n    setPreviewImage(file.url || (file.preview as string));\n  };\n\n  const handleChange: UploadProps['onChange'] = ({ fileList: newFileList }) =>\n    setFileList(newFileList);\n\n  const handleIconRender: UploadProps['iconRender'] = (file, listType) => {\n    const fileSufIconList = [\n      { type: <FilePdfTwoTone />, suf: ['.pdf'] },\n      { type: <FileExcelTwoTone />, suf: ['.xlsx', '.xls', '.csv'] },\n      { type: <FileWordTwoTone />, suf: ['.doc', '.docx'] },\n      {\n        type: <PictureTwoTone />,\n        suf: ['.webp', '.svg', '.png', '.gif', '.jpg', '.jpeg', '.jfif', '.bmp', '.dpg'],\n      },\n    ];\n    // console.log(1, file, listType);\n    let icon = file.status === 'uploading' ? <LoadingOutlined /> : <PaperClipOutlined />;\n    if (listType === 'picture' || listType === 'picture-card' || listType === 'picture-circle') {\n      if (listType === 'picture-card' && file.status === 'uploading') {\n        icon = <LoadingOutlined />; // or icon = 'uploading...';\n      } else {\n        fileSufIconList.forEach((item) => {\n          if (item.suf.includes(file.name.slice(file.name.lastIndexOf('.')))) {\n            icon = item.type;\n          }\n        });\n      }\n    }\n    return icon;\n  };\n\n  const uploadButton = (\n    <button style={{ border: 0, background: 'none' }} type=\"button\">\n      <PlusOutlined />\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </button>\n  );\n\n  return (\n    <>\n      <Upload\n        action=\"https://660d2bd96ddfa2943b33731c.mockapi.io/api/upload\"\n        listType=\"picture-card\"\n        fileList={fileList}\n        onPreview={handlePreview}\n        onChange={handleChange}\n        iconRender={handleIconRender}\n      >\n        {fileList.length >= 8 ? null : uploadButton}\n      </Upload>\n      {previewImage && (\n        <Image\n          wrapperStyle={{ display: 'none' }}\n          preview={{\n            visible: previewOpen,\n            onVisibleChange: (visible) => setPreviewOpen(visible),\n            afterOpenChange: (visible) => !visible && setPreviewImage(''),\n          }}\n          src={previewImage}\n        />\n      )}\n    </>\n  );\n};\n\nexport default App;\n"],"names":[],"mappings":"qOAgIA,+CAAA,4BAhIO,oBAA4H,gBAS5H,gBACuB,YAK9B,IAAM,EAAY,AAAC,GACjB,IAAI,QAAQ,CAAC,EAAS,KACpB,IAAM,EAAS,IAAI,WACnB,EAAO,aAAa,CAAC,GACrB,EAAO,MAAM,CAAG,IAAM,EAAQ,EAAO,MAAM,EAC3C,EAAO,OAAO,CAAG,AAAC,GAAU,EAAO,GACrC,OA2GF,EAzGsB,KACpB,GAAM,CAAC,EAAa,EAAe,CAAG,GAAA,UAAQ,EAAC,CAAA,GACzC,CAAC,EAAc,EAAgB,CAAG,GAAA,UAAQ,EAAC,IAC3C,CAAC,EAAU,EAAY,CAAG,GAAA,UAAQ,EAAe,CACrD,CACE,IAAK,KACL,KAAM,UACN,OAAQ,OACR,IAAK,sEACP,EACA,CACE,IAAK,KACL,KAAM,UACN,OAAQ,OACR,IAAK,8EACP,EACA,CACE,IAAK,KACL,KAAM,YACN,OAAQ,OACV,EACA,CACE,IAAK,KACL,KAAM,UACN,OAAQ,OACV,EACA,CACE,IAAK,KACL,KAAM,UACN,OAAQ,OACV,EACD,EAEK,EAAgB,MAAO,IACtB,EAAK,GAAG,EAAK,EAAK,OAAO,EAC5B,CAAA,EAAK,OAAO,CAAG,MAAM,EAAU,EAAK,aAAa,CAAY,EAG/D,EAAe,CAAA,GACf,EAAgB,EAAK,GAAG,EAAK,EAAK,OAAO,EAC3C,EA+BM,EACJ,WAAC,UAAO,MAAO,CAAE,OAAQ,EAAG,WAAY,MAAO,EAAG,KAAK,mBACrD,UAAC,cAAY,KACb,UAAC,OAAI,MAAO,CAAE,UAAW,CAAE,WAAG,cAIlC,MACE,iCACE,UAAC,QAAM,EACL,OAAO,yDACP,SAAS,eACT,SAAU,EACV,UAAW,EACX,SA3CwC,CAAC,CAAE,SAAU,CAAW,CAAE,GACtE,EAAY,GA2CR,WAzC8C,CAAC,EAAM,KACzD,IAAM,EAAkB,CACtB,CAAE,KAAM,UAAC,gBAAc,KAAK,IAAK,CAAC,OAAO,AAAC,EAC1C,CAAE,KAAM,UAAC,kBAAgB,KAAK,IAAK,CAAC,QAAS,OAAQ,OAAO,AAAC,EAC7D,CAAE,KAAM,UAAC,iBAAe,KAAK,IAAK,CAAC,OAAQ,QAAQ,AAAC,EACpD,CACE,KAAM,UAAC,gBAAc,KACrB,IAAK,CAAC,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,OAAQ,OAAO,AAClF,EACD,CAEG,EAAO,AAAgB,cAAhB,EAAK,MAAM,CAAmB,UAAC,iBAAe,KAAM,UAAC,mBAAiB,KAYjF,MAXI,CAAA,AAAa,YAAb,GAA0B,AAAa,iBAAb,GAA+B,AAAa,mBAAb,CAA4B,IACnF,AAAa,iBAAb,GAA+B,AAAgB,cAAhB,EAAK,MAAM,CAC5C,EAAO,UAAC,iBAAe,KAEvB,EAAgB,OAAO,CAAC,AAAC,IACnB,EAAK,GAAG,CAAC,QAAQ,CAAC,EAAK,IAAI,CAAC,KAAK,CAAC,EAAK,IAAI,CAAC,WAAW,CAAC,QAC1D,CAAA,EAAO,EAAK,IAAI,AAAD,EAEnB,IAGG,EACT,WAmBO,EAAS,MAAM,EAAI,EAAI,KAAO,IAEhC,GACC,UAAC,OAAK,EACJ,aAAc,CAAE,QAAS,MAAO,EAChC,QAAS,CACP,QAAS,EACT,gBAAiB,AAAC,GAAY,EAAe,GAC7C,gBAAiB,AAAC,GAAY,CAAC,GAAW,EAAgB,GAC5D,EACA,IAAK,OAKf"}