{"version":3,"sources":["components/table/demo/head.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/table/demo/head.tsx?watch=parent';import React from 'react';\nimport { Table } from 'antd';\nimport type { TableColumnsType, TableProps } from 'antd';\n\ninterface DataType {\n  key: React.Key;\n  name: string;\n  age: number;\n  address: string;\n}\n\nconst columns: TableColumnsType<DataType> = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    showSorterTooltip: { target: 'full-header' },\n    filters: [\n      {\n        text: 'Joe',\n        value: 'Joe',\n      },\n      {\n        text: 'Jim',\n        value: 'Jim',\n      },\n      {\n        text: 'Submenu',\n        value: 'Submenu',\n        children: [\n          {\n            text: 'Green',\n            value: 'Green',\n          },\n          {\n            text: 'Black',\n            value: 'Black',\n          },\n        ],\n      },\n    ],\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n    onFilter: (value, record) => record.name.indexOf(value as string) === 0,\n    sorter: (a, b) => a.name.length - b.name.length,\n    sortDirections: ['descend'],\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => a.age - b.age,\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    filters: [\n      {\n        text: 'London',\n        value: 'London',\n      },\n      {\n        text: 'New York',\n        value: 'New York',\n      },\n    ],\n    onFilter: (value, record) => record.address.indexOf(value as string) === 0,\n  },\n];\n\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sydney No. 1 Lake Park',\n  },\n  {\n    key: '4',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park',\n  },\n];\n\nconst onChange: TableProps<DataType>['onChange'] = (pagination, filters, sorter, extra) => {\n  console.log('params', pagination, filters, sorter, extra);\n};\n\nconst App: React.FC = () => (\n  <Table\n    columns={columns}\n    dataSource={data}\n    onChange={onChange}\n    showSorterTooltip={{ target: 'sorter-icon' }}\n  />\n);\n\nexport default App;\n"],"names":[],"mappings":"uOA6GA,+CAAA,4BA7GO,oBACe,YAUtB,IAAM,EAAsC,CAC1C,CACE,MAAO,OACP,UAAW,OACX,kBAAmB,CAAE,OAAQ,aAAc,EAC3C,QAAS,CACP,CACE,KAAM,MACN,MAAO,KACT,EACA,CACE,KAAM,MACN,MAAO,KACT,EACA,CACE,KAAM,UACN,MAAO,UACP,SAAU,CACR,CACE,KAAM,QACN,MAAO,OACT,EACA,CACE,KAAM,QACN,MAAO,OACT,EACD,AACH,EACD,CAGD,SAAU,CAAC,EAAO,IAAW,AAAyC,IAAzC,EAAO,IAAI,CAAC,OAAO,CAAC,GACjD,OAAQ,CAAC,EAAG,IAAM,EAAE,IAAI,CAAC,MAAM,CAAG,EAAE,IAAI,CAAC,MAAM,CAC/C,eAAgB,CAAC,UAAU,AAC7B,EACA,CACE,MAAO,MACP,UAAW,MACX,iBAAkB,UAClB,OAAQ,CAAC,EAAG,IAAM,EAAE,GAAG,CAAG,EAAE,GAAG,AACjC,EACA,CACE,MAAO,UACP,UAAW,UACX,QAAS,CACP,CACE,KAAM,SACN,MAAO,QACT,EACA,CACE,KAAM,WACN,MAAO,UACT,EACD,CACD,SAAU,CAAC,EAAO,IAAW,AAA4C,IAA5C,EAAO,OAAO,CAAC,OAAO,CAAC,EACtD,EACD,CAEK,EAAO,CACX,CACE,IAAK,IACL,KAAM,aACN,IAAK,GACL,QAAS,0BACX,EACA,CACE,IAAK,IACL,KAAM,YACN,IAAK,GACL,QAAS,wBACX,EACA,CACE,IAAK,IACL,KAAM,YACN,IAAK,GACL,QAAS,wBACX,EACA,CACE,IAAK,IACL,KAAM,UACN,IAAK,GACL,QAAS,wBACX,EACD,CAEK,EAA6C,CAAC,EAAY,EAAS,EAAQ,KAC/E,QAAQ,GAAG,CAAC,SAAU,EAAY,EAAS,EAAQ,GACrD,MAWA,EATsB,IACpB,UAAC,OAAK,EACJ,QAAS,EACT,WAAY,EACZ,SAAU,EACV,kBAAmB,CAAE,OAAQ,aAAc"}