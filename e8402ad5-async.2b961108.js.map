{"version":3,"sources":["docs/blog/happy-work.zh-CN.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/ant-design/ant-design/docs/blog/happy-work.zh-CN.md?watch=parent';\n  export const texts = [{\"value\":\"在 v5 发布会上，我们的设计师团队提过将会提供快乐工作的主题。这部分工作仍然在循序渐进的进行中，但是我们已经有了一些进展，想在这里和大家分享。\",\"paraId\":0},{\"value\":\"你可以直接使用 \",\"paraId\":1,\"tocIndex\":0},{\"value\":\"@ant-design/happy-work-theme\",\"paraId\":1,\"tocIndex\":0},{\"value\":\" 来切换主题特效（或者继续阅读看看我们做了什么）：\",\"paraId\":1,\"tocIndex\":0},{\"value\":\"import { HappyProvider } from '@ant-design/happy-work-theme';\\n\\nexport default () => (\\n  <HappyProvider>\\n    <Button />\\n  </HappyProvider>\\n);\\n\",\"paraId\":2,\"tocIndex\":0},{\"value\":\"Ant Design 中，一个比较有特色的设计交互就是在一些组件上的点击波纹效果。你可以在各个地方看到它们：\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"在过去数个大版本中，这个水波纹特效都无法修改。如果要关闭它，开发者甚至需要做一些“黑魔法”才能实现。所以当设计师提出一个快乐的主题能力时，作为开发者我们觉得这是个好时机来做一些改造了。\",\"paraId\":4,\"tocIndex\":1},{\"value\":\"水波纹实际上是一个 Wave 组件，它会监听子组件的点击事件。然后添加一个 \",\"paraId\":5,\"tocIndex\":2},{\"value\":\"box-shadow\",\"paraId\":5,\"tocIndex\":2},{\"value\":\" 动效产生水波纹：\",\"paraId\":5,\"tocIndex\":2},{\"value\":\"// Sample code.\\nconst Button = (\\n  <Wave>\\n    <button />\\n  </Wave>\\n);\\n\",\"paraId\":6,\"tocIndex\":2},{\"value\":\"在最初的设计中（\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"#40111\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"），我们希望水波纹定制能力属于 Design Token 的一部分。但是这样的话，Design Token 就会变得有些过于复杂，从原本的纯 \",\"paraId\":7,\"tocIndex\":2},{\"value\":\"string | number\",\"paraId\":7,\"tocIndex\":2},{\"value\":\" 类型变成了 \",\"paraId\":7,\"tocIndex\":2},{\"value\":\"string | number | Function<T>\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"。从 API 设计角度看，\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"Function<T>\",\"paraId\":7,\"tocIndex\":2},{\"value\":\" 也有坏味道，未来如果有新的定制需求，Function 的类型会变得愈发发散。所以 \",\"paraId\":7,\"tocIndex\":2},{\"value\":\"#40111\",\"paraId\":7,\"tocIndex\":2},{\"value\":\" 永远停留在 Draft 版本。\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"接着，我们选择将其放在 ConfigProvider 中。ConfigProvider 是一个全局的配置组件，它可以影响到所有的子组件。其 API 也已经囊括了大量组件的配置能力，所以我们只需要添加一个 \",\"paraId\":8,\"tocIndex\":3},{\"value\":\"wave\",\"paraId\":8,\"tocIndex\":3},{\"value\":\" 属性即可：\",\"paraId\":8,\"tocIndex\":3},{\"value\":\"<ConfigProvider wave={{ showEffect }}>\\n  <Button />\\n</ConfigProvider>\\n\",\"paraId\":9,\"tocIndex\":3},{\"value\":\"点击 \",\"paraId\":10,\"tocIndex\":3},{\"value\":\"查看 ConfigProvider 示例\",\"paraId\":11,\"tocIndex\":3},{\"value\":\"。\",\"paraId\":10,\"tocIndex\":3},{\"value\":\"showEffect\",\"paraId\":12,\"tocIndex\":3},{\"value\":\" 方法会告知当前需要产生特效的 DOM 节点，这个节点已经经过封装总会对应到正确的元素上（例如 Button 是其本身，而 Radio 会从 \",\"paraId\":12,\"tocIndex\":3},{\"value\":\"label\",\"paraId\":12,\"tocIndex\":3},{\"value\":\" 中找到 Radio 圆框的节点）。并且告知你它是哪个组件以及当前节点所属的 Design Token：\",\"paraId\":12,\"tocIndex\":3},{\"value\":\"type ShowEffect = (target: HTMLElement, info: { component: string; token: GlobalToken }) => void;\\n\",\"paraId\":13,\"tocIndex\":3},{\"value\":\"通过 Design Token，你可以实现符合当前主题的特效。例如在文章开头的 GIF 中，当主题色变换时我们可以获取当前的主题色并添加对应的特效。\",\"paraId\":14,\"tocIndex\":3},{\"value\":\"快乐工作主题的工作仍然在进行中，我们会在后续的版本中逐步添加更多的能力。当前 \",\"paraId\":15,\"tocIndex\":4},{\"value\":\"@ant-design/happy-work-theme\",\"paraId\":15,\"tocIndex\":4},{\"value\":\" 提供的 HappyProvider 通过 ConfigProvider 实现了水波纹特效的替换，我们计划开发者未来无需做额外的改造，就能通过 HappyProvider 随着版本迭代而逐步添加更多的“快乐”。敬请期待。\",\"paraId\":15,\"tocIndex\":4}];\n  "],"names":[],"mappings":"qOAEe,6CAAA,QADN,YACA,IAAM,EAAQ,CAAC,CAAC,MAAQ,+ZAA2E,OAAS,CAAC,EAAE,CAAC,MAAQ,8CAAW,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,+BAA+B,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,oJAA4B,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,uJAAuJ,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,gRAAyD,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,2iBAA+F,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,oMAAyC,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,aAAa,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,oDAAY,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,+EAA+E,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,mDAAW,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,SAAS,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,iSAA0E,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,kBAAkB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,mCAAU,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,gCAAgC,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,wDAAgB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,cAAc,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,wMAA6C,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,SAAS,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,2DAAmB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,8aAAyG,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,OAAO,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,kCAAS,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,4EAA4E,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,gBAAM,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,2CAAuB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,SAAI,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,aAAa,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,+TAA0E,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,QAAQ,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,kNAAuD,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,sGAAsG,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,qWAA6E,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,wOAA0C,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,+BAA+B,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,4aAAiH,OAAS,GAAG,SAAW,CAAC,EAAE"}