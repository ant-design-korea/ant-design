{"version":3,"sources":["docs/blog/form-names.en-US.md?type=demo"],"sourcesContent":["import React from 'react';\n     import '/home/runner/work/ant-design/ant-design/docs/blog/form-names.en-US.md?watch=parent';\nexport const demos = {\n  'docs-blog-form-names-demo-en-us-0': {\n    component: React.memo(React.lazy(async function() {\n  /**\n * defaultShowCode: true\n */ const { default: React } = await import('react');\nconst { Button: Button, Cascader: Cascader, DatePicker: DatePicker, Form: OriginForm } = await import('antd');\nconst { default: dayjs } = await import('dayjs');\nconst Aggregate = (props)=>{\n    const form = OriginForm.useFormInstance();\n    const { names = [], rules = [], ...rest } = props;\n    const [firstName, ...resetNames] = names;\n    return /*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement(OriginForm.Item, {\n        name: firstName,\n        // Convert the values of names into an array passed to children\n        getValueProps: ()=>{\n            const value = names.map((name)=>form.getFieldValue(name));\n            if (value.every((v)=>v === undefined)) {\n                return undefined;\n            }\n            return {\n                value\n            };\n        },\n        getValueFromEvent: (values)=>{\n            // Set the form store values for names\n            const fieldData = names.map((name, index)=>({\n                    name,\n                    value: values?.[index]\n                }));\n            form.setFields(fieldData);\n            return values?.[0];\n        },\n        rules: rules.map((rule)=>{\n            if (typeof rule === 'object' && rule) {\n                return {\n                    ...rule,\n                    transform: ()=>{\n                        // Set the values of the names fields for the rule value\n                        const values = names.map((name)=>form.getFieldValue(name));\n                        return values;\n                    }\n                };\n            }\n            return rule;\n        }),\n        ...rest\n    }), resetNames.map((name)=>/*#__PURE__*/ React.createElement(OriginForm.Item, {\n            key: name?.toString(),\n            name: name,\n            noStyle: true\n        })));\n};\nconst data = {\n    province: 'Beijing',\n    city: 'Haidian',\n    startTime: dayjs(),\n    endTime: dayjs().add(1, 'month')\n};\nconst options = [\n    {\n        value: 'zhejiang',\n        label: 'Zhejiang',\n        children: [\n            {\n                value: 'hangzhou',\n                label: 'Hangzhou'\n            }\n        ]\n    },\n    {\n        value: 'jiangsu',\n        label: 'Jiangsu',\n        children: [\n            {\n                value: 'nanjing',\n                label: 'Nanjing'\n            }\n        ]\n    }\n];\nconst Form = Object.assign(OriginForm, {\n    Aggregate\n});\nreturn {\n    default: ()=>/*#__PURE__*/ React.createElement(Form, {\n            initialValues: data,\n            onFinish: (value)=>console.log(value)\n        }, /*#__PURE__*/ React.createElement(Form.Aggregate, {\n            label: \"Address\",\n            names: [\n                'province',\n                'city'\n            ],\n            rules: [\n                {\n                    required: true\n                }\n            ]\n        }, /*#__PURE__*/ React.createElement(Cascader, {\n            options: options,\n            placeholder: \"Please select\"\n        })), /*#__PURE__*/ React.createElement(Form.Item, {\n            label: \"Address (use Default)\",\n            name: \"defaultAddress\"\n        }, /*#__PURE__*/ React.createElement(Cascader, {\n            options: options,\n            placeholder: \"Please select\"\n        })), /*#__PURE__*/ React.createElement(Form.Aggregate, {\n            label: \"Date\",\n            names: [\n                'startTime',\n                'endTime'\n            ]\n        }, /*#__PURE__*/ React.createElement(DatePicker.RangePicker, null)), /*#__PURE__*/ React.createElement(Form.Item, null, /*#__PURE__*/ React.createElement(Button, {\n            htmlType: \"submit\",\n            type: \"primary\"\n        }, \"Submit\")))\n};\n\n})),\n    asset: {\n  \"type\": \"BLOCK\",\n  \"id\": \"docs-blog-form-names-demo-en-us-0\",\n  \"refAtomIds\": [],\n  \"dependencies\": {\n    \"index.tsx\": {\n      \"type\": \"FILE\",\n      \"value\": \"import React from 'react';\\nimport type { FormItemProps } from 'antd';\\nimport { Button, Cascader, DatePicker, Form as OriginForm } from 'antd';\\nimport dayjs from 'dayjs';\\n\\ninterface AggregateProps<V = any> extends FormItemProps<V> {\\n  names?: FormItemProps<V>['name'][];\\n}\\n\\nconst Aggregate = (props: AggregateProps) => {\\n  const form = OriginForm.useFormInstance();\\n\\n  const { names = [], rules = [], ...rest } = props;\\n  const [firstName, ...resetNames] = names;\\n\\n  return (\\n    <>\\n      <OriginForm.Item\\n        name={firstName}\\n        // Convert the values of names into an array passed to children\\n        getValueProps={() => {\\n          const value = names.map((name) => form.getFieldValue(name));\\n          if (value.every((v) => v === undefined)) {\\n            return undefined;\\n          }\\n          return { value };\\n        }}\\n        getValueFromEvent={(values) => {\\n          // Set the form store values for names\\n          const fieldData = names.map((name, index) => ({ name, value: values?.[index] }));\\n          form.setFields(fieldData);\\n          return values?.[0];\\n        }}\\n        rules={rules.map((rule) => {\\n          if (typeof rule === 'object' && rule) {\\n            return {\\n              ...rule,\\n              transform: () => {\\n                // Set the values of the names fields for the rule value\\n                const values = names.map((name) => form.getFieldValue(name));\\n                return values;\\n              },\\n            };\\n          }\\n          return rule;\\n        })}\\n        {...rest}\\n      />\\n      {/*  Bind other fields so they can getFieldValue to get values and setFields to set values */}\\n      {resetNames.map((name) => (\\n        <OriginForm.Item key={name?.toString()} name={name} noStyle />\\n      ))}\\n    </>\\n  );\\n};\\n\\nconst data = {\\n  province: 'Beijing',\\n  city: 'Haidian',\\n  startTime: dayjs(),\\n  endTime: dayjs().add(1, 'month'),\\n};\\n\\nconst options = [\\n  {\\n    value: 'zhejiang',\\n    label: 'Zhejiang',\\n    children: [{ value: 'hangzhou', label: 'Hangzhou' }],\\n  },\\n  {\\n    value: 'jiangsu',\\n    label: 'Jiangsu',\\n    children: [{ value: 'nanjing', label: 'Nanjing' }],\\n  },\\n];\\n\\nconst Form = Object.assign(OriginForm, { Aggregate });\\n\\nexport default () => (\\n  <Form initialValues={data} onFinish={(value) => console.log(value)}>\\n    <Form.Aggregate label=\\\"Address\\\" names={['province', 'city']} rules={[{ required: true }]}>\\n      <Cascader options={options} placeholder=\\\"Please select\\\" />\\n    </Form.Aggregate>\\n\\n    <Form.Item label=\\\"Address (use Default)\\\" name=\\\"defaultAddress\\\">\\n      <Cascader options={options} placeholder=\\\"Please select\\\" />\\n    </Form.Item>\\n\\n    {/* Similarly, it also applies <DatePicker.RangePicker /> */}\\n    <Form.Aggregate label=\\\"Date\\\" names={['startTime', 'endTime']}>\\n      <DatePicker.RangePicker />\\n    </Form.Aggregate>\\n\\n    <Form.Item>\\n      <Button htmlType=\\\"submit\\\" type=\\\"primary\\\">\\n        Submit\\n      </Button>\\n    </Form.Item>\\n  </Form>\\n);\"\n    },\n    \"react\": {\n      \"type\": \"NPM\",\n      \"value\": \"18.3.0-canary-c3048aab4-20240326\"\n    },\n    \"antd\": {\n      \"type\": \"NPM\",\n      \"value\": \"5.20.1\"\n    },\n    \"dayjs\": {\n      \"type\": \"NPM\",\n      \"value\": \"1.11.12\"\n    }\n  },\n  \"entry\": \"index.tsx\"\n},\n    context: {\n  \"react\": require('react'),\n  \"antd\": require('antd'),\n  \"dayjs\": require('dayjs')\n},\n    renderOpts: {\n          \n          compile: async (...args) => {\n            return (await import('/home/runner/work/ant-design/ant-design/node_modules/dumi/dist/client/misc/reactDemoCompiler.js')).default(...args);\n          },\n        },\n  },\n};"],"names":[],"mappings":"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"}