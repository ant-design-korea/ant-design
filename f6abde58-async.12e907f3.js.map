{"version":3,"sources":["components/table/demo/drag-sorting.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/table/demo/drag-sorting.tsx?watch=parent';import React, { useState } from 'react';\nimport type { DragEndEvent } from '@dnd-kit/core';\nimport { DndContext, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { restrictToVerticalAxis } from '@dnd-kit/modifiers';\nimport {\n  arrayMove,\n  SortableContext,\n  useSortable,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Table } from 'antd';\nimport type { TableColumnsType } from 'antd';\n\ninterface DataType {\n  key: string;\n  name: string;\n  age: number;\n  address: string;\n}\n\nconst columns: TableColumnsType<DataType> = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n  },\n];\n\ninterface RowProps extends React.HTMLAttributes<HTMLTableRowElement> {\n  'data-row-key': string;\n}\n\nconst Row = (props: RowProps) => {\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({\n    id: props['data-row-key'],\n  });\n\n  const style: React.CSSProperties = {\n    ...props.style,\n    transform: CSS.Translate.toString(transform),\n    transition,\n    cursor: 'move',\n    ...(isDragging ? { position: 'relative', zIndex: 9999 } : {}),\n  };\n\n  return <tr {...props} ref={setNodeRef} style={style} {...attributes} {...listeners} />;\n};\n\nconst App: React.FC = () => {\n  const [dataSource, setDataSource] = useState([\n    {\n      key: '1',\n      name: 'John Brown',\n      age: 32,\n      address:\n        'Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text Long text',\n    },\n    {\n      key: '2',\n      name: 'Jim Green',\n      age: 42,\n      address: 'London No. 1 Lake Park',\n    },\n    {\n      key: '3',\n      name: 'Joe Black',\n      age: 32,\n      address: 'Sidney No. 1 Lake Park',\n    },\n  ]);\n\n  const sensors = useSensors(\n    useSensor(PointerSensor, {\n      activationConstraint: {\n        // https://docs.dndkit.com/api-documentation/sensors/pointer#activation-constraints\n        distance: 1,\n      },\n    }),\n  );\n\n  const onDragEnd = ({ active, over }: DragEndEvent) => {\n    if (active.id !== over?.id) {\n      setDataSource((prev) => {\n        const activeIndex = prev.findIndex((i) => i.key === active.id);\n        const overIndex = prev.findIndex((i) => i.key === over?.id);\n        return arrayMove(prev, activeIndex, overIndex);\n      });\n    }\n  };\n\n  return (\n    <DndContext sensors={sensors} modifiers={[restrictToVerticalAxis]} onDragEnd={onDragEnd}>\n      <SortableContext\n        // rowKey array\n        items={dataSource.map((i) => i.key)}\n        strategy={verticalListSortingStrategy}\n      >\n        <Table\n          components={{\n            body: {\n              row: Row,\n            },\n          }}\n          rowKey=\"key\"\n          columns={columns}\n          dataSource={dataSource}\n        />\n      </SortableContext>\n    </DndContext>\n  );\n};\n\nexport default App;\n"],"names":[],"mappings":"qOAwHA,+CAAA,4BAxHO,oBAA8H,gBAEpE,gBAC1B,gBAMhC,gBACa,gBACE,YAUtB,IAAM,EAAsC,CAC1C,CACE,MAAO,OACP,UAAW,MACb,EACA,CACE,MAAO,MACP,UAAW,KACb,EACA,CACE,MAAO,UACP,UAAW,SACb,EACD,CAMK,EAAM,AAAC,IACX,GAAM,CAAE,WAAA,CAAU,CAAE,UAAA,CAAS,CAAE,WAAA,CAAU,CAAE,UAAA,CAAS,CAAE,WAAA,CAAU,CAAE,WAAA,CAAU,CAAE,CAAG,GAAA,aAAW,EAAC,CAC3F,GAAI,CAAK,CAAC,eAAe,AAC3B,GAEM,EAA6B,CACjC,GAAG,EAAM,KAAK,CACd,UAAW,KAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,GAClC,WAAA,EACA,OAAQ,OACR,GAAI,EAAa,CAAE,SAAU,WAAY,OAAQ,IAAK,EAAI,CAAC,CAAC,AAC9D,EAEA,MAAO,UAAC,MAAI,GAAG,CAAK,CAAE,IAAK,EAAY,MAAO,EAAQ,GAAG,CAAU,CAAG,GAAG,CAAS,GACpF,MAkEA,EAhEsB,KACpB,GAAM,CAAC,EAAY,EAAc,CAAG,GAAA,UAAQ,EAAC,CAC3C,CACE,IAAK,IACL,KAAM,aACN,IAAK,GACL,QACE,iUACJ,EACA,CACE,IAAK,IACL,KAAM,YACN,IAAK,GACL,QAAS,wBACX,EACA,CACE,IAAK,IACL,KAAM,YACN,IAAK,GACL,QAAS,wBACX,EACD,EAEK,EAAU,GAAA,YAAU,EACxB,GAAA,WAAS,EAAC,eAAa,CAAE,CACvB,qBAAsB,CAEpB,SAAU,CACZ,CACF,IAaF,MACE,UAAC,YAAU,EAAC,QAAS,EAAS,UAAW,CAAC,wBAAsB,CAAC,CAAE,UAXnD,CAAC,CAAE,OAAA,CAAM,CAAE,KAAA,CAAI,CAAgB,IAC3C,EAAO,EAAE,UAAK,SAAA,EAAM,EAAE,GACxB,EAAc,AAAC,IACb,IAAM,EAAc,EAAK,SAAS,CAAC,AAAC,GAAM,EAAE,GAAG,GAAK,EAAO,EAAE,EACvD,EAAY,EAAK,SAAS,CAAC,AAAC,GAAM,EAAE,GAAG,UAAK,SAAA,EAAM,EAAE,GAC1D,MAAO,GAAA,WAAS,EAAC,EAAM,EAAa,GACtC,GAEJ,WAII,UAAC,iBAAe,EAEd,MAAO,EAAW,GAAG,CAAC,AAAC,GAAM,EAAE,GAAG,EAClC,SAAU,6BAA2B,UAErC,UAAC,OAAK,EACJ,WAAY,CACV,KAAM,CACJ,IAAK,CACP,CACF,EACA,OAAO,MACP,QAAS,EACT,WAAY,QAKtB"}