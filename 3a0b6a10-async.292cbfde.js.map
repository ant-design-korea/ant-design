{"version":3,"sources":["components/table/demo/custom-empty.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/table/demo/custom-empty.tsx?watch=parent';import type { GetProp } from 'antd';\nimport { Button, Empty, ConfigProvider, Table } from 'antd';\nimport React, { useState } from 'react';\n\nconst genFakeData = (count = 5) =>\n  Array.from({ length: count }).map((_, index) => ({\n    key: index,\n    name: `Edward King ${index}`,\n    age: 32 + index,\n    address: `London, Park Lane no. ${index}`,\n  }));\n\nconst renderEmpty: GetProp<typeof ConfigProvider, 'renderEmpty'> = (componentName) => {\n  if (componentName === 'Table.filter' /** ðŸ‘ˆ 5.20.0+ */) {\n    return <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"No Filter(Custom)\" />;\n  }\n};\n\nfunction App() {\n  const [dataSource, setDataSource] = useState(genFakeData);\n\n  const handleToggle = () => {\n    setDataSource(dataSource.length ? [] : genFakeData(Math.floor(Math.random() * 10)));\n  };\n\n  const columns: GetProp<typeof Table, 'columns'> = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      filters: dataSource.length\n        ? [\n            { text: '>=35', value: 'gte35' },\n            { text: '<18', value: 'lt18' },\n          ]\n        : [],\n    },\n    {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n    },\n  ];\n\n  const toggleButton = (\n    <Button type=\"primary\" onClick={handleToggle}>\n      Toggle Data\n    </Button>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={renderEmpty}>\n      {dataSource.length ? toggleButton : null}\n      <div style={{ marginBlock: 8 }} />\n      <Table\n        bordered\n        dataSource={dataSource}\n        columns={columns}\n        locale={{\n          emptyText: <Empty description=\"No Data\">{toggleButton}</Empty>,\n        }}\n      />\n    </ConfigProvider>\n  );\n}\n\nexport default App;\n"],"names":[],"mappings":"uOAuEA,+CAAA,4BAvEO,oBAC8C,gBACrB,YAEhC,IAAM,EAAc,CAAC,EAAQ,CAAC,GAC5B,MAAM,IAAI,CAAC,CAAE,OAAQ,CAAM,GAAG,GAAG,CAAC,CAAC,EAAG,IAAW,CAAA,CAC/C,IAAK,EACL,KAAM,CAAC,YAAY,EAAE,EAAM,CAAC,CAC5B,IAAK,GAAK,EACV,QAAS,CAAC,sBAAsB,EAAE,EAAM,CAAC,AAC3C,CAAA,GAEI,EAA6D,AAAC,IAClE,GAAI,AAAkB,iBAAlB,EACF,MAAO,UAAC,OAAK,EAAC,MAAO,OAAK,CAAC,sBAAsB,CAAE,YAAY,sBAEnE,MAuDA,EArDA,WACE,GAAM,CAAC,EAAY,EAAc,CAAG,GAAA,UAAQ,EAAC,GAMvC,EAA4C,CAChD,CACE,MAAO,OACP,UAAW,OACX,IAAK,MACP,EACA,CACE,MAAO,MACP,UAAW,MACX,IAAK,MACL,QAAS,EAAW,MAAM,CACtB,CACE,CAAE,KAAM,OAAQ,MAAO,OAAQ,EAC/B,CAAE,KAAM,MAAO,MAAO,MAAO,EAC9B,CACD,EAAE,AACR,EACA,CACE,MAAO,UACP,UAAW,UACX,IAAK,SACP,EACD,CAEK,EACJ,UAAC,QAAM,EAAC,KAAK,UAAU,QA7BJ,KACnB,EAAc,EAAW,MAAM,CAAG,EAAE,CAAG,EAAY,KAAK,KAAK,CAAC,AAAgB,GAAhB,KAAK,MAAM,MAC3E,WA2BgD,gBAKhD,MACE,WAAC,gBAAc,EAAC,YAAa,YAC1B,EAAW,MAAM,CAAG,EAAe,KACpC,UAAC,OAAI,MAAO,CAAE,YAAa,CAAE,IAC7B,UAAC,OAAK,EACJ,QAAQ,IACR,WAAY,EACZ,QAAS,EACT,OAAQ,CACN,UAAW,UAAC,OAAK,EAAC,YAAY,mBAAW,GAC3C,OAIR"}