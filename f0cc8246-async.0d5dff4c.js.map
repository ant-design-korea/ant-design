{"version":3,"sources":[".dumi/theme/layouts/GlobalLayout.tsx"],"sourcesContent":["import React, { Suspense, useCallback, useEffect } from 'react';\nimport {\n  createCache,\n  extractStyle,\n  legacyNotSelectorLinter,\n  NaNLinter,\n  parentSelectorLinter,\n  StyleProvider,\n} from '@ant-design/cssinjs';\nimport { HappyProvider } from '@ant-design/happy-work-theme';\nimport { getSandpackCssText } from '@codesandbox/sandpack-react';\nimport { theme as antdTheme, App } from 'antd';\nimport type { MappingAlgorithm } from 'antd';\nimport type { DirectionType, ThemeConfig } from 'antd/es/config-provider';\nimport { createSearchParams, useOutlet, useSearchParams, useServerInsertedHTML } from 'dumi';\n\nimport { DarkContext } from '../../hooks/useDark';\nimport useLayoutState from '../../hooks/useLayoutState';\nimport useLocation from '../../hooks/useLocation';\nimport type { ThemeName } from '../common/ThemeSwitch';\nimport SiteThemeProvider from '../SiteThemeProvider';\nimport type { SiteContextProps } from '../slots/SiteContext';\nimport SiteContext from '../slots/SiteContext';\n\nconst ThemeSwitch = React.lazy(() => import('../common/ThemeSwitch'));\n\ntype Entries<T> = { [K in keyof T]: [K, T[K]] }[keyof T][];\ntype SiteState = Partial<Omit<SiteContextProps, 'updateSiteContext'>>;\n\nconst RESPONSIVE_MOBILE = 768;\nexport const ANT_DESIGN_NOT_SHOW_BANNER = 'ANT_DESIGN_NOT_SHOW_BANNER';\n\n// const styleCache = createCache();\n// if (typeof global !== 'undefined') {\n//   (global as any).styleCache = styleCache;\n// }\n\n// Compatible with old anchors\nif (typeof window !== 'undefined') {\n  const hashId = location.hash.slice(1);\n  if (hashId.startsWith('components-')) {\n    if (!document.querySelector(`#${hashId}`)) {\n      location.hash = `#${hashId.replace(/^components-/, '')}`;\n    }\n  }\n}\n\nconst getAlgorithm = (themes: ThemeName[] = []) =>\n  themes\n    .map((theme) => {\n      if (theme === 'dark') {\n        return antdTheme.darkAlgorithm;\n      }\n      if (theme === 'compact') {\n        return antdTheme.compactAlgorithm;\n      }\n      return null as unknown as MappingAlgorithm;\n    })\n    .filter(Boolean);\n\nconst GlobalLayout: React.FC = () => {\n  const outlet = useOutlet();\n  const { pathname } = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [{ theme = [], direction, isMobile, bannerVisible = false }, setSiteState] =\n    useLayoutState<SiteState>({\n      isMobile: false,\n      direction: 'ltr',\n      theme: [],\n      bannerVisible: false,\n    });\n\n  const updateSiteConfig = useCallback(\n    (props: SiteState) => {\n      setSiteState((prev) => ({ ...prev, ...props }));\n\n      // updating `searchParams` will clear the hash\n      const oldSearchStr = searchParams.toString();\n\n      let nextSearchParams: URLSearchParams = searchParams;\n      (Object.entries(props) as Entries<SiteContextProps>).forEach(([key, value]) => {\n        if (key === 'direction') {\n          if (value === 'rtl') {\n            nextSearchParams.set('direction', 'rtl');\n          } else {\n            nextSearchParams.delete('direction');\n          }\n        }\n        if (key === 'theme') {\n          nextSearchParams = createSearchParams({\n            ...nextSearchParams,\n            theme: value.filter((t) => t !== 'light'),\n          });\n\n          document\n            .querySelector('html')\n            ?.setAttribute('data-prefers-color', value.includes('dark') ? 'dark' : 'light');\n        }\n      });\n\n      if (nextSearchParams.toString() !== oldSearchStr) {\n        setSearchParams(nextSearchParams);\n      }\n    },\n    [searchParams, setSearchParams],\n  );\n\n  const updateMobileMode = () => {\n    updateSiteConfig({ isMobile: window.innerWidth < RESPONSIVE_MOBILE });\n  };\n\n  useEffect(() => {\n    const _theme = searchParams.getAll('theme') as ThemeName[];\n    const _direction = searchParams.get('direction') as DirectionType;\n    // const storedBannerVisibleLastTime =\n    //   localStorage && localStorage.getItem(ANT_DESIGN_NOT_SHOW_BANNER);\n    // const storedBannerVisible =\n    //   storedBannerVisibleLastTime && dayjs().diff(dayjs(storedBannerVisibleLastTime), 'day') >= 1;\n\n    setSiteState({\n      theme: _theme,\n      direction: _direction === 'rtl' ? 'rtl' : 'ltr',\n      // bannerVisible: storedBannerVisibleLastTime ? !!storedBannerVisible : true,\n    });\n    document.documentElement.setAttribute(\n      'data-prefers-color',\n      _theme.includes('dark') ? 'dark' : 'light',\n    );\n    // Handle isMobile\n    updateMobileMode();\n\n    window.addEventListener('resize', updateMobileMode);\n    return () => {\n      window.removeEventListener('resize', updateMobileMode);\n    };\n  }, []);\n\n  const siteContextValue = React.useMemo<SiteContextProps>(\n    () => ({\n      direction,\n      updateSiteConfig,\n      theme: theme!,\n      isMobile: isMobile!,\n      bannerVisible,\n    }),\n    [isMobile, direction, updateSiteConfig, theme, bannerVisible],\n  );\n\n  const themeConfig = React.useMemo<ThemeConfig>(\n    () => ({\n      algorithm: getAlgorithm(theme),\n      token: { motion: !theme.includes('motion-off') },\n      cssVar: true,\n      hashed: false,\n    }),\n    [theme],\n  );\n\n  const [styleCache] = React.useState(() => createCache());\n\n  useServerInsertedHTML(() => {\n    const styleText = extractStyle(styleCache, {\n      plain: true,\n      types: 'style',\n    });\n    // biome-ignore lint/security/noDangerouslySetInnerHtml: only used in .dumi\n    return <style data-type=\"antd-cssinjs\" dangerouslySetInnerHTML={{ __html: styleText }} />;\n  });\n\n  useServerInsertedHTML(() => {\n    const styleText = extractStyle(styleCache, {\n      plain: true,\n      types: ['cssVar', 'token'],\n    });\n    return (\n      <style\n        data-type=\"antd-css-var\"\n        data-rc-order=\"prepend\"\n        data-rc-priority=\"-9999\"\n        // biome-ignore lint/security/noDangerouslySetInnerHtml: only used in .dumi\n        dangerouslySetInnerHTML={{ __html: styleText }}\n      />\n    );\n  });\n\n  useServerInsertedHTML(() => (\n    <style\n      data-sandpack=\"true\"\n      id=\"sandpack\"\n      // biome-ignore lint/security/noDangerouslySetInnerHtml: only used in .dumi\n      dangerouslySetInnerHTML={{ __html: getSandpackCssText() }}\n    />\n  ));\n\n  const demoPage = pathname.startsWith('/~demos');\n\n  // ============================ Render ============================\n  let content: React.ReactNode = outlet;\n\n  // Demo page should not contain App component\n  if (!demoPage) {\n    content = (\n      <App>\n        {outlet}\n        <Suspense>\n          <ThemeSwitch\n            value={theme}\n            onChange={(nextTheme) => updateSiteConfig({ theme: nextTheme })}\n          />\n        </Suspense>\n      </App>\n    );\n  }\n\n  return (\n    <DarkContext.Provider value={theme.includes('dark')}>\n      <StyleProvider\n        cache={styleCache}\n        linters={[legacyNotSelectorLinter, parentSelectorLinter, NaNLinter]}\n      >\n        <SiteContext.Provider value={siteContextValue}>\n          <SiteThemeProvider theme={themeConfig}>\n            <HappyProvider disabled={!theme.includes('happy-work')}>{content}</HappyProvider>\n          </SiteThemeProvider>\n        </SiteContext.Provider>\n      </StyleProvider>\n    </DarkContext.Provider>\n  );\n};\n\nexport default GlobalLayout;\n"],"names":[],"mappings":"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"}