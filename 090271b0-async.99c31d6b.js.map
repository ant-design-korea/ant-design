{"version":3,"sources":["components/table/demo/row-selection-custom.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/ant-design/ant-design/components/table/demo/row-selection-custom.tsx?watch=parent';import React, { useState } from 'react';\nimport { Table } from 'antd';\nimport type { TableColumnsType, TableProps } from 'antd';\n\ntype TableRowSelection<T extends object = object> = TableProps<T>['rowSelection'];\n\ninterface DataType {\n  key: React.Key;\n  name: string;\n  age: number;\n  address: string;\n}\n\nconst columns: TableColumnsType<DataType> = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n  },\n];\n\nconst data: DataType[] = [];\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`,\n  });\n}\n\nconst App: React.FC = () => {\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n\n  const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n    console.log('selectedRowKeys changed: ', newSelectedRowKeys);\n    setSelectedRowKeys(newSelectedRowKeys);\n  };\n\n  const rowSelection: TableRowSelection<DataType> = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    selections: [\n      Table.SELECTION_ALL,\n      Table.SELECTION_INVERT,\n      Table.SELECTION_NONE,\n      {\n        key: 'odd',\n        text: 'Select Odd Row',\n        onSelect: (changeableRowKeys) => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changeableRowKeys.filter((_, index) => {\n            if (index % 2 !== 0) {\n              return false;\n            }\n            return true;\n          });\n          setSelectedRowKeys(newSelectedRowKeys);\n        },\n      },\n      {\n        key: 'even',\n        text: 'Select Even Row',\n        onSelect: (changeableRowKeys) => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changeableRowKeys.filter((_, index) => {\n            if (index % 2 !== 0) {\n              return true;\n            }\n            return false;\n          });\n          setSelectedRowKeys(newSelectedRowKeys);\n        },\n      },\n    ],\n  };\n\n  return <Table rowSelection={rowSelection} columns={columns} dataSource={data} />;\n};\n\nexport default App;\n"],"names":[],"mappings":"uOAuFA,+CAAA,4BAvFO,oBAAsI,gBACvH,YAYtB,IAAM,EAAsC,CAC1C,CACE,MAAO,OACP,UAAW,MACb,EACA,CACE,MAAO,MACP,UAAW,KACb,EACA,CACE,MAAO,UACP,UAAW,SACb,EACD,CAEK,EAAmB,EAAE,CAC3B,IAAK,IAAI,EAAI,EAAG,EAAI,GAAI,IACtB,EAAK,IAAI,CAAC,CACR,IAAK,EACL,KAAM,CAAC,YAAY,EAAE,EAAE,CAAC,CACxB,IAAK,GACL,QAAS,CAAC,sBAAsB,EAAE,EAAE,CAAC,AACvC,OAoDF,EAjDsB,KACpB,GAAM,CAAC,EAAiB,EAAmB,CAAG,GAAA,UAAQ,EAAc,EAAE,EAOhE,EAA4C,CAChD,gBAAA,EACA,SAPqB,AAAC,IACtB,QAAQ,GAAG,CAAC,4BAA6B,GACzC,EAAmB,GACrB,EAKE,WAAY,CACV,OAAK,CAAC,aAAa,CACnB,OAAK,CAAC,gBAAgB,CACtB,OAAK,CAAC,cAAc,CACpB,CACE,IAAK,MACL,KAAM,iBACN,SAAU,AAAC,IAQT,EANqB,EAAkB,MAAM,CAAC,CAAC,EAAG,IAC5C,EAAQ,GAAM,IAMtB,CACF,EACA,CACE,IAAK,OACL,KAAM,kBACN,SAAU,AAAC,IAQT,EANqB,EAAkB,MAAM,CAAC,CAAC,EAAG,IAC5C,EAAQ,GAAM,IAMtB,CACF,EACD,AACH,EAEA,MAAO,UAAC,OAAK,EAAC,aAAc,EAAc,QAAS,EAAS,WAAY,IAC1E"}