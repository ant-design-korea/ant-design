{"version":3,"sources":["docs/blog/build-ghost.zh-CN.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/ant-design/ant-design/docs/blog/build-ghost.zh-CN.md?watch=parent';\n  export const texts = [{\"value\":\"在 antd-mobile 的维护过程中，遇到了一个恼人的幽灵。它在本地构建时几乎不会出现，但是在 github 的 workflow 中，却几乎每次都会出现。在经过一番折腾后，终于找到了它的踪迹。\",\"paraId\":0},{\"value\":\"在 antd-mobile 的 CI 中，有一个任务会对构建产物进行检查，会对文件大小变化进行提示。但是这个任务在最近几个月中，经常会出现构建失败的情况，如下图所示：\",\"paraId\":1,\"tocIndex\":0},{\"value\":\"查看日志，会得到 CSS 文件报错的信息：\",\"paraId\":2,\"tocIndex\":0},{\"value\":\"从构建流程看，似乎是在 2x 构建时报错（antd-mobile 会额外打一份 2x 的样式以适配高清屏）：\",\"paraId\":3,\"tocIndex\":0},{\"value\":\"[09:44:16] Using gulpfile ~/work/ant-design-mobile/ant-design-mobile/gulpfile.js\\n[09:44:16] Starting 'default'...\\n[09:44:16] Starting 'clean'...\\n[09:44:17] Finished 'clean' after 286 ms\\n[09:44:17] Starting 'buildES'...\\n[09:44:26] Finished 'buildES' after 8.77 s\\n[09:44:26] Starting 'buildCJS'...\\n[09:44:27] Finished 'buildCJS' after 1.72 s\\n[09:44:27] Starting 'buildDeclaration'...\\n[09:44:27] Starting 'buildStyle'...\\n[09:44:28] Finished 'buildStyle' after 682 ms\\n[09:44:34] Finished 'buildDeclaration' after 6.5 s\\n[09:44:34] Starting 'copyAssets'...\\n[09:44:34] Finished 'copyAssets' after 2.37 ms\\n[09:44:34] Starting 'copyMetaFiles'...\\n[09:44:34] Finished 'copyMetaFiles' after 4.64 ms\\n[09:44:34] Starting 'generatePackageJSON'...\\n[09:44:34] Finished 'generatePackageJSON' after 2.72 ms\\n[09:44:34] Starting 'buildBundles'...\\n[09:44:45] Finished 'buildBundles' after 11 s\\n[09:44:45] Starting 'init2xFolder'...\\n[09:44:46] Finished 'init2xFolder' after 811 ms\\n[09:44:46] Starting 'build2xCSS'...\\n[09:44:46] 'build2xCSS' errored after 126 ms\\n[09:44:46] CssSyntaxError in plugin \\\"gulp-postcss\\\"\\n\",\"paraId\":4,\"tocIndex\":0},{\"value\":\"而 \",\"paraId\":5,\"tocIndex\":0},{\"value\":\"build2xCSS\",\"paraId\":5,\"tocIndex\":0},{\"value\":\" 的 \",\"paraId\":5,\"tocIndex\":0},{\"value\":\"style.css\",\"paraId\":5,\"tocIndex\":0},{\"value\":\" 来源于 \",\"paraId\":5,\"tocIndex\":0},{\"value\":\"buildStyle\",\"paraId\":5,\"tocIndex\":0},{\"value\":\" 的产物，所以可以确定是 \",\"paraId\":5,\"tocIndex\":0},{\"value\":\"buildStyle\",\"paraId\":5,\"tocIndex\":0},{\"value\":\" 任务中出现了问题。在查看对应的文件 \",\"paraId\":5,\"tocIndex\":0},{\"value\":\"/lib/bundle/style.css\",\"paraId\":5,\"tocIndex\":0},{\"value\":\" 后，发现了如下的内容：\",\"paraId\":5,\"tocIndex\":0},{\"value\":\"style.css\",\"paraId\":6,\"tocIndex\":0},{\"value\":\" 第一行为压缩的样式，而后是不完整的未压缩的样式。对比成功的产物会发现第二行往后的样式是非预期的内容：\",\"paraId\":6,\"tocIndex\":0},{\"value\":\"而根据未压缩的内容进行查询，会发现这些内容在之前的压缩内容中已经存在了：\",\"paraId\":7,\"tocIndex\":0},{\"value\":\"因而猜测可能是构建时，先生成了未压缩的内容，然后又进行了压缩操作。但是又存在异步问题，第二个任务在第一个未完成时就开始执行了，导致了内容的重复。更诡异的是，如果是异步问题，CI 上生成的错误文件内容却出奇的一致。无论构建多少次，只要是失败的就必定是相同的内容。\",\"paraId\":8,\"tocIndex\":0},{\"value\":\"在查看了 \",\"paraId\":9,\"tocIndex\":1},{\"value\":\"gulpfile.js\",\"paraId\":9,\"tocIndex\":1},{\"value\":\" 文件后，发现 \",\"paraId\":9,\"tocIndex\":1},{\"value\":\"buildStyle\",\"paraId\":9,\"tocIndex\":1},{\"value\":\" 使用的是 vite 构建。考虑到可能是构建版本的问题，所以将 vite 的版本从 \",\"paraId\":9,\"tocIndex\":1},{\"value\":\"3.x\",\"paraId\":9,\"tocIndex\":1},{\"value\":\" 升级到了 \",\"paraId\":9,\"tocIndex\":1},{\"value\":\"5.x\",\"paraId\":9,\"tocIndex\":1},{\"value\":\"，但是问题依旧存在。于是又看了一下相关配置：\",\"paraId\":9,\"tocIndex\":1},{\"value\":\"{\\n    root: process.cwd(),\\n    mode: env,\\n    logLevel: 'silent',\\n    define: { 'process.env.NODE_ENV': `\\\"${env}\\\"` },\\n    build: {\\n      cssTarget: 'chrome61',\\n      lib: {\\n        formats,\\n        ...\\n      },\\n      rollupOptions: {\\n       output: {\\n          dir: './lib/bundle',\\n          globals: {\\n            'react': 'React',\\n            'react-dom': 'ReactDOM',\\n          },\\n        },\\n      },\\n      minify: isProd ? 'esbuild' : false,\\n    },\\n  }\\n\",\"paraId\":10,\"tocIndex\":1},{\"value\":\"通过关闭 \",\"paraId\":11,\"tocIndex\":1},{\"value\":\"logLevel: 'silent'\",\"paraId\":11,\"tocIndex\":1},{\"value\":\" 配置后再次构建，我们可以看到更多的日志内容：\",\"paraId\":11,\"tocIndex\":1},{\"value\":\"看来接近答案了，antd-mobile 在构建时会通过 \",\"paraId\":12,\"tocIndex\":1},{\"value\":\"lib.formats\",\"paraId\":12,\"tocIndex\":1},{\"value\":\" 创建 \",\"paraId\":12,\"tocIndex\":1},{\"value\":\"es\",\"paraId\":12,\"tocIndex\":1},{\"value\":\"、\",\"paraId\":12,\"tocIndex\":1},{\"value\":\"cjs\",\"paraId\":12,\"tocIndex\":1},{\"value\":\"、\",\"paraId\":12,\"tocIndex\":1},{\"value\":\"umd\",\"paraId\":12,\"tocIndex\":1},{\"value\":\" 三份副本。而每个 \",\"paraId\":12,\"tocIndex\":1},{\"value\":\"format\",\"paraId\":12,\"tocIndex\":1},{\"value\":\" 都会生成一次 \",\"paraId\":12,\"tocIndex\":1},{\"value\":\"style.css\",\"paraId\":12,\"tocIndex\":1},{\"value\":\" 文件。如果仅是不断覆盖文件，那应该只是额外的浪费了构建资源而已，最后总是会被压缩的 \",\"paraId\":12,\"tocIndex\":1},{\"value\":\"style.css\",\"paraId\":12,\"tocIndex\":1},{\"value\":\" 覆盖掉，不应该出现同时覆盖的问题。于是去看了一下调用 vite 构建的部分：\",\"paraId\":12,\"tocIndex\":1},{\"value\":\"async function buildBundles(cb) {\\n  const envs = ['development', 'production'];\\n  const configs = envs.map((env) =>\\n    getViteConfigForPackage({\\n      env,\\n      formats: ['es', 'cjs', 'umd'],\\n      external: ['react', 'react-dom'],\\n    }),\\n  );\\n\\n  await Promise.all(configs.map((config) => vite.build(config)));\\n  cb && cb();\\n}\\n\",\"paraId\":13,\"tocIndex\":1},{\"value\":\"原来是使用了 \",\"paraId\":14,\"tocIndex\":1},{\"value\":\"Promise.all\",\"paraId\":14,\"tocIndex\":1},{\"value\":\" 来并发构建，而 vite 的构建是异步的。这使得 \",\"paraId\":14,\"tocIndex\":1},{\"value\":\"style.css\",\"paraId\":14,\"tocIndex\":1},{\"value\":\" 存在竞争问题。vite 调用的 rollup 会对文件进行清除，然后进行写操作。由于压缩样式需要进行 uglify，所以它总是慢于非压缩版本。当 rollup 都执行完清理操作开始写文件后，非压缩版本虽然前面一部分由于清理被删除但是后续内容仍然继续被写入，而压缩版本则从头开始写入。当两者都写入完毕后，就会出现错误并且内容却在每次 CI 构建下都一致的情况。修复也很简单，直接改成顺序执行即可：\",\"paraId\":14,\"tocIndex\":1},{\"value\":\"for (const config of configs) {\\n  await vite.build(config);\\n}\\n\",\"paraId\":15,\"tocIndex\":1},{\"value\":\"（当然，后续还需要对脚本进行优化。使其跳过非必要的 \",\"paraId\":16,\"tocIndex\":1},{\"value\":\"style.css\",\"paraId\":16,\"tocIndex\":1},{\"value\":\" 样式生成）\",\"paraId\":16,\"tocIndex\":1},{\"value\":\"随着 github CI 的性能变化，原本很难遇到的幽灵反而变得可以稳定重现，颇为有趣。从而也使得我们有机会可以定位到问题之所在。\",\"paraId\":17,\"tocIndex\":2}];\n  "],"names":[],"mappings":"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"}